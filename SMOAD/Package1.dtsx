<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="11/12/2023 1:21:42 PM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="DESKTOP-50UO8IT"
  DTS:CreatorName="DESKTOP-50UO8IT\anton"
  DTS:DTSID="{4754BFB0-4AEE-4B57-B24C-23074F75477A}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="16.0.5314.0"
  DTS:LocaleID="1033"
  DTS:ObjectName="Package1"
  DTS:PackageType="5"
  DTS:VersionBuild="226"
  DTS:VersionGUID="{BBB65F9E-4E0F-4385-A5E1-BDAE08D03001}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:Variables />
  <DTS:LoggingOptions
    DTS:FilterKind="0"
    DTS:LoggingMode="1">
    <DTS:Property
      DTS:DataType="8"
      DTS:Name="EventFilter">3,7,OnError,14,OnPostValidate,9,OnWarning</DTS:Property>
    <DTS:Property
      DTS:EventName="OnError"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">-1</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">-1</DTS:Property>
    </DTS:Property>
    <DTS:Property
      DTS:EventName="OnPostValidate"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">-1</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">-1</DTS:Property>
    </DTS:Property>
    <DTS:Property
      DTS:EventName="OnWarning"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">-1</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">-1</DTS:Property>
    </DTS:Property>
  </DTS:LoggingOptions>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Add sale facts"
      DTS:CreationName="Microsoft.Pipeline"
      DTS:Description="Data Flow Task"
      DTS:DTSID="{6A017E79-7C3B-420E-BFD3-D9C05F27405F}"
      DTS:ExecutableType="Microsoft.Pipeline"
      DTS:LocaleID="-1"
      DTS:ObjectName="Add sale facts"
      DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0"
        DTS:LoggingMode="1" />
      <DTS:ObjectData>
        <pipeline
          version="1">
          <components>
            <component
              refId="Package\Add sale facts\Conditional Split"
              componentClassID="Microsoft.ConditionalSplit"
              contactInfo="Conditional Split;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Routes data rows to different outputs depending on the content of the data. Use conditions (SSIS expressions) to specify which rows are routed. For example, separate records that need to be cleaned from those that are ready to be loaded or route only a subset of records."
              name="Conditional Split"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\Add sale facts\Conditional Split.Inputs[Conditional Split Input]"
                  description="Input to the Conditional Split Transformation"
                  name="Conditional Split Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Add sale facts\Conditional Split.Inputs[Conditional Split Input].Columns[NumericProductKey]"
                      cachedDataType="numeric"
                      cachedName="NumericProductKey"
                      cachedPrecision="18"
                      lineageId="Package\Add sale facts\Data Conversion.Outputs[Data Conversion Output].Columns[NumericProductKey]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Add sale facts\Conditional Split.Outputs[Null product keys]"
                  description="Output 1 of the Conditional Split Transformation"
                  errorOrTruncationOperation="Computation"
                  errorRowDisposition="FailComponent"
                  exclusionGroup="1"
                  name="Null product keys"
                  synchronousInputId="Package\Add sale facts\Conditional Split.Inputs[Conditional Split Input]"
                  truncationRowDisposition="FailComponent">
                  <properties>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                      name="Expression">[ISNULL](#{Package\Add sale facts\Data Conversion.Outputs[Data Conversion Output].Columns[NumericProductKey]})</property>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the friendly version of the expression. This expression version uses column names."
                      expressionType="Notify"
                      name="FriendlyExpression">ISNULL(NumericProductKey)</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                      name="EvaluationOrder">0</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Add sale facts\Conditional Split.Outputs[Non Null product Keys]"
                  description="Default Output of the Conditional Split Transformation"
                  exclusionGroup="1"
                  name="Non Null product Keys"
                  synchronousInputId="Package\Add sale facts\Conditional Split.Inputs[Conditional Split Input]">
                  <properties>
                    <property
                      dataType="System.Boolean"
                      name="IsDefaultOut">true</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Add sale facts\Conditional Split.Outputs[Conditional Split Error Output]"
                  description="Error Output of the Conditional Split Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Conditional Split Error Output"
                  synchronousInputId="Package\Add sale facts\Conditional Split.Inputs[Conditional Split Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Add sale facts\Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Add sale facts\Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Add sale facts\Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Add sale facts\Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Add sale facts\Data Conversion"
              componentClassID="Microsoft.DataConvert"
              contactInfo="Data Conversion;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Data Conversion"
              name="Data Conversion"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\Add sale facts\Data Conversion.Inputs[Data Conversion Input]"
                  name="Data Conversion Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Add sale facts\Data Conversion.Inputs[Data Conversion Input].Columns[ProductKey]"
                      cachedDataType="r8"
                      cachedName="ProductKey"
                      lineageId="Package\Add sale facts\Excel Source.Outputs[Excel Source Output].Columns[ProductKey]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Add sale facts\Data Conversion.Outputs[Data Conversion Output]"
                  exclusionGroup="1"
                  name="Data Conversion Output"
                  synchronousInputId="Package\Add sale facts\Data Conversion.Inputs[Data Conversion Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Add sale facts\Data Conversion.Outputs[Data Conversion Output].Columns[NumericProductKey]"
                      dataType="numeric"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Add sale facts\Data Conversion.Outputs[Data Conversion Output].Columns[NumericProductKey]"
                      name="NumericProductKey"
                      precision="18"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\Add sale facts\Excel Source.Outputs[Excel Source Output].Columns[ProductKey]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Add sale facts\Data Conversion.Outputs[Data Conversion Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Data Conversion Error Output"
                  synchronousInputId="Package\Add sale facts\Data Conversion.Inputs[Data Conversion Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Add sale facts\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Add sale facts\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Add sale facts\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Add sale facts\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Add sale facts\Derived Column"
              componentClassID="Microsoft.DerivedColumn"
              contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
              name="Derived Column"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\Add sale facts\Derived Column.Inputs[Derived Column Input]"
                  description="Input to the Derived Column Transformation"
                  name="Derived Column Input">
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Add sale facts\Derived Column.Outputs[Derived Column Output]"
                  description="Default Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  name="Derived Column Output"
                  synchronousInputId="Package\Add sale facts\Derived Column.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Add sale facts\Derived Column.Outputs[Derived Column Output].Columns[CurrencyKey]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="3"
                      lineageId="Package\Add sale facts\Derived Column.Outputs[Derived Column Output].Columns[CurrencyKey]"
                      name="CurrencyKey"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">(DT_WSTR,3)"RU"</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">(DT_WSTR,3)"RU"</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Add sale facts\Derived Column.Outputs[Derived Column Output].Columns[TaxAmount]"
                      dataType="decimal"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Add sale facts\Derived Column.Outputs[Derived Column Output].Columns[TaxAmount]"
                      name="TaxAmount"
                      scale="18"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">(DT_DECIMAL,18)0.13</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">(DT_DECIMAL,18)0.13</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Add sale facts\Derived Column.Outputs[Derived Column Error Output]"
                  description="Error Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Derived Column Error Output"
                  synchronousInputId="Package\Add sale facts\Derived Column.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Add sale facts\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Add sale facts\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Add sale facts\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Add sale facts\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Add sale facts\Excel Source"
              componentClassID="Microsoft.ExcelSource"
              contactInfo="Excel Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Excel Source"
              name="Excel Source"
              usesDispositions="true"
              version="1">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">Sales_data$</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">SELECT * FROM [Sheet1$]</property>
                <property
                  dataType="System.String"
                  description="The variable that contains the SQL command to be executed."
                  name="SqlCommandVariable"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">0</property>
                <property
                  dataType="System.String"
                  description="The mapping from parameters in the SQL command to variables."
                  name="ParameterMapping"></property>
              </properties>
              <connections>
                <connection
                  refId="Package\Add sale facts\Excel Source.Connections[OleDbConnection]"
                  connectionManagerID="{CB875803-EACD-437B-AB8E-71795215D4CE}:external"
                  connectionManagerRefId="Project.ConnectionManagers[Excel Connection Manager]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\Add sale facts\Excel Source.Outputs[Excel Source Output]"
                  name="Excel Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Add sale facts\Excel Source.Outputs[Excel Source Output].Columns[ProductKey]"
                      dataType="r8"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="RedirectRow"
                      externalMetadataColumnId="Package\Add sale facts\Excel Source.Outputs[Excel Source Output].ExternalColumns[ProductKey]"
                      lineageId="Package\Add sale facts\Excel Source.Outputs[Excel Source Output].Columns[ProductKey]"
                      name="ProductKey"
                      truncationRowDisposition="RedirectRow" />
                    <outputColumn
                      refId="Package\Add sale facts\Excel Source.Outputs[Excel Source Output].Columns[SalesOrderLineKey]"
                      dataType="r8"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Add sale facts\Excel Source.Outputs[Excel Source Output].ExternalColumns[SalesOrderLineKey]"
                      lineageId="Package\Add sale facts\Excel Source.Outputs[Excel Source Output].Columns[SalesOrderLineKey]"
                      name="SalesOrderLineKey"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Add sale facts\Excel Source.Outputs[Excel Source Output].Columns[ResellerKey]"
                      dataType="r8"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Add sale facts\Excel Source.Outputs[Excel Source Output].ExternalColumns[ResellerKey]"
                      lineageId="Package\Add sale facts\Excel Source.Outputs[Excel Source Output].Columns[ResellerKey]"
                      name="ResellerKey"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Add sale facts\Excel Source.Outputs[Excel Source Output].Columns[CustomerKey]"
                      dataType="r8"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Add sale facts\Excel Source.Outputs[Excel Source Output].ExternalColumns[CustomerKey]"
                      lineageId="Package\Add sale facts\Excel Source.Outputs[Excel Source Output].Columns[CustomerKey]"
                      name="CustomerKey"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Add sale facts\Excel Source.Outputs[Excel Source Output].Columns[OrderDateKey]"
                      dataType="r8"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Add sale facts\Excel Source.Outputs[Excel Source Output].ExternalColumns[OrderDateKey]"
                      lineageId="Package\Add sale facts\Excel Source.Outputs[Excel Source Output].Columns[OrderDateKey]"
                      name="OrderDateKey"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Add sale facts\Excel Source.Outputs[Excel Source Output].Columns[DueDateKey]"
                      dataType="r8"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Add sale facts\Excel Source.Outputs[Excel Source Output].ExternalColumns[DueDateKey]"
                      lineageId="Package\Add sale facts\Excel Source.Outputs[Excel Source Output].Columns[DueDateKey]"
                      name="DueDateKey"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Add sale facts\Excel Source.Outputs[Excel Source Output].Columns[ShipDateKey]"
                      dataType="r8"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Add sale facts\Excel Source.Outputs[Excel Source Output].ExternalColumns[ShipDateKey]"
                      lineageId="Package\Add sale facts\Excel Source.Outputs[Excel Source Output].Columns[ShipDateKey]"
                      name="ShipDateKey"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Add sale facts\Excel Source.Outputs[Excel Source Output].Columns[SalesTerritoryKey]"
                      dataType="r8"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Add sale facts\Excel Source.Outputs[Excel Source Output].ExternalColumns[SalesTerritoryKey]"
                      lineageId="Package\Add sale facts\Excel Source.Outputs[Excel Source Output].Columns[SalesTerritoryKey]"
                      name="SalesTerritoryKey"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Add sale facts\Excel Source.Outputs[Excel Source Output].Columns[Order Quantity]"
                      dataType="r8"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Add sale facts\Excel Source.Outputs[Excel Source Output].ExternalColumns[Order Quantity]"
                      lineageId="Package\Add sale facts\Excel Source.Outputs[Excel Source Output].Columns[Order Quantity]"
                      name="Order Quantity"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Add sale facts\Excel Source.Outputs[Excel Source Output].Columns[Unit Price]"
                      dataType="cy"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Add sale facts\Excel Source.Outputs[Excel Source Output].ExternalColumns[Unit Price]"
                      lineageId="Package\Add sale facts\Excel Source.Outputs[Excel Source Output].Columns[Unit Price]"
                      name="Unit Price"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Add sale facts\Excel Source.Outputs[Excel Source Output].Columns[Extended Amount]"
                      dataType="cy"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Add sale facts\Excel Source.Outputs[Excel Source Output].ExternalColumns[Extended Amount]"
                      lineageId="Package\Add sale facts\Excel Source.Outputs[Excel Source Output].Columns[Extended Amount]"
                      name="Extended Amount"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Add sale facts\Excel Source.Outputs[Excel Source Output].Columns[Unit Price Discount Pct]"
                      dataType="r8"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Add sale facts\Excel Source.Outputs[Excel Source Output].ExternalColumns[Unit Price Discount Pct]"
                      lineageId="Package\Add sale facts\Excel Source.Outputs[Excel Source Output].Columns[Unit Price Discount Pct]"
                      name="Unit Price Discount Pct"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Add sale facts\Excel Source.Outputs[Excel Source Output].Columns[Product Standard Cost]"
                      dataType="cy"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Add sale facts\Excel Source.Outputs[Excel Source Output].ExternalColumns[Product Standard Cost]"
                      lineageId="Package\Add sale facts\Excel Source.Outputs[Excel Source Output].Columns[Product Standard Cost]"
                      name="Product Standard Cost"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Add sale facts\Excel Source.Outputs[Excel Source Output].Columns[Total Product Cost]"
                      dataType="cy"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Add sale facts\Excel Source.Outputs[Excel Source Output].ExternalColumns[Total Product Cost]"
                      lineageId="Package\Add sale facts\Excel Source.Outputs[Excel Source Output].Columns[Total Product Cost]"
                      name="Total Product Cost"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Add sale facts\Excel Source.Outputs[Excel Source Output].Columns[Sales Amount]"
                      dataType="cy"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Add sale facts\Excel Source.Outputs[Excel Source Output].ExternalColumns[Sales Amount]"
                      lineageId="Package\Add sale facts\Excel Source.Outputs[Excel Source Output].Columns[Sales Amount]"
                      name="Sales Amount"
                      truncationRowDisposition="FailComponent" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Add sale facts\Excel Source.Outputs[Excel Source Output].ExternalColumns[ProductKey]"
                      dataType="r8"
                      name="ProductKey" />
                    <externalMetadataColumn
                      refId="Package\Add sale facts\Excel Source.Outputs[Excel Source Output].ExternalColumns[SalesOrderLineKey]"
                      dataType="r8"
                      name="SalesOrderLineKey" />
                    <externalMetadataColumn
                      refId="Package\Add sale facts\Excel Source.Outputs[Excel Source Output].ExternalColumns[ResellerKey]"
                      dataType="r8"
                      name="ResellerKey" />
                    <externalMetadataColumn
                      refId="Package\Add sale facts\Excel Source.Outputs[Excel Source Output].ExternalColumns[CustomerKey]"
                      dataType="r8"
                      name="CustomerKey" />
                    <externalMetadataColumn
                      refId="Package\Add sale facts\Excel Source.Outputs[Excel Source Output].ExternalColumns[OrderDateKey]"
                      dataType="r8"
                      name="OrderDateKey" />
                    <externalMetadataColumn
                      refId="Package\Add sale facts\Excel Source.Outputs[Excel Source Output].ExternalColumns[DueDateKey]"
                      dataType="r8"
                      name="DueDateKey" />
                    <externalMetadataColumn
                      refId="Package\Add sale facts\Excel Source.Outputs[Excel Source Output].ExternalColumns[ShipDateKey]"
                      dataType="r8"
                      name="ShipDateKey" />
                    <externalMetadataColumn
                      refId="Package\Add sale facts\Excel Source.Outputs[Excel Source Output].ExternalColumns[SalesTerritoryKey]"
                      dataType="r8"
                      name="SalesTerritoryKey" />
                    <externalMetadataColumn
                      refId="Package\Add sale facts\Excel Source.Outputs[Excel Source Output].ExternalColumns[Order Quantity]"
                      dataType="r8"
                      name="Order Quantity" />
                    <externalMetadataColumn
                      refId="Package\Add sale facts\Excel Source.Outputs[Excel Source Output].ExternalColumns[Unit Price]"
                      dataType="cy"
                      name="Unit Price" />
                    <externalMetadataColumn
                      refId="Package\Add sale facts\Excel Source.Outputs[Excel Source Output].ExternalColumns[Extended Amount]"
                      dataType="cy"
                      name="Extended Amount" />
                    <externalMetadataColumn
                      refId="Package\Add sale facts\Excel Source.Outputs[Excel Source Output].ExternalColumns[Unit Price Discount Pct]"
                      dataType="r8"
                      name="Unit Price Discount Pct" />
                    <externalMetadataColumn
                      refId="Package\Add sale facts\Excel Source.Outputs[Excel Source Output].ExternalColumns[Product Standard Cost]"
                      dataType="cy"
                      name="Product Standard Cost" />
                    <externalMetadataColumn
                      refId="Package\Add sale facts\Excel Source.Outputs[Excel Source Output].ExternalColumns[Total Product Cost]"
                      dataType="cy"
                      name="Total Product Cost" />
                    <externalMetadataColumn
                      refId="Package\Add sale facts\Excel Source.Outputs[Excel Source Output].ExternalColumns[Sales Amount]"
                      dataType="cy"
                      name="Sales Amount" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\Add sale facts\Excel Source.Outputs[Excel Source Error Output]"
                  isErrorOut="true"
                  name="Excel Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Add sale facts\Excel Source.Outputs[Excel Source Error Output].Columns[SalesOrderLineKey]"
                      dataType="r8"
                      lineageId="Package\Add sale facts\Excel Source.Outputs[Excel Source Error Output].Columns[SalesOrderLineKey]"
                      name="SalesOrderLineKey" />
                    <outputColumn
                      refId="Package\Add sale facts\Excel Source.Outputs[Excel Source Error Output].Columns[ResellerKey]"
                      dataType="r8"
                      lineageId="Package\Add sale facts\Excel Source.Outputs[Excel Source Error Output].Columns[ResellerKey]"
                      name="ResellerKey" />
                    <outputColumn
                      refId="Package\Add sale facts\Excel Source.Outputs[Excel Source Error Output].Columns[CustomerKey]"
                      dataType="r8"
                      lineageId="Package\Add sale facts\Excel Source.Outputs[Excel Source Error Output].Columns[CustomerKey]"
                      name="CustomerKey" />
                    <outputColumn
                      refId="Package\Add sale facts\Excel Source.Outputs[Excel Source Error Output].Columns[ProductKey]"
                      dataType="r8"
                      lineageId="Package\Add sale facts\Excel Source.Outputs[Excel Source Error Output].Columns[ProductKey]"
                      name="ProductKey" />
                    <outputColumn
                      refId="Package\Add sale facts\Excel Source.Outputs[Excel Source Error Output].Columns[OrderDateKey]"
                      dataType="r8"
                      lineageId="Package\Add sale facts\Excel Source.Outputs[Excel Source Error Output].Columns[OrderDateKey]"
                      name="OrderDateKey" />
                    <outputColumn
                      refId="Package\Add sale facts\Excel Source.Outputs[Excel Source Error Output].Columns[DueDateKey]"
                      dataType="r8"
                      lineageId="Package\Add sale facts\Excel Source.Outputs[Excel Source Error Output].Columns[DueDateKey]"
                      name="DueDateKey" />
                    <outputColumn
                      refId="Package\Add sale facts\Excel Source.Outputs[Excel Source Error Output].Columns[ShipDateKey]"
                      dataType="r8"
                      lineageId="Package\Add sale facts\Excel Source.Outputs[Excel Source Error Output].Columns[ShipDateKey]"
                      name="ShipDateKey" />
                    <outputColumn
                      refId="Package\Add sale facts\Excel Source.Outputs[Excel Source Error Output].Columns[SalesTerritoryKey]"
                      dataType="r8"
                      lineageId="Package\Add sale facts\Excel Source.Outputs[Excel Source Error Output].Columns[SalesTerritoryKey]"
                      name="SalesTerritoryKey" />
                    <outputColumn
                      refId="Package\Add sale facts\Excel Source.Outputs[Excel Source Error Output].Columns[Order Quantity]"
                      dataType="r8"
                      lineageId="Package\Add sale facts\Excel Source.Outputs[Excel Source Error Output].Columns[Order Quantity]"
                      name="Order Quantity" />
                    <outputColumn
                      refId="Package\Add sale facts\Excel Source.Outputs[Excel Source Error Output].Columns[Unit Price]"
                      dataType="cy"
                      lineageId="Package\Add sale facts\Excel Source.Outputs[Excel Source Error Output].Columns[Unit Price]"
                      name="Unit Price" />
                    <outputColumn
                      refId="Package\Add sale facts\Excel Source.Outputs[Excel Source Error Output].Columns[Extended Amount]"
                      dataType="cy"
                      lineageId="Package\Add sale facts\Excel Source.Outputs[Excel Source Error Output].Columns[Extended Amount]"
                      name="Extended Amount" />
                    <outputColumn
                      refId="Package\Add sale facts\Excel Source.Outputs[Excel Source Error Output].Columns[Unit Price Discount Pct]"
                      dataType="r8"
                      lineageId="Package\Add sale facts\Excel Source.Outputs[Excel Source Error Output].Columns[Unit Price Discount Pct]"
                      name="Unit Price Discount Pct" />
                    <outputColumn
                      refId="Package\Add sale facts\Excel Source.Outputs[Excel Source Error Output].Columns[Product Standard Cost]"
                      dataType="cy"
                      lineageId="Package\Add sale facts\Excel Source.Outputs[Excel Source Error Output].Columns[Product Standard Cost]"
                      name="Product Standard Cost" />
                    <outputColumn
                      refId="Package\Add sale facts\Excel Source.Outputs[Excel Source Error Output].Columns[Total Product Cost]"
                      dataType="cy"
                      lineageId="Package\Add sale facts\Excel Source.Outputs[Excel Source Error Output].Columns[Total Product Cost]"
                      name="Total Product Cost" />
                    <outputColumn
                      refId="Package\Add sale facts\Excel Source.Outputs[Excel Source Error Output].Columns[Sales Amount]"
                      dataType="cy"
                      lineageId="Package\Add sale facts\Excel Source.Outputs[Excel Source Error Output].Columns[Sales Amount]"
                      name="Sales Amount" />
                    <outputColumn
                      refId="Package\Add sale facts\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Add sale facts\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Add sale facts\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Add sale facts\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Add sale facts\Log xml excel parsing"
              componentClassID="Microsoft.ManagedComponentHost"
              contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;13"
              description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
              name="Log xml excel parsing"
              version="13">
              <properties>
                <property
                  dataType="System.String"
                  description="Stores the source code of the component"
                  isArray="true"
                  name="SourceCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="30">
                    <arrayElement
                      dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public override void ProcessInput(int InputID, string InputName, PipelineBuffer Buffer, OutputNameMap OutputMap)
    {

        if (InputName.Equals(@"Input 0", StringComparison.Ordinal))
        {
            Input0_ProcessInput(new Input0Buffer(Buffer, GetColumnIndexes(InputID), OutputMap));
        }

    }

    public virtual void Input0_ProcessInput(Input0Buffer Buffer)
    {
        while (Buffer.NextRow())
        {
            Input0_ProcessInputRow(Buffer);
        }
    }

    public virtual void Input0_ProcessInputRow(Input0Buffer Row)
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Data;
using System.Text;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    public override void PreExecute()
    {
        base.PreExecute();
    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called once for every row that passes through the component from Input0.
    ///
    /// Example of reading a value from a column in the the row:
    ///  string zipCode = Row.ZipCode
    ///
    /// Example of writing a value to a column in the row:
    ///  Row.ZipCode = zipCode
    /// </summary>
    /// <param name="Row">The row that is currently passing through the component</param>
    public override void Input0_ProcessInputRow(Input0Buffer Row)
    {
        var errorText = $"Error on column {Row.ErrorColumn}({ComponentMetaData.GetErrorDescription(Row.ErrorCode)})." +
            $"Error happend with {Row.ProductKey} sales order line" +
            $" Error code: {Row.ErrorCode}";

        Row.ErrorDescription = errorText;
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Input0Buffer: ScriptBuffer

{
    public Input0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public Int32 ErrorCode
    {
        get
        {
            return Buffer.GetInt32(BufferColumnIndexes[0]);
        }
    }
    public bool ErrorCode_IsNull
    {
        get
        {
            return IsNull(0);
        }
    }

    public Int32 ErrorColumn
    {
        get
        {
            return Buffer.GetInt32(BufferColumnIndexes[1]);
        }
    }
    public bool ErrorColumn_IsNull
    {
        get
        {
            return IsNull(1);
        }
    }

    public Double ProductKey
    {
        get
        {
            return Buffer.GetDouble(BufferColumnIndexes[2]);
        }
    }
    public bool ProductKey_IsNull
    {
        get
        {
            return IsNull(2);
        }
    }

    public String ErrorDescription
    {
        set
        {
            this[3] = value;
        }
    }
    public bool ErrorDescription_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(3);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public bool NextRow()
    {
        return base.NextRow();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_0e69f83c5a164f97a97be75874eb0502.Properties.Settings.get_Default():SC_0e69f83c5a164f97a97be75874eb0502.Properties.Sett" +
    "ings")]

namespace SC_0e69f83c5a164f97a97be75874eb0502.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_0e69f83c5a164f97a97be75874eb0502.csproj]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{24a13314-35fc-4324-800d-69bf6038b2b9}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_0e69f83c5a164f97a97be75874eb0502</RootNamespace>
    <AssemblyName>SC_C3015A5DCE5B4011975485FC3C479C8F</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptComponent" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" />
        <Host Name="ScriptComponent" GeneratedNamespace="SC_0e69f83c5a164f97a97be75874eb0502" IconIndex="0"></Host>
        <ProjectClient>
          <HostIdentifier>SSIS_SC160</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Project]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>SC_0e69f83c5a164f97a97be75874eb0502</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>SC_0e69f83c5a164f97a97be75874eb0502</msb:DisplayName>
    <msb:ProjectId>{A80D7B61-0E76-4E23-B74A-C6F302B2D0A9}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="SC_0e69f83c5a164f97a97be75874eb0502.csproj" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="main.cs" />
    <msb:File Include="BufferWrapper.cs" />
    <msb:File Include="ComponentWrapper.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="Properties\Settings.Designer.cs" />
  </msb:ItemGroup>
</c:Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_0e69f83c5a164f97a97be75874eb0502")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_0e69f83c5a164f97a97be75874eb0502")]
[assembly: AssemblyCopyright("Copyright @  2023")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.0.0")]
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_0e69f83c5a164f97a97be75874eb0502.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_0e69f83c5a164f97a97be75874eb0502.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_0e69f83c5a164f97a97be75874eb0502.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_0e69f83c5a164f97a97be75874eb0502.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_0e69f83c5a164f97a97be75874eb0502.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Stores the binary representation of the component"
                  isArray="true"
                  name="BinaryCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="2">
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_C3015A5DCE5B4011975485FC3C479C8F.dll]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAKmYVGUAAAAAAAAAAOAAIiALATAAABYAAAAIAAAAAAAAxjQA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAHQ0AABPAAAAAEAAAEgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAzBQAAAAgAAAAFgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAEgEAAAAQAAAAAYAAAAYAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAHgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAACo
NAAAAAAAAEgAAAACAAUAQCIAAHwRAAABAAAAAAAAALwzAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKBAAAAoqHgIoEQAACioTMAQAXgAAAAEAABFyAQAAcANv
CAAABowaAAABAigSAAAKA28GAAAGbxMAAAooFAAACnI1AABwA28KAAAGjB0AAAEoFQAACnKFAABw
A28GAAAGjBoAAAEoFQAACigWAAAKCgMGbwwAAAYqHgIoEAAABioqAgMEBSgXAAAKKlICexgAAAoC
exkAAAoWlG8aAAAKKiICFigbAAAKKlICexgAAAoCexkAAAoXlG8aAAAKKiICFygbAAAKKlICexgA
AAoCexkAAAoYlG8cAAAKKiICGCgbAAAKKiYCGQMoHQAACipaAywIAhkoHgAACipypwAAcHMfAAAK
eh4CKCAAAAoqHgIoIQAACip+AigiAAAKAgJzFAAABn0BAAAEAgJzFQAABn0CAAAEKpIEckQBAHAa
byMAAAosFQIFAgMoJAAACg4EcwUAAAZvEgAABipKKwcCA28TAAAGA28OAAAGLfEqBio6AiglAAAK
AgN9AwAABCo6AiglAAAKAgN9BAAABCoeAiglAAAKKq5+BQAABC0eclQBAHDQBwAAAigmAAAKbycA
AApzKAAACoAFAAAEfgUAAAQqGn4GAAAEKh4CgAYAAAQqGn4HAAAEKh4CKCkAAAoqLnMbAAAGgAcA
AAQqAABCU0pCAQABAAAAAAAMAAAAdjQuMC4zMDMxOQAAAAAFAGwAAAAcBgAAI34AAIgGAABEBwAA
I1N0cmluZ3MAAAAAzA0AAMgBAAAjVVMAlA8AABAAAAAjR1VJRAAAAKQPAADYAQAAI0Jsb2IAAAAA
AAAAAgAAAVcVogEJAQAAAPoBMwAWAAABAAAAIgAAAAgAAAAHAAAAHAAAAA8AAAApAAAAEAAAAAEA
AAADAAAACwAAAAwAAAABAAAABQAAAAEAAAAAADoDAQAAAAAABgA0Al0FBgDIAl0FBgCAAUoFDwDR
BQAABgCtASkEBgAXAikEBgD4ASkEBgCvAikEBgBUAikEBgBtAikEBgDEASkEBgDfAQMDCgCIAs0A
CgDzBM0ADgDkBM0ACgCbBM0ACgClBs0ABgBoBtEDBgBjAUoFBgAEBX0FBgCPBBQEEgAzASQDEgCU
ASQDEgAbAf8DBgBIAV0FBgAdANEDFgABABQFBgAdA9EDBgCYANEDBgA7BNEDBgB+BNEDBgDuANED
BgCfANEDBgA5BykEAAAAACMAAAAAAAEAAQABABAA5AMAABAAAQABAAEAEADXBAAAOQABAAUAAQAQ
AIcGAABFAAEAEAABABAATgYAAEkAAwAUAAEAEAAPBgAASQAEABUAAAAQAIQF4AVJAAUAFgAAARAA
PgbgBWEABwAaAAYATgaeAAYADwaiAAEAlQamAAEAlQamABEA2AOqABEACwGuABEAdwCyAFAgAAAA
AMYA5gIGAAEAWCAAAAAAxgDxAgYAAQBgIAAAAADGAAcHtgABAMogAAAAAIYYPQUGAAIA0iAAAAAA
hhg9BT0AAgDdIAAAAACGCIcAvAAFAPIgAAAAAIYIYgNkAAUA+yAAAAAAhgjvA7wABQAQIQAAAACG
CHcDZAAFABkhAAAAAIYIJgfAAAUALiEAAAAAhgiqA2QABQA3IQAAAACGCFUEEAAFAEEhAAAAAIYI
jgPEAAYAWCEAAAAAhgAeB2QABwBgIQAAAACGAG8GZAAHAGghAAAAAIYYPQUGAAcAiCEAAAAAxgD6
BskABwCtIQAAAADGAfMGtgALAMAhAAAAAMYBBwe2AAwAwiEAAAAAhhg9BdMADQDRIQAAAACGGD0F
0wAOAOAhAAAAAIMYPQUGAA8A6CEAAAAAkwgABdkADwAUIgAAAACTCPMA3gAPABsiAAAAAJMI/wDj
AA8AIyIAAAAAlgh7BukAEAAqIgAAAACGGD0FBgAQADIiAAAAAJEYQwXuABAAAAABACIHAAABAPkE
AAACABkGAAADAKkEAAABAP0CAAABAP0CAAABACwAAAACAMMAAAADAPkEAAAEAKkEAAABAPkEAAAB
ACIHAAABAKsGAAABAKsGAAABAP0CCQA9BQEAEQA9BQYAGQA9BQoAKQA9BRAAMQA9BRAAOQA9BRAA
QQA9BRAASQA9BRAAUQA9BRAAWQA9BRAAYQA9BRAAaQA9BQYAmQA9BQYAuQA9BRUAyQA9BQYAiQDm
AgYAiQDxAgYAiQBYAB8A2QBqBCQA4QBhBikA4QBhBjAA4QBaBjYAcQA9BT0AcQD5BEcAcQAZBksA
eQAaAE8AcQC5A1QAeQCVAFkAcQDIA14AcQDAAwEA8QA9BRAAcQAeB2QAcQBvBmQAiQA9BQYA4QBH
BmgAiQAtBm8AkQA9BQYAAQGxAHUAAQE1B34AoQA9BYQAwQA9BQYALgALABEBLgATABoBLgAbADkB
LgAjAEIBLgArAGsBLgAzAGsBLgA7AGsBLgBDAEIBLgBLAHEBLgBTAGsBLgBbAIgBQwBjANIB4QB7
ANIB4wBrANIBKQFzADkBSQFzADkBGwADAAEABwAJAAgACwAAAIsA8gAAAGYD9gAAAPMD8gAAAHsD
9gAAACoH+gAAAK4D9gAAAG0E/gAAAJID9gAAAAQFAgEAABMBBwEAAH8GDAECAAYAAwACAAcABQAC
AAgABwACAAkACQACAAoACwACAAsADQABAAwADwABAA0AEQACABcAEwACABgAFQABABkAFQACABoA
FwAEgAAAAQAAAAAAAAAAAAAAAAA0AAAABAAAAAAAAAAAAAAAjABuAAAAAAAQAAAAAAAAAAAAAACV
ALUGAAAAABAAAAAAAAAAAAAAAJUA0gYAAAAABAAAAAAAAAAAAAAAjADRAwAAAAAQAAAAAAAAAAAA
AACVALMEAAAAAAAAAAABAAAAjgUAAAAAAElEVFNDb21wb25lbnRNZXRhRGF0YTEwMABHZXRJbnQz
MgA8TW9kdWxlPgBJbnB1dElEAFNDX0MzMDE1QTVEQ0U1QjQwMTE5NzU0ODVGQzNDNDc5QzhGAGdl
dF9Db21wb25lbnRNZXRhRGF0YQBtc2NvcmxpYgBkZWZhdWx0SW5zdGFuY2UAZ2V0X0Vycm9yQ29k
ZQBHZXREb3VibGUAUnVudGltZVR5cGVIYW5kbGUAR2V0VHlwZUZyb21IYW5kbGUASW5wdXROYW1l
AE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlBpcGVsaW5lAFR5cGUAZ2V0X0N1bHR1cmUAc2V0X0N1
bHR1cmUAcmVzb3VyY2VDdWx0dXJlAEFwcGxpY2F0aW9uU2V0dGluZ3NCYXNlAEVkaXRvckJyb3dz
YWJsZVN0YXRlAENvbXBpbGVyR2VuZXJhdGVkQXR0cmlidXRlAERlYnVnZ2VyTm9uVXNlckNvZGVB
dHRyaWJ1dGUARGVidWdnYWJsZUF0dHJpYnV0ZQBFZGl0b3JCcm93c2FibGVBdHRyaWJ1dGUAQXNz
ZW1ibHlUaXRsZUF0dHJpYnV0ZQBBc3NlbWJseVRyYWRlbWFya0F0dHJpYnV0ZQBUYXJnZXRGcmFt
ZXdvcmtBdHRyaWJ1dGUAQXNzZW1ibHlDb25maWd1cmF0aW9uQXR0cmlidXRlAEFzc2VtYmx5RGVz
Y3JpcHRpb25BdHRyaWJ1dGUAQ29tcGlsYXRpb25SZWxheGF0aW9uc0F0dHJpYnV0ZQBBc3NlbWJs
eVByb2R1Y3RBdHRyaWJ1dGUAQXNzZW1ibHlDb3B5cmlnaHRBdHRyaWJ1dGUAU1NJU1NjcmlwdENv
bXBvbmVudEVudHJ5UG9pbnRBdHRyaWJ1dGUAQXNzZW1ibHlDb21wYW55QXR0cmlidXRlAFJ1bnRp
bWVDb21wYXRpYmlsaXR5QXR0cmlidXRlAFByZUV4ZWN1dGUAUG9zdEV4ZWN1dGUAdmFsdWUAU3lz
dGVtLlJ1bnRpbWUuVmVyc2lvbmluZwBTdHJpbmcAU3lzdGVtLkNvbXBvbmVudE1vZGVsAFNDX0Mz
MDE1QTVEQ0U1QjQwMTE5NzU0ODVGQzNDNDc5QzhGLmRsbABnZXRfRXJyb3JDb2RlX0lzTnVsbABn
ZXRfRXJyb3JDb2x1bW5fSXNOdWxsAHNldF9FcnJvckRlc2NyaXB0aW9uX0lzTnVsbABnZXRfUHJv
ZHVjdEtleV9Jc051bGwAU2V0TnVsbABzZXRfSXRlbQBTeXN0ZW0AcmVzb3VyY2VNYW4AU2NyaXB0
TWFpbgBnZXRfRXJyb3JDb2x1bW4AU3lzdGVtLkNvbmZpZ3VyYXRpb24AU3lzdGVtLkdsb2JhbGl6
YXRpb24AU3lzdGVtLlJlZmxlY3Rpb24ASW52YWxpZE9wZXJhdGlvbkV4Y2VwdGlvbgBzZXRfRXJy
b3JEZXNjcmlwdGlvbgBHZXRFcnJvckRlc2NyaXB0aW9uAFN0cmluZ0NvbXBhcmlzb24AQ3VsdHVy
ZUluZm8AT3V0cHV0TmFtZU1hcABPdXRwdXRNYXAATWljcm9zb2Z0LlNxbFNlcnZlci5EVFNQaXBl
bGluZVdyYXAASW5wdXQwQnVmZmVyAFBpcGVsaW5lQnVmZmVyAFNjcmlwdEJ1ZmZlcgBnZXRfUmVz
b3VyY2VNYW5hZ2VyAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlBpcGVsaW5lLldyYXBwZXIALmN0
b3IALmNjdG9yAFN5c3RlbS5EaWFnbm9zdGljcwBTeXN0ZW0uUnVudGltZS5Db21waWxlclNlcnZp
Y2VzAFN5c3RlbS5SZXNvdXJjZXMAU0NfMGU2OWY4M2M1YTE2NGY5N2E5N2JlNzU4NzRlYjA1MDIu
UHJvcGVydGllcy5SZXNvdXJjZXMucmVzb3VyY2VzAERlYnVnZ2luZ01vZGVzAFNDXzBlNjlmODNj
NWExNjRmOTdhOTdiZTc1ODc0ZWIwNTAyLlByb3BlcnRpZXMAVmFyaWFibGVzAEJ1ZmZlckNvbHVt
bkluZGV4ZXMAR2V0Q29sdW1uSW5kZXhlcwBTZXR0aW5ncwBFcXVhbHMAQ29ubmVjdGlvbnMAQ29u
Y2F0AEZvcm1hdABPYmplY3QARW5kT2ZSb3dzZXQAZ2V0X0RlZmF1bHQAVXNlckNvbXBvbmVudABQ
YXJlbnRDb21wb25lbnQAU2NyaXB0Q29tcG9uZW50AE1pY3Jvc29mdC5TcWxTZXJ2ZXIuVHhTY3Jp
cHQATWljcm9zb2Z0LlNxbFNlcnZlci5QaXBlbGluZUhvc3QASW5wdXQwX1Byb2Nlc3NJbnB1dABJ
bnB1dDBfUHJvY2Vzc0lucHV0Um93AE5leHRSb3cAZ2V0X1Byb2R1Y3RLZXkAZ2V0X0Fzc2VtYmx5
AAAAADNFAHIAcgBvAHIAIABvAG4AIABjAG8AbAB1AG0AbgAgAHsAMAB9ACgAewAxAH0AKQAuAABP
RQByAHIAbwByACAAaABhAHAAcABlAG4AZAAgAHcAaQB0AGgAIAB7ADAAfQAgAHMAYQBsAGUAcwAg
AG8AcgBkAGUAcgAgAGwAaQBuAGUAACEgAEUAcgByAG8AcgAgAGMAbwBkAGUAOgAgAHsAMAB9AACA
m0kAcwBOAHUAbABsACAAcAByAG8AcABlAHIAdAB5ACAAYwBhAG4AbgBvAHQAIABiAGUAIABzAGUA
dAAgAHQAbwAgAEYAYQBsAHMAZQAuACAAQQBzAHMAaQBnAG4AIABhACAAdgBhAGwAdQBlACAAdABv
ACAAdABoAGUAIABjAG8AbAB1AG0AbgAgAGkAbgBzAHQAZQBhAGQALgAAD0kAbgBwAHUAdAAgADAA
AHFTAEMAXwAwAGUANgA5AGYAOAAzAGMANQBhADEANgA0AGYAOQA3AGEAOQA3AGIAZQA3ADUAOAA3
ADQAZQBiADAANQAwADIALgBQAHIAbwBwAGUAcgB0AGkAZQBzAC4AUgBlAHMAbwB1AHIAYwBlAHMA
AAAAQKbiGNtyZ0inlspARaqqrQAEIAEBCAMgAAEFIAEBEREEIAEBDgUgAQERWQMHAQ4EIAASbQQg
AQ4IBgADDg4cHAUAAg4OHAYAAw4ODg4JIAMBEj0dCBJBAwYSPQMGHQgEIAEICAQgAQIIBCABDQgF
IAIBCBwDIAACBiACAg4RfQUgAR0ICAgAARKAgRGAhQUgABKAiQcgAgEOEoCJCLd6XFYZNOCJCImE
Xc2AgMyRAwYSFAMGEhgDBhJFAwYSUQMGElUDBhIgBSABARIMAyAACAMgAA0EIAEBAgkgBAEIDhI9
EkEFIAEBEkUEAAASUQQAABJVBQABARJVBAAAEiADAAABAygACAMoAAIDKAANAygADgQIABJRBAgA
ElUECAASIAgBAAgAAAAAAB4BAAEAVAIWV3JhcE5vbkV4Y2VwdGlvblRocm93cwEIAQACAAAAAAAo
AQAjU0NfMGU2OWY4M2M1YTE2NGY5N2E5N2JlNzU4NzRlYjA1MDIAAAUBAAAAABYBABFDb3B5cmln
aHQgQCAgMjAyMwAASQEAGi5ORVRGcmFtZXdvcmssVmVyc2lvbj12NC43AQBUDhRGcmFtZXdvcmtE
aXNwbGF5TmFtZRIuTkVUIEZyYW1ld29yayA0LjcEAQAAAAC0AAAAzsrvvgEAAACRAAAAbFN5c3Rl
bS5SZXNvdXJjZXMuUmVzb3VyY2VSZWFkZXIsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1
bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OSNTeXN0ZW0uUmVz
b3VyY2VzLlJ1bnRpbWVSZXNvdXJjZVNldAIAAAAAAAAAAAAAAFBBRFBBRFC0AAAAnDQAAAAAAAAA
AAAAtjQAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKg0AAAAAAAAAAAAAAAAX0NvckRsbE1haW4A
bXNjb3JlZS5kbGwAAAAAAP8lACAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAABABAAAAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAAAABI
AAAAWEAAAOwDAAAAAAAAAAAAAOwDNAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBPAAAA
AAC9BO/+AAABAAAAAQAAAAAAAAABAAAAAAA/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAARAAA
AAEAVgBhAHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBvAG4A
AAAAAAAAsARMAwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAAAoAwAAAQAwADAAMAAw
ADAANABiADAAAAAaAAEAAQBDAG8AbQBtAGUAbgB0AHMAAAAAAAAAIgABAAEAQwBvAG0AcABhAG4A
eQBOAGEAbQBlAAAAAAAAAAAAcAAkAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4AAAAA
AFMAQwBfADAAZQA2ADkAZgA4ADMAYwA1AGEAMQA2ADQAZgA5ADcAYQA5ADcAYgBlADcANQA4ADcA
NABlAGIAMAA1ADAAMgAAADAACAABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAALgAw
AC4AMAAAAHAAKAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAAUwBDAF8AQwAzADAAMQA1AEEA
NQBEAEMARQA1AEIANAAwADEAMQA5ADcANQA0ADgANQBGAEMAMwBDADQANwA5AEMAOABGAC4AZABs
AGwAAABIABIAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQAAABDAG8AcAB5AHIAaQBnAGgA
dAAgAEAAIAAgADIAMAAyADMAAAAqAAEAAQBMAGUAZwBhAGwAVAByAGEAZABlAG0AYQByAGsAcwAA
AAAAAAAAAHgAKAABAE8AcgBpAGcAaQBuAGEAbABGAGkAbABlAG4AYQBtAGUAAABTAEMAXwBDADMA
MAAxADUAQQA1AEQAQwBFADUAQgA0ADAAMQAxADkANwA1ADQAOAA1AEYAQwAzAEMANAA3ADkAQwA4
AEYALgBkAGwAbAAAAGgAJAABAFAAcgBvAGQAdQBjAHQATgBhAG0AZQAAAAAAUwBDAF8AMABlADYA
OQBmADgAMwBjADUAYQAxADYANABmADkANwBhADkANwBiAGUANwA1ADgANwA0AGUAYgAwADUAMAAy
AAAANAAIAAEAUAByAG8AZAB1AGMAdABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgAwAC4AMAAAADgA
CAABAEEAcwBzAGUAbQBiAGwAeQAgAFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADAALgAwAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAAAAwAAADINAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                  name="VSTAProjectName"
                  typeConverter="NOTBROWSABLE">SC_c3015a5dce5b4011975485fc3c479c8f</property>
                <property
                  dataType="System.String"
                  description="Specifies the programming language used by the script."
                  name="ScriptLanguage"
                  typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read-only variables."
                  name="ReadOnlyVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg"></property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read/write variables."
                  name="ReadWriteVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg"></property>
                <property
                  dataType="System.String"
                  description="List of breakpoints present on the script."
                  isArray="true"
                  name="BreakpointCollection"
                  typeConverter="NOTBROWSABLE">
                  <arrayElements
                    arrayElementCount="0" />
                </property>
                <property
                  dataType="System.String"
                  description="Checksum to match component metedata against compiled codes."
                  name="MetadataChecksum140"
                  typeConverter="NOTBROWSABLE">FE</property>
                <property
                  dataType="System.String"
                  name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Add sale facts\Log xml excel parsing.Inputs[Input 0]"
                  hasSideEffects="true"
                  name="Input 0">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Add sale facts\Log xml excel parsing.Inputs[Input 0].Columns[ErrorCode]"
                      cachedDataType="i4"
                      cachedName="ErrorCode"
                      lineageId="Package\Add sale facts\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorCode]" />
                    <inputColumn
                      refId="Package\Add sale facts\Log xml excel parsing.Inputs[Input 0].Columns[ErrorColumn]"
                      cachedDataType="i4"
                      cachedName="ErrorColumn"
                      lineageId="Package\Add sale facts\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorColumn]" />
                    <inputColumn
                      refId="Package\Add sale facts\Log xml excel parsing.Inputs[Input 0].Columns[ProductKey]"
                      cachedDataType="r8"
                      cachedName="ProductKey"
                      lineageId="Package\Add sale facts\Excel Source.Outputs[Excel Source Error Output].Columns[ProductKey]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Add sale facts\Log xml excel parsing.Outputs[Output 0]"
                  name="Output 0"
                  synchronousInputId="Package\Add sale facts\Log xml excel parsing.Inputs[Input 0]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Add sale facts\Log xml excel parsing.Outputs[Output 0].Columns[ErrorDescription]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Add sale facts\Log xml excel parsing.Outputs[Output 0].Columns[ErrorDescription]"
                      name="ErrorDescription" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Add sale facts\OLE DB Destination"
              componentClassID="Microsoft.OLEDBDestination"
              contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
              description="OLE DB Destination"
              name="OLE DB Destination"
              usesDispositions="true"
              version="4">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[dbo].[FactSale]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">3</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepIdentity">false</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepNulls">false</property>
                <property
                  dataType="System.String"
                  description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                  name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                <property
                  dataType="System.Int32"
                  description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                  name="FastLoadMaxInsertCommitSize">2147483647</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Add sale facts\OLE DB Destination.Connections[OleDbConnection]"
                  connectionManagerID="{C54996EB-42F6-4A79-9932-F1C853243153}:external"
                  connectionManagerRefId="Project.ConnectionManagers[localhost.SMOAD]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Add sale facts\OLE DB Destination.Inputs[OLE DB Destination Input]"
                  errorOrTruncationOperation="Insert"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="OLE DB Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Add sale facts\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[SalesOrderLineKey]"
                      cachedDataType="r8"
                      cachedName="SalesOrderLineKey"
                      externalMetadataColumnId="Package\Add sale facts\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[id]"
                      lineageId="Package\Add sale facts\Excel Source.Outputs[Excel Source Output].Columns[SalesOrderLineKey]" />
                    <inputColumn
                      refId="Package\Add sale facts\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[CustomerKey]"
                      cachedDataType="r8"
                      cachedName="CustomerKey"
                      externalMetadataColumnId="Package\Add sale facts\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ClientId]"
                      lineageId="Package\Add sale facts\Excel Source.Outputs[Excel Source Output].Columns[CustomerKey]" />
                    <inputColumn
                      refId="Package\Add sale facts\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Order Quantity]"
                      cachedDataType="r8"
                      cachedName="Order Quantity"
                      externalMetadataColumnId="Package\Add sale facts\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Quantity]"
                      lineageId="Package\Add sale facts\Excel Source.Outputs[Excel Source Output].Columns[Order Quantity]" />
                    <inputColumn
                      refId="Package\Add sale facts\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Unit Price]"
                      cachedDataType="cy"
                      cachedName="Unit Price"
                      externalMetadataColumnId="Package\Add sale facts\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[UnitPrice]"
                      lineageId="Package\Add sale facts\Excel Source.Outputs[Excel Source Output].Columns[Unit Price]" />
                    <inputColumn
                      refId="Package\Add sale facts\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[OrderDateKey]"
                      cachedDataType="r8"
                      cachedName="OrderDateKey"
                      externalMetadataColumnId="Package\Add sale facts\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[SaleDateId]"
                      lineageId="Package\Add sale facts\Excel Source.Outputs[Excel Source Output].Columns[OrderDateKey]" />
                    <inputColumn
                      refId="Package\Add sale facts\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Total Product Cost]"
                      cachedDataType="cy"
                      cachedName="Total Product Cost"
                      externalMetadataColumnId="Package\Add sale facts\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Total]"
                      lineageId="Package\Add sale facts\Excel Source.Outputs[Excel Source Output].Columns[Total Product Cost]" />
                    <inputColumn
                      refId="Package\Add sale facts\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Extended Amount]"
                      cachedDataType="cy"
                      cachedName="Extended Amount"
                      externalMetadataColumnId="Package\Add sale facts\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Subtotal]"
                      lineageId="Package\Add sale facts\Excel Source.Outputs[Excel Source Output].Columns[Extended Amount]" />
                    <inputColumn
                      refId="Package\Add sale facts\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[ResellerKey]"
                      cachedDataType="r8"
                      cachedName="ResellerKey"
                      externalMetadataColumnId="Package\Add sale facts\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[CustomerDemographyId]"
                      lineageId="Package\Add sale facts\Excel Source.Outputs[Excel Source Output].Columns[ResellerKey]" />
                    <inputColumn
                      refId="Package\Add sale facts\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[NumericProductKey]"
                      cachedDataType="numeric"
                      cachedName="NumericProductKey"
                      cachedPrecision="18"
                      externalMetadataColumnId="Package\Add sale facts\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ServiceId]"
                      lineageId="Package\Add sale facts\Data Conversion.Outputs[Data Conversion Output].Columns[NumericProductKey]" />
                    <inputColumn
                      refId="Package\Add sale facts\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[CurrencyKey]"
                      cachedDataType="wstr"
                      cachedLength="3"
                      cachedName="CurrencyKey"
                      externalMetadataColumnId="Package\Add sale facts\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[CurrencyCode]"
                      lineageId="Package\Add sale facts\Derived Column.Outputs[Derived Column Output].Columns[CurrencyKey]" />
                    <inputColumn
                      refId="Package\Add sale facts\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[TaxAmount]"
                      cachedDataType="decimal"
                      cachedName="TaxAmount"
                      cachedScale="18"
                      externalMetadataColumnId="Package\Add sale facts\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[TaxAmount]"
                      lineageId="Package\Add sale facts\Derived Column.Outputs[Derived Column Output].Columns[TaxAmount]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Add sale facts\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[id]"
                      dataType="i8"
                      name="id" />
                    <externalMetadataColumn
                      refId="Package\Add sale facts\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ServiceId]"
                      dataType="i8"
                      name="ServiceId" />
                    <externalMetadataColumn
                      refId="Package\Add sale facts\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[SaleDateId]"
                      dataType="i8"
                      name="SaleDateId" />
                    <externalMetadataColumn
                      refId="Package\Add sale facts\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ClientId]"
                      dataType="i8"
                      name="ClientId" />
                    <externalMetadataColumn
                      refId="Package\Add sale facts\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[CustomerDemographyId]"
                      dataType="i8"
                      name="CustomerDemographyId" />
                    <externalMetadataColumn
                      refId="Package\Add sale facts\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[CurrencyCode]"
                      dataType="wstr"
                      length="3"
                      name="CurrencyCode" />
                    <externalMetadataColumn
                      refId="Package\Add sale facts\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[DiscountId]"
                      dataType="i8"
                      name="DiscountId" />
                    <externalMetadataColumn
                      refId="Package\Add sale facts\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Quantity]"
                      dataType="i8"
                      name="Quantity" />
                    <externalMetadataColumn
                      refId="Package\Add sale facts\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[UnitPrice]"
                      dataType="numeric"
                      name="UnitPrice"
                      precision="8"
                      scale="2" />
                    <externalMetadataColumn
                      refId="Package\Add sale facts\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Subtotal]"
                      dataType="numeric"
                      name="Subtotal"
                      precision="8"
                      scale="2" />
                    <externalMetadataColumn
                      refId="Package\Add sale facts\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[TaxAmount]"
                      dataType="numeric"
                      name="TaxAmount"
                      precision="8"
                      scale="2" />
                    <externalMetadataColumn
                      refId="Package\Add sale facts\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Total]"
                      dataType="numeric"
                      name="Total"
                      precision="8"
                      scale="2" />
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Add sale facts\OLE DB Destination.Outputs[OLE DB Destination Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="OLE DB Destination Error Output"
                  synchronousInputId="Package\Add sale facts\OLE DB Destination.Inputs[OLE DB Destination Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Add sale facts\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Add sale facts\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Add sale facts\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Add sale facts\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\Add sale facts.Paths[Data Conversion Output]"
              endId="Package\Add sale facts\Derived Column.Inputs[Derived Column Input]"
              name="Data Conversion Output"
              startId="Package\Add sale facts\Data Conversion.Outputs[Data Conversion Output]" />
            <path
              refId="Package\Add sale facts.Paths[Derived Column Output]"
              endId="Package\Add sale facts\Conditional Split.Inputs[Conditional Split Input]"
              name="Derived Column Output"
              startId="Package\Add sale facts\Derived Column.Outputs[Derived Column Output]" />
            <path
              refId="Package\Add sale facts.Paths[Excel Source Error Output]"
              endId="Package\Add sale facts\Log xml excel parsing.Inputs[Input 0]"
              name="Excel Source Error Output"
              startId="Package\Add sale facts\Excel Source.Outputs[Excel Source Error Output]" />
            <path
              refId="Package\Add sale facts.Paths[Excel Source Output]"
              endId="Package\Add sale facts\Data Conversion.Inputs[Data Conversion Input]"
              name="Excel Source Output"
              startId="Package\Add sale facts\Excel Source.Outputs[Excel Source Output]" />
            <path
              refId="Package\Add sale facts.Paths[Non Null product Keys]"
              endId="Package\Add sale facts\OLE DB Destination.Inputs[OLE DB Destination Input]"
              name="Non Null product Keys"
              startId="Package\Add sale facts\Conditional Split.Outputs[Non Null product Keys]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Clear currency rates"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{0B8CBFA7-C07F-4AF1-B0FF-F98586F289C3}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Clear currency rates"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0" />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{C54996EB-42F6-4A79-9932-F1C853243153}"
          SQLTask:SqlStatementSource="delete FROM [SMOAD].[dbo].[FactCurrencyRate]" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Clear sales"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{C627B8C0-BA23-4EA6-88C8-A3F74C2C02FC}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Clear sales"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0" />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{C54996EB-42F6-4A79-9932-F1C853243153}"
          SQLTask:SqlStatementSource="delete FROM [SMOAD].[dbo].[FactSale]" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\SCD for DimCustomer"
      DTS:CreationName="Microsoft.Pipeline"
      DTS:Description="Data Flow Task"
      DTS:DTSID="{321612D6-92E8-446F-9153-3285A8A84345}"
      DTS:ExecutableType="Microsoft.Pipeline"
      DTS:LocaleID="-1"
      DTS:ObjectName="SCD for DimCustomer"
      DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0" />
      <DTS:ObjectData>
        <pipeline
          version="1">
          <components>
            <component
              refId="Package\SCD for DimCustomer\Data Conversion"
              componentClassID="Microsoft.DataConvert"
              contactInfo="Data Conversion;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Data Conversion"
              name="Data Conversion"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\SCD for DimCustomer\Data Conversion.Inputs[Data Conversion Input]"
                  name="Data Conversion Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\SCD for DimCustomer\Data Conversion.Inputs[Data Conversion Input].Columns[CustomerKey]"
                      cachedDataType="ui2"
                      cachedName="CustomerKey"
                      lineageId="Package\SCD for DimCustomer\Merge Join.Outputs[Merge Join Output].Columns[CustomerKey]" />
                    <inputColumn
                      refId="Package\SCD for DimCustomer\Data Conversion.Inputs[Data Conversion Input].Columns[Customer]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="Customer"
                      lineageId="Package\SCD for DimCustomer\Merge Join.Outputs[Merge Join Output].Columns[Customer]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\SCD for DimCustomer\Data Conversion.Outputs[Data Conversion Output]"
                  exclusionGroup="1"
                  name="Data Conversion Output"
                  synchronousInputId="Package\SCD for DimCustomer\Data Conversion.Inputs[Data Conversion Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\SCD for DimCustomer\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of CustomerKey]"
                      dataType="i8"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\SCD for DimCustomer\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of CustomerKey]"
                      name="Copy of CustomerKey"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\SCD for DimCustomer\Merge Join.Outputs[Merge Join Output].Columns[CustomerKey]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\SCD for DimCustomer\Data Conversion.Outputs[Data Conversion Output].Columns[FullName]"
                      codePage="1251"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      length="255"
                      lineageId="Package\SCD for DimCustomer\Data Conversion.Outputs[Data Conversion Output].Columns[FullName]"
                      name="FullName"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\SCD for DimCustomer\Merge Join.Outputs[Merge Join Output].Columns[Customer]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\SCD for DimCustomer\Data Conversion.Outputs[Data Conversion Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Data Conversion Error Output"
                  synchronousInputId="Package\SCD for DimCustomer\Data Conversion.Inputs[Data Conversion Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\SCD for DimCustomer\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\SCD for DimCustomer\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\SCD for DimCustomer\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\SCD for DimCustomer\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\SCD for DimCustomer\Derived Column"
              componentClassID="Microsoft.DerivedColumn"
              contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
              name="Derived Column"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\SCD for DimCustomer\Derived Column.Inputs[Derived Column Input]"
                  description="Input to the Derived Column Transformation"
                  name="Derived Column Input">
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\SCD for DimCustomer\Derived Column.Outputs[Derived Column Output]"
                  description="Default Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  name="Derived Column Output"
                  synchronousInputId="Package\SCD for DimCustomer\Derived Column.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\SCD for DimCustomer\Derived Column.Outputs[Derived Column Output].Columns[IsValid]"
                      dataType="bool"
                      description="IsValid"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\SCD for DimCustomer\Derived Column.Outputs[Derived Column Output].Columns[IsValid]"
                      name="IsValid"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">(DT_BOOL)("0")</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">(DT_BOOL)("0")</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\SCD for DimCustomer\Derived Column.Outputs[Derived Column Error Output]"
                  description="Error Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Derived Column Error Output"
                  synchronousInputId="Package\SCD for DimCustomer\Derived Column.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\SCD for DimCustomer\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\SCD for DimCustomer\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\SCD for DimCustomer\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\SCD for DimCustomer\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\SCD for DimCustomer\Derived Column 1"
              componentClassID="Microsoft.DerivedColumn"
              contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
              name="Derived Column 1"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\SCD for DimCustomer\Derived Column 1.Inputs[Derived Column Input]"
                  description="Input to the Derived Column Transformation"
                  name="Derived Column Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\SCD for DimCustomer\Derived Column 1.Inputs[Derived Column Input].Columns[GeographyKey]"
                      cachedDataType="i8"
                      cachedName="GeographyKey"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\SCD for DimCustomer\Union All.Outputs[Union All Output 1].Columns[GeographyKey]"
                      truncationRowDisposition="FailComponent"
                      usageType="readWrite">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[REPLACENULL](#{Package\SCD for DimCustomer\Union All.Outputs[Union All Output 1].Columns[GeographyKey]},1)</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">REPLACENULL(GeographyKey,1)</property>
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\SCD for DimCustomer\Derived Column 1.Outputs[Derived Column Output]"
                  description="Default Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  name="Derived Column Output"
                  synchronousInputId="Package\SCD for DimCustomer\Derived Column 1.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\SCD for DimCustomer\Derived Column 1.Outputs[Derived Column Output].Columns[IsValid]"
                      dataType="bool"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\SCD for DimCustomer\Derived Column 1.Outputs[Derived Column Output].Columns[IsValid]"
                      name="IsValid"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">(DT_BOOL)("1")</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">(DT_BOOL)("1")</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\SCD for DimCustomer\Derived Column 1.Outputs[Derived Column Output].Columns[PhoneNumber]"
                      codePage="1251"
                      dataType="str"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="10"
                      lineageId="Package\SCD for DimCustomer\Derived Column 1.Outputs[Derived Column Output].Columns[PhoneNumber]"
                      name="PhoneNumber"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">(DT_STR,10,1251)"7777777777"</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">(DT_STR,10,1251)"7777777777"</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\SCD for DimCustomer\Derived Column 1.Outputs[Derived Column Output].Columns[RegistrationDateKey]"
                      dataType="i8"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\SCD for DimCustomer\Derived Column 1.Outputs[Derived Column Output].Columns[RegistrationDateKey]"
                      name="RegistrationDateKey"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">(DT_I8)20230101</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">(DT_I8)20230101</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\SCD for DimCustomer\Derived Column 1.Outputs[Derived Column Output].Columns[LastActivityDatekey]"
                      dataType="i8"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\SCD for DimCustomer\Derived Column 1.Outputs[Derived Column Output].Columns[LastActivityDatekey]"
                      name="LastActivityDatekey"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">(DT_I8)20240101</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">(DT_I8)20240101</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\SCD for DimCustomer\Derived Column 1.Outputs[Derived Column Output].Columns[DemographyKey]"
                      dataType="i8"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\SCD for DimCustomer\Derived Column 1.Outputs[Derived Column Output].Columns[DemographyKey]"
                      name="DemographyKey"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">(DT_I8)1</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">(DT_I8)1</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\SCD for DimCustomer\Derived Column 1.Outputs[Derived Column Error Output]"
                  description="Error Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Derived Column Error Output"
                  synchronousInputId="Package\SCD for DimCustomer\Derived Column 1.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\SCD for DimCustomer\Derived Column 1.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\SCD for DimCustomer\Derived Column 1.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\SCD for DimCustomer\Derived Column 1.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\SCD for DimCustomer\Derived Column 1.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\SCD for DimCustomer\Insert Destination"
              componentClassID="Microsoft.OLEDBDestination"
              contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
              description="OLE DB Destination"
              name="Insert Destination"
              usesDispositions="true"
              version="4">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[dbo].[DimClient]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">0</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepIdentity">false</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepNulls">false</property>
                <property
                  dataType="System.String"
                  description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                  name="FastLoadOptions"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                  name="FastLoadMaxInsertCommitSize">2147483647</property>
              </properties>
              <connections>
                <connection
                  refId="Package\SCD for DimCustomer\Insert Destination.Connections[OleDbConnection]"
                  connectionManagerID="{C54996EB-42F6-4A79-9932-F1C853243153}:external"
                  connectionManagerRefId="Project.ConnectionManagers[localhost.SMOAD]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\SCD for DimCustomer\Insert Destination.Inputs[OLE DB Destination Input]"
                  errorOrTruncationOperation="Insert"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="OLE DB Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\SCD for DimCustomer\Insert Destination.Inputs[OLE DB Destination Input].Columns[FullName]"
                      cachedCodepage="1251"
                      cachedDataType="str"
                      cachedLength="255"
                      cachedName="FullName"
                      externalMetadataColumnId="Package\SCD for DimCustomer\Insert Destination.Inputs[OLE DB Destination Input].ExternalColumns[FullName]"
                      lineageId="Package\SCD for DimCustomer\Union All.Outputs[Union All Output 1].Columns[FullName]" />
                    <inputColumn
                      refId="Package\SCD for DimCustomer\Insert Destination.Inputs[OLE DB Destination Input].Columns[IsValid]"
                      cachedDataType="bool"
                      cachedName="IsValid"
                      externalMetadataColumnId="Package\SCD for DimCustomer\Insert Destination.Inputs[OLE DB Destination Input].ExternalColumns[IsValid]"
                      lineageId="Package\SCD for DimCustomer\Derived Column 1.Outputs[Derived Column Output].Columns[IsValid]" />
                    <inputColumn
                      refId="Package\SCD for DimCustomer\Insert Destination.Inputs[OLE DB Destination Input].Columns[GeographyKey]"
                      cachedDataType="i8"
                      cachedName="GeographyKey"
                      externalMetadataColumnId="Package\SCD for DimCustomer\Insert Destination.Inputs[OLE DB Destination Input].ExternalColumns[GeographyId]"
                      lineageId="Package\SCD for DimCustomer\Union All.Outputs[Union All Output 1].Columns[GeographyKey]" />
                    <inputColumn
                      refId="Package\SCD for DimCustomer\Insert Destination.Inputs[OLE DB Destination Input].Columns[PhoneNumber]"
                      cachedCodepage="1251"
                      cachedDataType="str"
                      cachedLength="10"
                      cachedName="PhoneNumber"
                      externalMetadataColumnId="Package\SCD for DimCustomer\Insert Destination.Inputs[OLE DB Destination Input].ExternalColumns[PhoneNumber]"
                      lineageId="Package\SCD for DimCustomer\Derived Column 1.Outputs[Derived Column Output].Columns[PhoneNumber]" />
                    <inputColumn
                      refId="Package\SCD for DimCustomer\Insert Destination.Inputs[OLE DB Destination Input].Columns[RegistrationDateKey]"
                      cachedDataType="i8"
                      cachedName="RegistrationDateKey"
                      externalMetadataColumnId="Package\SCD for DimCustomer\Insert Destination.Inputs[OLE DB Destination Input].ExternalColumns[RegistrationDateId]"
                      lineageId="Package\SCD for DimCustomer\Derived Column 1.Outputs[Derived Column Output].Columns[RegistrationDateKey]" />
                    <inputColumn
                      refId="Package\SCD for DimCustomer\Insert Destination.Inputs[OLE DB Destination Input].Columns[LastActivityDatekey]"
                      cachedDataType="i8"
                      cachedName="LastActivityDatekey"
                      externalMetadataColumnId="Package\SCD for DimCustomer\Insert Destination.Inputs[OLE DB Destination Input].ExternalColumns[lastActivityDateId]"
                      lineageId="Package\SCD for DimCustomer\Derived Column 1.Outputs[Derived Column Output].Columns[LastActivityDatekey]" />
                    <inputColumn
                      refId="Package\SCD for DimCustomer\Insert Destination.Inputs[OLE DB Destination Input].Columns[DemographyKey]"
                      cachedDataType="i8"
                      cachedName="DemographyKey"
                      externalMetadataColumnId="Package\SCD for DimCustomer\Insert Destination.Inputs[OLE DB Destination Input].ExternalColumns[DemographyId]"
                      lineageId="Package\SCD for DimCustomer\Derived Column 1.Outputs[Derived Column Output].Columns[DemographyKey]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\SCD for DimCustomer\Insert Destination.Inputs[OLE DB Destination Input].ExternalColumns[id]"
                      dataType="i8"
                      name="id" />
                    <externalMetadataColumn
                      refId="Package\SCD for DimCustomer\Insert Destination.Inputs[OLE DB Destination Input].ExternalColumns[DemographyId]"
                      dataType="i8"
                      name="DemographyId" />
                    <externalMetadataColumn
                      refId="Package\SCD for DimCustomer\Insert Destination.Inputs[OLE DB Destination Input].ExternalColumns[GeographyId]"
                      dataType="i8"
                      name="GeographyId" />
                    <externalMetadataColumn
                      refId="Package\SCD for DimCustomer\Insert Destination.Inputs[OLE DB Destination Input].ExternalColumns[FullName]"
                      codePage="1251"
                      dataType="str"
                      length="255"
                      name="FullName" />
                    <externalMetadataColumn
                      refId="Package\SCD for DimCustomer\Insert Destination.Inputs[OLE DB Destination Input].ExternalColumns[Email]"
                      codePage="1251"
                      dataType="str"
                      length="255"
                      name="Email" />
                    <externalMetadataColumn
                      refId="Package\SCD for DimCustomer\Insert Destination.Inputs[OLE DB Destination Input].ExternalColumns[PhoneNumber]"
                      codePage="1251"
                      dataType="str"
                      length="255"
                      name="PhoneNumber" />
                    <externalMetadataColumn
                      refId="Package\SCD for DimCustomer\Insert Destination.Inputs[OLE DB Destination Input].ExternalColumns[WebSite]"
                      codePage="1251"
                      dataType="str"
                      length="255"
                      name="WebSite" />
                    <externalMetadataColumn
                      refId="Package\SCD for DimCustomer\Insert Destination.Inputs[OLE DB Destination Input].ExternalColumns[RegistrationDateId]"
                      dataType="i8"
                      name="RegistrationDateId" />
                    <externalMetadataColumn
                      refId="Package\SCD for DimCustomer\Insert Destination.Inputs[OLE DB Destination Input].ExternalColumns[lastActivityDateId]"
                      dataType="i8"
                      name="lastActivityDateId" />
                    <externalMetadataColumn
                      refId="Package\SCD for DimCustomer\Insert Destination.Inputs[OLE DB Destination Input].ExternalColumns[IsValid]"
                      dataType="bool"
                      name="IsValid" />
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\SCD for DimCustomer\Insert Destination.Outputs[OLE DB Destination Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="OLE DB Destination Error Output"
                  synchronousInputId="Package\SCD for DimCustomer\Insert Destination.Inputs[OLE DB Destination Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\SCD for DimCustomer\Insert Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\SCD for DimCustomer\Insert Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\SCD for DimCustomer\Insert Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\SCD for DimCustomer\Insert Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\SCD for DimCustomer\Log xml file parsing"
              componentClassID="Microsoft.ManagedComponentHost"
              contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;13"
              description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
              name="Log xml file parsing"
              version="13">
              <properties>
                <property
                  dataType="System.String"
                  description="Stores the source code of the component"
                  isArray="true"
                  name="SourceCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="30">
                    <arrayElement
                      dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public override void ProcessInput(int InputID, string InputName, PipelineBuffer Buffer, OutputNameMap OutputMap)
    {

        if (InputName.Equals(@"Input 0", StringComparison.Ordinal))
        {
            Input0_ProcessInput(new Input0Buffer(Buffer, GetColumnIndexes(InputID), OutputMap));
        }

    }

    public virtual void Input0_ProcessInput(Input0Buffer Buffer)
    {
        while (Buffer.NextRow())
        {
            Input0_ProcessInputRow(Buffer);
        }
    }

    public virtual void Input0_ProcessInputRow(Input0Buffer Row)
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Data;
using System.Text;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    public override void PreExecute()
    {
        base.PreExecute();
    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called once for every row that passes through the component from Input0.
    ///
    /// Example of reading a value from a column in the the row:
    ///  string zipCode = Row.ZipCode
    ///
    /// Example of writing a value to a column in the row:
    ///  Row.ZipCode = zipCode
    /// </summary>
    /// <param name="Row">The row that is currently passing through the component</param>
    public override void Input0_ProcessInputRow(Input0Buffer Row)
    {
        var customerKeyBytes = Row.CustomerKey.GetBlobData(0, Row.CustomerKey.ColumnInfo.MaxLength);
        var customerKey = Encoding.Default.GetString(customerKeyBytes);
        var errorText = $"Error on column {Row.ErrorColumn}({ComponentMetaData.GetErrorDescription(Row.ErrorCode)})." +
            $"Error happend on {customerKey}" +
            $" Error code: {Row.ErrorCode}";

        Row.ErrorDescription = errorText;
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Input0Buffer: ScriptBuffer

{
    public Input0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public Int32 ErrorCode
    {
        get
        {
            return Buffer.GetInt32(BufferColumnIndexes[0]);
        }
    }
    public bool ErrorCode_IsNull
    {
        get
        {
            return IsNull(0);
        }
    }

    public Int32 ErrorColumn
    {
        get
        {
            return Buffer.GetInt32(BufferColumnIndexes[1]);
        }
    }
    public bool ErrorColumn_IsNull
    {
        get
        {
            return IsNull(1);
        }
    }

    public BlobColumn CustomerKey
    {
        get
        {
            return (BlobColumn)Buffer[BufferColumnIndexes[2]];
        }
    }
    public bool CustomerKey_IsNull
    {
        get
        {
            return IsNull(2);
        }
    }

    public String ErrorDescription
    {
        set
        {
            this[3] = value;
        }
    }
    public bool ErrorDescription_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(3);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public bool NextRow()
    {
        return base.NextRow();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_0e69f83c5a164f97a97be75874eb0502.Properties.Settings.get_Default():SC_0e69f83c5a164f97a97be75874eb0502.Properties.Sett" +
    "ings")]

namespace SC_0e69f83c5a164f97a97be75874eb0502.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_0e69f83c5a164f97a97be75874eb0502.csproj]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{24a13314-35fc-4324-800d-69bf6038b2b9}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_0e69f83c5a164f97a97be75874eb0502</RootNamespace>
    <AssemblyName>SC_29605F4E99324B3BA03B5B5D50E25232</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptComponent" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" />
        <Host Name="ScriptComponent" GeneratedNamespace="SC_0e69f83c5a164f97a97be75874eb0502" IconIndex="0"></Host>
        <ProjectClient>
          <HostIdentifier>SSIS_SC160</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Project]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>SC_0e69f83c5a164f97a97be75874eb0502</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>SC_0e69f83c5a164f97a97be75874eb0502</msb:DisplayName>
    <msb:ProjectId>{21907F35-72F1-4122-9F42-E8F5A31288C1}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="SC_0e69f83c5a164f97a97be75874eb0502.csproj" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="main.cs" />
    <msb:File Include="BufferWrapper.cs" />
    <msb:File Include="ComponentWrapper.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="Properties\Settings.Designer.cs" />
  </msb:ItemGroup>
</c:Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_0e69f83c5a164f97a97be75874eb0502")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_0e69f83c5a164f97a97be75874eb0502")]
[assembly: AssemblyCopyright("Copyright @  2023")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.0.0")]
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_0e69f83c5a164f97a97be75874eb0502.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_0e69f83c5a164f97a97be75874eb0502.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_0e69f83c5a164f97a97be75874eb0502.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_0e69f83c5a164f97a97be75874eb0502.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_0e69f83c5a164f97a97be75874eb0502.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Stores the binary representation of the component"
                  isArray="true"
                  name="BinaryCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="2">
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_29605F4E99324B3BA03B5B5D50E25232.dll]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDABouYmUAAAAAAAAAAOAAIiALATAAABYAAAAIAAAAAAAAWjUA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAAg1AABPAAAAAEAAAEgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAYBUAAAAgAAAAFgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAEgEAAAAQAAAAAYAAAAYAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAHgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAAA8
NQAAAAAAAEgAAAACAAUAYCIAAPARAAABAAAAAAAAAFA0AAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKBAAAAoqHgIoEQAACioTMAUAeAAAAAEAABEDbwoAAAYW
A28KAAAGbxIAAAp7EwAACm8UAAAKCigVAAAKBm8WAAAKC3IBAABwA28IAAAGjB0AAAECKBcAAAoD
bwYAAAZvGAAACigZAAAKcjUAAHAHclkAAHADbwYAAAaMHQAAASgaAAAKKBsAAAoMAwhvDAAABioe
AigQAAAGKioCAwQFKBwAAAoqUgJ7HQAACgJ7HgAAChaUbx8AAAoqIgIWKCAAAAoqUgJ7HQAACgJ7
HgAACheUbx8AAAoqIgIXKCAAAAoqZgJ7HQAACgJ7HgAAChiUbyEAAAp0EQAAASoiAhgoIAAACiom
AhkDKCIAAAoqWgMsCAIZKCMAAAoqcnsAAHBzJAAACnoeAiglAAAKKh4CKCYAAAoqfgIoJwAACgIC
cxQAAAZ9AQAABAICcxUAAAZ9AgAABCqSBHIYAQBwGm8oAAAKLBUCBQIDKCkAAAoOBHMFAAAGbxIA
AAYqSisHAgNvEwAABgNvDgAABi3xKgYqOgIoKgAACgIDfQMAAAQqOgIoKgAACgIDfQQAAAQqHgIo
KgAACiqufgUAAAQtHnIoAQBw0AcAAAIoKwAACm8sAAAKcy0AAAqABQAABH4FAAAEKhp+BgAABCoe
AoAGAAAEKhp+BwAABCoeAiguAAAKKi5zGwAABoAHAAAEKgAAAEJTSkIBAAEAAAAAAAwAAAB2NC4w
LjMwMzE5AAAAAAUAbAAAAEgGAAAjfgAAtAYAAJgHAAAjU3RyaW5ncwAAAABMDgAAnAEAACNVUwDo
DwAAEAAAACNHVUlEAAAA+A8AAPgBAAAjQmxvYgAAAAAAAAACAAABVxWiAQkBAAAA+gEzABYAAAEA
AAAkAAAACAAAAAcAAAAcAAAADwAAAC4AAAAQAAAAAQAAAAMAAAALAAAADAAAAAEAAAAFAAAAAQAA
AAAAUgMBAAAAAAAGADYCpgUGAMoCpgUGAIIBkwUPABoGAAAGAK8BYwQGABkCYwQGAPoBYwQGALEC
YwQGAFYCYwQGAG8CYwQGAMYBYwQGAOEBDgMKAIoCzwAKADwFzwAOAC0FzwAKAOQEzwAOABEEzwAK
AO4GzwAGALEG8wMGAGUBkwUGAE0FxgUGAMkETgQSADUBPAMSAJYBPAMSAB0BOQQGAEoBpgUOABwE
zwAGAAUDUAcGAEEA8wMWAAEAXQUGACsD8wMGAHUE8wMGALgE8wMGAPAA8wMGAKEA8wMGAI8HYwQA
AAAARwAAAAAAAQABAAEAEAAGBAAAEAABAAEAAQAQACAFAAA5AAEABQABABAA0AYAAEkAAQAQAAEA
EACXBgAATQADABQAAQAQAFgGAABNAAQAFQAAABAAzQUpBk0ABQAWAAABEACHBikGZQAHABoABgCX
Br0ABgBYBsEAAQDeBsUAAQDeBsUAEQD6A8kAEQANAc0AEQCDANEAUCAAAAAAxgDoAgYAAQBYIAAA
AADGAPMCBgABAGAgAAAAAMYAXAfVAAEA5CAAAAAAhhiGBQYAAgDsIAAAAACGGIYFWwACAPcgAAAA
AIYIkwDbAAUADCEAAAAAhgh6A4IABQAVIQAAAACGCCkE2wAFACohAAAAAIYIjwOCAAUAMyEAAAAA
hgh7B98ABQBNIQAAAACGCMIDggAFAFYhAAAAAIYIjwQQAAUAYCEAAAAAhgimA+QABgB3IQAAAACG
AHMHggAHAH8hAAAAAIYAuAaCAAcAhyEAAAAAhhiGBQYABwCnIQAAAADGAEMH6QAHAMwhAAAAAMYB
PAfVAAsA3yEAAAAAxgFcB9UADADhIQAAAACGGIYF8wANAPAhAAAAAIYYhgXzAA4A/yEAAAAAgxiG
BQYADwAHIgAAAACTCEkF+QAPADMiAAAAAJMI9QD+AA8AOiIAAAAAkwgBAQMBDwBCIgAAAACWCMQG
CQEQAEkiAAAAAIYYhgUGABAAUSIAAAAAkRiMBQ4BEAAAAAEAdwcAAAEAQgUAAAIAYgYAAAMA8gQA
AAEA/wIAAAEA/wIAAAEAUAAAAAIAxQAAAAMAQgUAAAQA8gQAAAEAQgUAAAEAdwcAAAEA9AYAAAEA
9AYAAAEA/wIJAIYFAQARAIYFBgAZAIYFCgApAIYFEAAxAIYFEAA5AIYFEABBAIYFEABJAIYFEABR
AIYFEABZAIYFEABhAIYFEABpAIYFBgChAIYFBgDBAIYFFQDRAIYFBgCRAOgCBgCRAPMCBgCJANUE
IgDZADIDJwCJAG4AKgDhAMQGMQDhACgDNgCRAFgAPADxAKQEQQD5AKoGRgD5AKoGTQD5AKMGUwBx
AIYFWwBxAEIFZQBxAGIGaQB5AD4AbQBxANIDcgB5AOEDdwBxAOoDfABxANkDAQABAYYFEABxAHMH
ggBxALgGggCRAIYFBgD5AJAGhgCRAHYGjgCZAIYFBgARAbMAlAARAYsHnQCpAIYFowDJAIYFBgAu
AAsAMgEuABMAOwEuABsAWgEuACMAYwEuACsAjAEuADMAjAEuADsAjAEuAEMAYwEuAEsAkgEuAFMA
jAEuAFsAqQFDAGMA8wHhAHsA8wHjAGsA8wEpAXMAWgFJAXMAWgEbAAMAAQAHAAkACAALAAAAlwAS
AQAAfgMWAQAALQQSAQAAkwMWAQAAfwcaAQAAxgMWAQAApwQfAQAAqgMWAQAATQUjAQAAFQEoAQAA
yAYtAQIABgADAAIABwAFAAIACAAHAAIACQAJAAIACgALAAIACwANAAEADAAPAAEADQARAAIAFwAT
AAIAGAAVAAEAGQAVAAIAGgAXAASAAAABAAAAAAAAAAAAAAAAABoAAAAEAAAAAAAAAAAAAACrAHoA
AAAAABAAAAAAAAAAAAAAALQA/gYAAAAAEAAAAAAAAAAAAAAAtAAbBwAAAAAEAAAAAAAAAAAAAACr
APMDAAAAABAAAAAAAAAAAAAAALQA/AQAAAAAAAAAAAEAAADXBQAAAAAAAABJRFRTQ29tcG9uZW50
TWV0YURhdGExMDAAU0NfMjk2MDVGNEU5OTMyNEIzQkEwM0I1QjVENTBFMjUyMzIAR2V0SW50MzIA
PE1vZHVsZT4ASW5wdXRJRABnZXRfQ29tcG9uZW50TWV0YURhdGEAR2V0QmxvYkRhdGEAbXNjb3Js
aWIAZGVmYXVsdEluc3RhbmNlAGdldF9FcnJvckNvZGUAUnVudGltZVR5cGVIYW5kbGUAR2V0VHlw
ZUZyb21IYW5kbGUASW5wdXROYW1lAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlBpcGVsaW5lAFR5
cGUAZ2V0X0N1bHR1cmUAc2V0X0N1bHR1cmUAcmVzb3VyY2VDdWx0dXJlAEFwcGxpY2F0aW9uU2V0
dGluZ3NCYXNlAEVkaXRvckJyb3dzYWJsZVN0YXRlAENvbXBpbGVyR2VuZXJhdGVkQXR0cmlidXRl
AERlYnVnZ2VyTm9uVXNlckNvZGVBdHRyaWJ1dGUARGVidWdnYWJsZUF0dHJpYnV0ZQBFZGl0b3JC
cm93c2FibGVBdHRyaWJ1dGUAQXNzZW1ibHlUaXRsZUF0dHJpYnV0ZQBBc3NlbWJseVRyYWRlbWFy
a0F0dHJpYnV0ZQBUYXJnZXRGcmFtZXdvcmtBdHRyaWJ1dGUAQXNzZW1ibHlDb25maWd1cmF0aW9u
QXR0cmlidXRlAEFzc2VtYmx5RGVzY3JpcHRpb25BdHRyaWJ1dGUAQ29tcGlsYXRpb25SZWxheGF0
aW9uc0F0dHJpYnV0ZQBBc3NlbWJseVByb2R1Y3RBdHRyaWJ1dGUAQXNzZW1ibHlDb3B5cmlnaHRB
dHRyaWJ1dGUAU1NJU1NjcmlwdENvbXBvbmVudEVudHJ5UG9pbnRBdHRyaWJ1dGUAQXNzZW1ibHlD
b21wYW55QXR0cmlidXRlAFJ1bnRpbWVDb21wYXRpYmlsaXR5QXR0cmlidXRlAFByZUV4ZWN1dGUA
UG9zdEV4ZWN1dGUAdmFsdWUARW5jb2RpbmcAU3lzdGVtLlJ1bnRpbWUuVmVyc2lvbmluZwBHZXRT
dHJpbmcATWF4TGVuZ3RoAFN5c3RlbS5Db21wb25lbnRNb2RlbABTQ18yOTYwNUY0RTk5MzI0QjNC
QTAzQjVCNUQ1MEUyNTIzMi5kbGwAZ2V0X0Vycm9yQ29kZV9Jc051bGwAZ2V0X0Vycm9yQ29sdW1u
X0lzTnVsbABzZXRfRXJyb3JEZXNjcmlwdGlvbl9Jc051bGwAZ2V0X0N1c3RvbWVyS2V5X0lzTnVs
bABTZXROdWxsAGdldF9JdGVtAHNldF9JdGVtAFN5c3RlbQByZXNvdXJjZU1hbgBTY3JpcHRNYWlu
AEJsb2JDb2x1bW4AQnVmZmVyQ29sdW1uAGdldF9FcnJvckNvbHVtbgBTeXN0ZW0uQ29uZmlndXJh
dGlvbgBTeXN0ZW0uR2xvYmFsaXphdGlvbgBTeXN0ZW0uUmVmbGVjdGlvbgBJbnZhbGlkT3BlcmF0
aW9uRXhjZXB0aW9uAHNldF9FcnJvckRlc2NyaXB0aW9uAEdldEVycm9yRGVzY3JpcHRpb24AU3Ry
aW5nQ29tcGFyaXNvbgBDdWx0dXJlSW5mbwBnZXRfQ29sdW1uSW5mbwBPdXRwdXROYW1lTWFwAE91
dHB1dE1hcABNaWNyb3NvZnQuU3FsU2VydmVyLkRUU1BpcGVsaW5lV3JhcABJbnB1dDBCdWZmZXIA
UGlwZWxpbmVCdWZmZXIAU2NyaXB0QnVmZmVyAGdldF9SZXNvdXJjZU1hbmFnZXIATWljcm9zb2Z0
LlNxbFNlcnZlci5EdHMuUGlwZWxpbmUuV3JhcHBlcgAuY3RvcgAuY2N0b3IAU3lzdGVtLkRpYWdu
b3N0aWNzAFN5c3RlbS5SdW50aW1lLkNvbXBpbGVyU2VydmljZXMAU3lzdGVtLlJlc291cmNlcwBT
Q18wZTY5ZjgzYzVhMTY0Zjk3YTk3YmU3NTg3NGViMDUwMi5Qcm9wZXJ0aWVzLlJlc291cmNlcy5y
ZXNvdXJjZXMARGVidWdnaW5nTW9kZXMAU0NfMGU2OWY4M2M1YTE2NGY5N2E5N2JlNzU4NzRlYjA1
MDIuUHJvcGVydGllcwBWYXJpYWJsZXMAQnVmZmVyQ29sdW1uSW5kZXhlcwBHZXRDb2x1bW5JbmRl
eGVzAFNldHRpbmdzAEVxdWFscwBDb25uZWN0aW9ucwBDb25jYXQARm9ybWF0AE9iamVjdABFbmRP
ZlJvd3NldABnZXRfRGVmYXVsdABVc2VyQ29tcG9uZW50AFBhcmVudENvbXBvbmVudABTY3JpcHRD
b21wb25lbnQATWljcm9zb2Z0LlNxbFNlcnZlci5UeFNjcmlwdABNaWNyb3NvZnQuU3FsU2VydmVy
LlBpcGVsaW5lSG9zdABJbnB1dDBfUHJvY2Vzc0lucHV0AFN5c3RlbS5UZXh0AElucHV0MF9Qcm9j
ZXNzSW5wdXRSb3cATmV4dFJvdwBnZXRfQ3VzdG9tZXJLZXkAZ2V0X0Fzc2VtYmx5AAAzRQByAHIA
bwByACAAbwBuACAAYwBvAGwAdQBtAG4AIAB7ADAAfQAoAHsAMQB9ACkALgAAI0UAcgByAG8AcgAg
AGgAYQBwAHAAZQBuAGQAIABvAG4AIAAAISAARQByAHIAbwByACAAYwBvAGQAZQA6ACAAewAwAH0A
AICbSQBzAE4AdQBsAGwAIABwAHIAbwBwAGUAcgB0AHkAIABjAGEAbgBuAG8AdAAgAGIAZQAgAHMA
ZQB0ACAAdABvACAARgBhAGwAcwBlAC4AIABBAHMAcwBpAGcAbgAgAGEAIAB2AGEAbAB1AGUAIAB0
AG8AIAB0AGgAZQAgAGMAbwBsAHUAbQBuACAAaQBuAHMAdABlAGEAZAAuAAAPSQBuAHAAdQB0ACAA
MAAAcVMAQwBfADAAZQA2ADkAZgA4ADMAYwA1AGEAMQA2ADQAZgA5ADcAYQA5ADcAYgBlADcANQA4
ADcANABlAGIAMAA1ADAAMgAuAFAAcgBvAHAAZQByAHQAaQBlAHMALgBSAGUAcwBvAHUAcgBjAGUA
cwAAAABoRW4A/uIpRZNL+7vfOU/dAAQgAQEIAyAAAQUgAQEREQQgAQEOBSABARFdBgcDHQUODgQg
ABFtAgYIBiACHQUICAQAABJxBSABDh0FBCAAEnkEIAEOCAYAAw4OHBwFAAIODhwHAAQODg4ODgkg
AwESPR0IEkEDBhI9AwYdCAQgAQgIBCABAggEIAEcCAUgAgEIHAMgAAIHIAICDhGAhQUgAR0ICAgA
ARKAiRGAjQUgABKAkQcgAgEOEoCRCLd6XFYZNOCJCImEXc2AgMyRAwYSFAMGEhgDBhJJAwYSVQMG
ElkDBhIgBSABARIMAyAACAQgABJFBCABAQIJIAQBCA4SPRJBBSABARJJBAAAElUEAAASWQUAAQES
WQQAABIgAwAAAQMoAAgDKAACBCgAEkUDKAAOBAgAElUECAASWQQIABIgCAEACAAAAAAAHgEAAQBU
AhZXcmFwTm9uRXhjZXB0aW9uVGhyb3dzAQgBAAIAAAAAACgBACNTQ18wZTY5ZjgzYzVhMTY0Zjk3
YTk3YmU3NTg3NGViMDUwMgAABQEAAAAAFgEAEUNvcHlyaWdodCBAICAyMDIzAABJAQAaLk5FVEZy
YW1ld29yayxWZXJzaW9uPXY0LjcBAFQOFEZyYW1ld29ya0Rpc3BsYXlOYW1lEi5ORVQgRnJhbWV3
b3JrIDQuNwQBAAAAtAAAAM7K774BAAAAkQAAAGxTeXN0ZW0uUmVzb3VyY2VzLlJlc291cmNlUmVh
ZGVyLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tl
eVRva2VuPWI3N2E1YzU2MTkzNGUwODkjU3lzdGVtLlJlc291cmNlcy5SdW50aW1lUmVzb3VyY2VT
ZXQCAAAAAAAAAAAAAABQQURQQURQtAAAADA1AAAAAAAAAAAAAEo1AAAAIAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAA8NQAAAAAAAAAAAAAAAF9Db3JEbGxNYWluAG1zY29yZWUuZGxsAAAAAAD/JQAgABAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAABABAAAAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAAAABI
AAAAWEAAAOwDAAAAAAAAAAAAAOwDNAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBPAAAA
AAC9BO/+AAABAAAAAQAAAAAAAAABAAAAAAA/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAARAAA
AAEAVgBhAHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBvAG4A
AAAAAAAAsARMAwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAAAoAwAAAQAwADAAMAAw
ADAANABiADAAAAAaAAEAAQBDAG8AbQBtAGUAbgB0AHMAAAAAAAAAIgABAAEAQwBvAG0AcABhAG4A
eQBOAGEAbQBlAAAAAAAAAAAAcAAkAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4AAAAA
AFMAQwBfADAAZQA2ADkAZgA4ADMAYwA1AGEAMQA2ADQAZgA5ADcAYQA5ADcAYgBlADcANQA4ADcA
NABlAGIAMAA1ADAAMgAAADAACAABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAALgAw
AC4AMAAAAHAAKAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAAUwBDAF8AMgA5ADYAMAA1AEYA
NABFADkAOQAzADIANABCADMAQgBBADAAMwBCADUAQgA1AEQANQAwAEUAMgA1ADIAMwAyAC4AZABs
AGwAAABIABIAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQAAABDAG8AcAB5AHIAaQBnAGgA
dAAgAEAAIAAgADIAMAAyADMAAAAqAAEAAQBMAGUAZwBhAGwAVAByAGEAZABlAG0AYQByAGsAcwAA
AAAAAAAAAHgAKAABAE8AcgBpAGcAaQBuAGEAbABGAGkAbABlAG4AYQBtAGUAAABTAEMAXwAyADkA
NgAwADUARgA0AEUAOQA5ADMAMgA0AEIAMwBCAEEAMAAzAEIANQBCADUARAA1ADAARQAyADUAMgAz
ADIALgBkAGwAbAAAAGgAJAABAFAAcgBvAGQAdQBjAHQATgBhAG0AZQAAAAAAUwBDAF8AMABlADYA
OQBmADgAMwBjADUAYQAxADYANABmADkANwBhADkANwBiAGUANwA1ADgANwA0AGUAYgAwADUAMAAy
AAAANAAIAAEAUAByAG8AZAB1AGMAdABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgAwAC4AMAAAADgA
CAABAEEAcwBzAGUAbQBiAGwAeQAgAFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADAALgAwAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAAAAwAAABcNQAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                  name="VSTAProjectName"
                  typeConverter="NOTBROWSABLE">SC_29605f4e99324b3ba03b5b5d50e25232</property>
                <property
                  dataType="System.String"
                  description="Specifies the programming language used by the script."
                  name="ScriptLanguage"
                  typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read-only variables."
                  name="ReadOnlyVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg"></property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read/write variables."
                  name="ReadWriteVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg"></property>
                <property
                  dataType="System.String"
                  description="List of breakpoints present on the script."
                  isArray="true"
                  name="BreakpointCollection"
                  typeConverter="NOTBROWSABLE">
                  <arrayElements
                    arrayElementCount="0" />
                </property>
                <property
                  dataType="System.String"
                  description="Checksum to match component metedata against compiled codes."
                  name="MetadataChecksum140"
                  typeConverter="NOTBROWSABLE">6F</property>
                <property
                  dataType="System.String"
                  name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
              </properties>
              <inputs>
                <input
                  refId="Package\SCD for DimCustomer\Log xml file parsing.Inputs[Input 0]"
                  hasSideEffects="true"
                  name="Input 0">
                  <inputColumns>
                    <inputColumn
                      refId="Package\SCD for DimCustomer\Log xml file parsing.Inputs[Input 0].Columns[ErrorCode]"
                      cachedDataType="i4"
                      cachedName="ErrorCode"
                      lineageId="Package\SCD for DimCustomer\XML Source.Outputs[Customer Error Output].Columns[ErrorCode]" />
                    <inputColumn
                      refId="Package\SCD for DimCustomer\Log xml file parsing.Inputs[Input 0].Columns[ErrorColumn]"
                      cachedDataType="i4"
                      cachedName="ErrorColumn"
                      lineageId="Package\SCD for DimCustomer\XML Source.Outputs[Customer Error Output].Columns[ErrorColumn]" />
                    <inputColumn
                      refId="Package\SCD for DimCustomer\Log xml file parsing.Inputs[Input 0].Columns[CustomerKey]"
                      cachedDataType="nText"
                      cachedName="CustomerKey"
                      lineageId="Package\SCD for DimCustomer\XML Source.Outputs[Customer Error Output].Columns[CustomerKey]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\SCD for DimCustomer\Log xml file parsing.Outputs[Output 0]"
                  name="Output 0"
                  synchronousInputId="Package\SCD for DimCustomer\Log xml file parsing.Inputs[Input 0]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\SCD for DimCustomer\Log xml file parsing.Outputs[Output 0].Columns[ErrorDescription]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\SCD for DimCustomer\Log xml file parsing.Outputs[Output 0].Columns[ErrorDescription]"
                      name="ErrorDescription" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\SCD for DimCustomer\Merge Join"
              componentClassID="Microsoft.MergeJoin"
              contactInfo="Merge Join;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Combine two sorted data flows into one using the FULL, LEFT, or INNER join. We recommend this transformation when data flows can be sorted at their sources."
              name="Merge Join"
              version="1">
              <properties>
                <property
                  dataType="System.Int32"
                  description="Specifies the type of join to perform."
                  name="JoinType"
                  typeConverter="JoinType">1</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the number of columns in the ordering key."
                  name="NumKeyColumns">1</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the null values are treated as equal values."
                  name="TreatNullsAsEqual">true</property>
                <property
                  dataType="System.Int32"
                  description="Indicates the requested maximum buffers per input before blocking."
                  name="MaxBuffersPerInput">5</property>
              </properties>
              <inputs>
                <input
                  refId="Package\SCD for DimCustomer\Merge Join.Inputs[Merge Join Left Input]"
                  hasSideEffects="true"
                  name="Merge Join Left Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\SCD for DimCustomer\Merge Join.Inputs[Merge Join Left Input].Columns[City]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="City"
                      cachedSortKeyPosition="1"
                      lineageId="Package\SCD for DimCustomer\Sort 1.Outputs[Sort Output].Columns[City]" />
                    <inputColumn
                      refId="Package\SCD for DimCustomer\Merge Join.Inputs[Merge Join Left Input].Columns[CustomerKey]"
                      cachedDataType="ui2"
                      cachedName="CustomerKey"
                      lineageId="Package\SCD for DimCustomer\Sort 1.Outputs[Sort Output].Columns[CustomerKey]" />
                    <inputColumn
                      refId="Package\SCD for DimCustomer\Merge Join.Inputs[Merge Join Left Input].Columns[CustomerId]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="CustomerId"
                      lineageId="Package\SCD for DimCustomer\Sort 1.Outputs[Sort Output].Columns[CustomerId]" />
                    <inputColumn
                      refId="Package\SCD for DimCustomer\Merge Join.Inputs[Merge Join Left Input].Columns[Customer]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="Customer"
                      lineageId="Package\SCD for DimCustomer\Sort 1.Outputs[Sort Output].Columns[Customer]" />
                    <inputColumn
                      refId="Package\SCD for DimCustomer\Merge Join.Inputs[Merge Join Left Input].Columns[State-Province]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="State-Province"
                      lineageId="Package\SCD for DimCustomer\Sort 1.Outputs[Sort Output].Columns[State-Province]" />
                    <inputColumn
                      refId="Package\SCD for DimCustomer\Merge Join.Inputs[Merge Join Left Input].Columns[Country-Region]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="Country-Region"
                      lineageId="Package\SCD for DimCustomer\Sort 1.Outputs[Sort Output].Columns[Country-Region]" />
                    <inputColumn
                      refId="Package\SCD for DimCustomer\Merge Join.Inputs[Merge Join Left Input].Columns[PostalCode]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="PostalCode"
                      lineageId="Package\SCD for DimCustomer\Sort 1.Outputs[Sort Output].Columns[PostalCode]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
                <input
                  refId="Package\SCD for DimCustomer\Merge Join.Inputs[Merge Join Right Input]"
                  hasSideEffects="true"
                  name="Merge Join Right Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\SCD for DimCustomer\Merge Join.Inputs[Merge Join Right Input].Columns[CityName]"
                      cachedCodepage="1251"
                      cachedDataType="str"
                      cachedLength="255"
                      cachedName="CityName"
                      cachedSortKeyPosition="1"
                      lineageId="Package\SCD for DimCustomer\Sort.Outputs[Sort Output].Columns[CityName]" />
                    <inputColumn
                      refId="Package\SCD for DimCustomer\Merge Join.Inputs[Merge Join Right Input].Columns[id]"
                      cachedDataType="i8"
                      cachedName="id"
                      lineageId="Package\SCD for DimCustomer\Sort.Outputs[Sort Output].Columns[id]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\SCD for DimCustomer\Merge Join.Outputs[Merge Join Output]"
                  isSorted="true"
                  name="Merge Join Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\SCD for DimCustomer\Merge Join.Outputs[Merge Join Output].Columns[CustomerKey]"
                      dataType="ui2"
                      lineageId="Package\SCD for DimCustomer\Merge Join.Outputs[Merge Join Output].Columns[CustomerKey]"
                      name="CustomerKey">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\SCD for DimCustomer\Merge Join.Inputs[Merge Join Left Input].Columns[CustomerKey]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\SCD for DimCustomer\Merge Join.Outputs[Merge Join Output].Columns[CustomerId]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\SCD for DimCustomer\Merge Join.Outputs[Merge Join Output].Columns[CustomerId]"
                      name="CustomerId">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\SCD for DimCustomer\Merge Join.Inputs[Merge Join Left Input].Columns[CustomerId]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\SCD for DimCustomer\Merge Join.Outputs[Merge Join Output].Columns[Customer]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\SCD for DimCustomer\Merge Join.Outputs[Merge Join Output].Columns[Customer]"
                      name="Customer">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\SCD for DimCustomer\Merge Join.Inputs[Merge Join Left Input].Columns[Customer]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\SCD for DimCustomer\Merge Join.Outputs[Merge Join Output].Columns[City]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\SCD for DimCustomer\Merge Join.Outputs[Merge Join Output].Columns[City]"
                      name="City"
                      sortKeyPosition="1">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\SCD for DimCustomer\Merge Join.Inputs[Merge Join Left Input].Columns[City]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\SCD for DimCustomer\Merge Join.Outputs[Merge Join Output].Columns[State-Province]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\SCD for DimCustomer\Merge Join.Outputs[Merge Join Output].Columns[State-Province]"
                      name="State-Province">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\SCD for DimCustomer\Merge Join.Inputs[Merge Join Left Input].Columns[State-Province]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\SCD for DimCustomer\Merge Join.Outputs[Merge Join Output].Columns[Country-Region]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\SCD for DimCustomer\Merge Join.Outputs[Merge Join Output].Columns[Country-Region]"
                      name="Country-Region">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\SCD for DimCustomer\Merge Join.Inputs[Merge Join Left Input].Columns[Country-Region]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\SCD for DimCustomer\Merge Join.Outputs[Merge Join Output].Columns[PostalCode]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\SCD for DimCustomer\Merge Join.Outputs[Merge Join Output].Columns[PostalCode]"
                      name="PostalCode">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\SCD for DimCustomer\Merge Join.Inputs[Merge Join Left Input].Columns[PostalCode]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\SCD for DimCustomer\Merge Join.Outputs[Merge Join Output].Columns[GeographyKey]"
                      dataType="i8"
                      lineageId="Package\SCD for DimCustomer\Merge Join.Outputs[Merge Join Output].Columns[GeographyKey]"
                      name="GeographyKey">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\SCD for DimCustomer\Merge Join.Inputs[Merge Join Right Input].Columns[id]}</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\SCD for DimCustomer\OLE DB Command"
              componentClassID="Microsoft.OLEDBCommand"
              contactInfo="OLE DB Command;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;2"
              description="Runs an SQL statement for each row in a data flow. For example, call a 'new employee setup' stored procedure for each row in the 'new employees' table. Note: running an SQL statement for each row of a large data flow may take a long time."
              name="OLE DB Command"
              usesDispositions="true"
              version="2">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  expressionType="Notify"
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">UPDATE [dbo].[DimClient] SET [IsValid] = ? WHERE [id] = ? AND [IsValid] = '1'</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
              </properties>
              <connections>
                <connection
                  refId="Package\SCD for DimCustomer\OLE DB Command.Connections[OleDbConnection]"
                  connectionManagerID="{C54996EB-42F6-4A79-9932-F1C853243153}:external"
                  connectionManagerRefId="Project.ConnectionManagers[localhost.SMOAD]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\SCD for DimCustomer\OLE DB Command.Inputs[OLE DB Command Input]"
                  errorOrTruncationOperation="Command Execution"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="OLE DB Command Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\SCD for DimCustomer\OLE DB Command.Inputs[OLE DB Command Input].Columns[Copy of CustomerKey]"
                      cachedDataType="i8"
                      cachedName="Copy of CustomerKey"
                      externalMetadataColumnId="Package\SCD for DimCustomer\OLE DB Command.Inputs[OLE DB Command Input].ExternalColumns[Param_1]"
                      lineageId="Package\SCD for DimCustomer\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of CustomerKey]" />
                    <inputColumn
                      refId="Package\SCD for DimCustomer\OLE DB Command.Inputs[OLE DB Command Input].Columns[IsValid]"
                      cachedDataType="bool"
                      cachedName="IsValid"
                      externalMetadataColumnId="Package\SCD for DimCustomer\OLE DB Command.Inputs[OLE DB Command Input].ExternalColumns[Param_0]"
                      lineageId="Package\SCD for DimCustomer\Derived Column.Outputs[Derived Column Output].Columns[IsValid]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\SCD for DimCustomer\OLE DB Command.Inputs[OLE DB Command Input].ExternalColumns[Param_0]"
                      dataType="bool"
                      name="Param_0">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">65</property>
                      </properties>
                    </externalMetadataColumn>
                    <externalMetadataColumn
                      refId="Package\SCD for DimCustomer\OLE DB Command.Inputs[OLE DB Command Input].ExternalColumns[Param_1]"
                      dataType="i8"
                      name="Param_1">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">81</property>
                      </properties>
                    </externalMetadataColumn>
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\SCD for DimCustomer\OLE DB Command.Outputs[OLE DB Command Output]"
                  exclusionGroup="1"
                  name="OLE DB Command Output"
                  synchronousInputId="Package\SCD for DimCustomer\OLE DB Command.Inputs[OLE DB Command Input]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\SCD for DimCustomer\OLE DB Command.Outputs[OLE DB Command Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="OLE DB Command Error Output"
                  synchronousInputId="Package\SCD for DimCustomer\OLE DB Command.Inputs[OLE DB Command Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\SCD for DimCustomer\OLE DB Command.Outputs[OLE DB Command Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\SCD for DimCustomer\OLE DB Command.Outputs[OLE DB Command Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\SCD for DimCustomer\OLE DB Command.Outputs[OLE DB Command Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\SCD for DimCustomer\OLE DB Command.Outputs[OLE DB Command Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\SCD for DimCustomer\OLE DB Source 1"
              componentClassID="Microsoft.OLEDBSource"
              contactInfo="OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7"
              description="OLE DB Source"
              name="OLE DB Source 1"
              usesDispositions="true"
              version="7">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[dbo].[DimGeography]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.String"
                  description="The variable that contains the SQL command to be executed."
                  name="SqlCommandVariable"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">0</property>
                <property
                  dataType="System.String"
                  description="The mappings between the parameters in the SQL command and variables."
                  name="ParameterMapping"></property>
              </properties>
              <connections>
                <connection
                  refId="Package\SCD for DimCustomer\OLE DB Source 1.Connections[OleDbConnection]"
                  connectionManagerID="{C54996EB-42F6-4A79-9932-F1C853243153}:external"
                  connectionManagerRefId="Project.ConnectionManagers[localhost.SMOAD]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\SCD for DimCustomer\OLE DB Source 1.Outputs[OLE DB Source Output]"
                  name="OLE DB Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\SCD for DimCustomer\OLE DB Source 1.Outputs[OLE DB Source Output].Columns[GeographyKey]"
                      dataType="i8"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\SCD for DimCustomer\OLE DB Source 1.Outputs[OLE DB Source Output].ExternalColumns[id]"
                      lineageId="Package\SCD for DimCustomer\OLE DB Source 1.Outputs[OLE DB Source Output].Columns[GeographyKey]"
                      name="GeographyKey"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\SCD for DimCustomer\OLE DB Source 1.Outputs[OLE DB Source Output].Columns[Country]"
                      codePage="1251"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\SCD for DimCustomer\OLE DB Source 1.Outputs[OLE DB Source Output].ExternalColumns[Country]"
                      length="255"
                      lineageId="Package\SCD for DimCustomer\OLE DB Source 1.Outputs[OLE DB Source Output].Columns[Country]"
                      name="Country"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\SCD for DimCustomer\OLE DB Source 1.Outputs[OLE DB Source Output].Columns[CityName]"
                      codePage="1251"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\SCD for DimCustomer\OLE DB Source 1.Outputs[OLE DB Source Output].ExternalColumns[CityName]"
                      length="255"
                      lineageId="Package\SCD for DimCustomer\OLE DB Source 1.Outputs[OLE DB Source Output].Columns[CityName]"
                      name="CityName"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\SCD for DimCustomer\OLE DB Source 1.Outputs[OLE DB Source Output].Columns[RegionCode]"
                      dataType="i2"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\SCD for DimCustomer\OLE DB Source 1.Outputs[OLE DB Source Output].ExternalColumns[RegionCode]"
                      lineageId="Package\SCD for DimCustomer\OLE DB Source 1.Outputs[OLE DB Source Output].Columns[RegionCode]"
                      name="RegionCode"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\SCD for DimCustomer\OLE DB Source 1.Outputs[OLE DB Source Output].Columns[District]"
                      codePage="1251"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\SCD for DimCustomer\OLE DB Source 1.Outputs[OLE DB Source Output].ExternalColumns[District]"
                      length="255"
                      lineageId="Package\SCD for DimCustomer\OLE DB Source 1.Outputs[OLE DB Source Output].Columns[District]"
                      name="District"
                      truncationRowDisposition="FailComponent" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\SCD for DimCustomer\OLE DB Source 1.Outputs[OLE DB Source Output].ExternalColumns[id]"
                      dataType="i8"
                      name="id" />
                    <externalMetadataColumn
                      refId="Package\SCD for DimCustomer\OLE DB Source 1.Outputs[OLE DB Source Output].ExternalColumns[Country]"
                      codePage="1251"
                      dataType="str"
                      length="255"
                      name="Country" />
                    <externalMetadataColumn
                      refId="Package\SCD for DimCustomer\OLE DB Source 1.Outputs[OLE DB Source Output].ExternalColumns[CityName]"
                      codePage="1251"
                      dataType="str"
                      length="255"
                      name="CityName" />
                    <externalMetadataColumn
                      refId="Package\SCD for DimCustomer\OLE DB Source 1.Outputs[OLE DB Source Output].ExternalColumns[RegionCode]"
                      dataType="i2"
                      name="RegionCode" />
                    <externalMetadataColumn
                      refId="Package\SCD for DimCustomer\OLE DB Source 1.Outputs[OLE DB Source Output].ExternalColumns[District]"
                      codePage="1251"
                      dataType="str"
                      length="255"
                      name="District" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\SCD for DimCustomer\OLE DB Source 1.Outputs[OLE DB Source Error Output]"
                  isErrorOut="true"
                  name="OLE DB Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\SCD for DimCustomer\OLE DB Source 1.Outputs[OLE DB Source Error Output].Columns[id]"
                      dataType="i8"
                      lineageId="Package\SCD for DimCustomer\OLE DB Source 1.Outputs[OLE DB Source Error Output].Columns[id]"
                      name="id" />
                    <outputColumn
                      refId="Package\SCD for DimCustomer\OLE DB Source 1.Outputs[OLE DB Source Error Output].Columns[Country]"
                      codePage="1251"
                      dataType="str"
                      length="255"
                      lineageId="Package\SCD for DimCustomer\OLE DB Source 1.Outputs[OLE DB Source Error Output].Columns[Country]"
                      name="Country" />
                    <outputColumn
                      refId="Package\SCD for DimCustomer\OLE DB Source 1.Outputs[OLE DB Source Error Output].Columns[CityName]"
                      codePage="1251"
                      dataType="str"
                      length="255"
                      lineageId="Package\SCD for DimCustomer\OLE DB Source 1.Outputs[OLE DB Source Error Output].Columns[CityName]"
                      name="CityName" />
                    <outputColumn
                      refId="Package\SCD for DimCustomer\OLE DB Source 1.Outputs[OLE DB Source Error Output].Columns[RegionCode]"
                      dataType="i2"
                      lineageId="Package\SCD for DimCustomer\OLE DB Source 1.Outputs[OLE DB Source Error Output].Columns[RegionCode]"
                      name="RegionCode" />
                    <outputColumn
                      refId="Package\SCD for DimCustomer\OLE DB Source 1.Outputs[OLE DB Source Error Output].Columns[District]"
                      codePage="1251"
                      dataType="str"
                      length="255"
                      lineageId="Package\SCD for DimCustomer\OLE DB Source 1.Outputs[OLE DB Source Error Output].Columns[District]"
                      name="District" />
                    <outputColumn
                      refId="Package\SCD for DimCustomer\OLE DB Source 1.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\SCD for DimCustomer\OLE DB Source 1.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\SCD for DimCustomer\OLE DB Source 1.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\SCD for DimCustomer\OLE DB Source 1.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\SCD for DimCustomer\Slowly Changing Dimension"
              componentClassID="Microsoft.SCD"
              contactInfo="Slowly Changing Dimension;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;3"
              description="Updates a SQL Server Analysis Services data warehouse dimension. Update dimension records that are already present and  insert dimension records that aren't. For example, update the DimProduct table of the AdventureWorksDW OLAP database with data from the Products table in the AdventureWorks OLTP database."
              name="Slowly Changing Dimension"
              version="3">
              <properties>
                <property
                  dataType="System.String"
                  description="Specifies the SELECT statement used to create a schema rowset."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">SELECT [FullName], [id],[IsValid] FROM [dbo].[DimClient]</property>
                <property
                  dataType="System.String"
                  description="Specifies the WHERE clause in the SELECT statement that selects the current row among rows with identical business keys."
                  name="CurrentRowWhere">[IsValid] = '1'</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether historical attribute updates are directed to the transformation output for changing attribute updates."
                  name="UpdateChangingAttributeHistory">false</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the transformation fails when columns with fixed attributes contain changes."
                  name="FailOnFixedAttributeChange">true</property>
                <property
                  dataType="System.String"
                  description="Specifies the column name for the inferred member."
                  name="InferredMemberIndicator"></property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether inferred member updates are detected."
                  name="EnableInferredMember">false</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the transformation fails when a lookup of an existing record fails."
                  name="FailOnLookupFailure">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies that all rows in the input are new or the transformation detects the change type."
                  name="IncomingRowChangeType"
                  typeConverter="IncomingRowChangeType">1</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
              </properties>
              <connections>
                <connection
                  refId="Package\SCD for DimCustomer\Slowly Changing Dimension.Connections[LookupConnection]"
                  connectionManagerID="{C54996EB-42F6-4A79-9932-F1C853243153}:external"
                  connectionManagerRefId="Project.ConnectionManagers[localhost.SMOAD]"
                  description="Defines the connection to use for lookups in the dimension table"
                  name="LookupConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\SCD for DimCustomer\Slowly Changing Dimension.Inputs[Slowly Changing Dimension Input]"
                  name="Slowly Changing Dimension Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\SCD for DimCustomer\Slowly Changing Dimension.Inputs[Slowly Changing Dimension Input].Columns[FullName]"
                      cachedCodepage="1251"
                      cachedDataType="str"
                      cachedLength="255"
                      cachedName="FullName"
                      externalMetadataColumnId="Package\SCD for DimCustomer\Slowly Changing Dimension.Inputs[Slowly Changing Dimension Input].ExternalColumns[FullName]"
                      lineageId="Package\SCD for DimCustomer\Data Conversion.Outputs[Data Conversion Output].Columns[FullName]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          name="ColumnType"
                          typeConverter="ColumnType">3</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\SCD for DimCustomer\Slowly Changing Dimension.Inputs[Slowly Changing Dimension Input].Columns[Copy of CustomerKey]"
                      cachedDataType="i8"
                      cachedName="Copy of CustomerKey"
                      externalMetadataColumnId="Package\SCD for DimCustomer\Slowly Changing Dimension.Inputs[Slowly Changing Dimension Input].ExternalColumns[id]"
                      lineageId="Package\SCD for DimCustomer\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of CustomerKey]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          name="ColumnType"
                          typeConverter="ColumnType">1</property>
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\SCD for DimCustomer\Slowly Changing Dimension.Inputs[Slowly Changing Dimension Input].ExternalColumns[FullName]"
                      codePage="1251"
                      dataType="str"
                      length="255"
                      name="FullName" />
                    <externalMetadataColumn
                      refId="Package\SCD for DimCustomer\Slowly Changing Dimension.Inputs[Slowly Changing Dimension Input].ExternalColumns[id]"
                      dataType="i8"
                      name="id" />
                    <externalMetadataColumn
                      refId="Package\SCD for DimCustomer\Slowly Changing Dimension.Inputs[Slowly Changing Dimension Input].ExternalColumns[IsValid]"
                      dataType="bool"
                      name="IsValid" />
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\SCD for DimCustomer\Slowly Changing Dimension.Outputs[Unchanged Output]"
                  description="Unchanged rows"
                  exclusionGroup="1"
                  name="Unchanged Output"
                  synchronousInputId="Package\SCD for DimCustomer\Slowly Changing Dimension.Inputs[Slowly Changing Dimension Input]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\SCD for DimCustomer\Slowly Changing Dimension.Outputs[New Output]"
                  description="New rows"
                  exclusionGroup="1"
                  name="New Output"
                  synchronousInputId="Package\SCD for DimCustomer\Slowly Changing Dimension.Inputs[Slowly Changing Dimension Input]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\SCD for DimCustomer\Slowly Changing Dimension.Outputs[Fixed Attribute Output]"
                  description="Rows with changes in columns tagged FixedAttribute"
                  exclusionGroup="1"
                  name="Fixed Attribute Output"
                  synchronousInputId="Package\SCD for DimCustomer\Slowly Changing Dimension.Inputs[Slowly Changing Dimension Input]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\SCD for DimCustomer\Slowly Changing Dimension.Outputs[Changing Attribute Updates Output]"
                  description="These rows contain new information for ChangingAttribute (Type 1) column changes"
                  exclusionGroup="1"
                  name="Changing Attribute Updates Output"
                  synchronousInputId="Package\SCD for DimCustomer\Slowly Changing Dimension.Inputs[Slowly Changing Dimension Input]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\SCD for DimCustomer\Slowly Changing Dimension.Outputs[Historical Attribute Inserts Output]"
                  description="HistoricalAttribute (Type 2) changes result in these new rows"
                  exclusionGroup="2"
                  name="Historical Attribute Inserts Output"
                  synchronousInputId="Package\SCD for DimCustomer\Slowly Changing Dimension.Inputs[Slowly Changing Dimension Input]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\SCD for DimCustomer\Slowly Changing Dimension.Outputs[Inferred Member Updates Output]"
                  description="Information to update unpopulated initial dimension row"
                  exclusionGroup="1"
                  name="Inferred Member Updates Output"
                  synchronousInputId="Package\SCD for DimCustomer\Slowly Changing Dimension.Inputs[Slowly Changing Dimension Input]">
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\SCD for DimCustomer\Sort"
              componentClassID="Microsoft.Sort"
              contactInfo="Sort;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Sorts input data in ascending or descending order when it cannot be sorted at its source. For example, sort sales data by 'customer id' before it is written to a flat file and delivered to another department. Note: We do not recommend this transformation for large data flows."
              name="Sort"
              version="1">
              <properties>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the Sort transformation removes rows with duplicate sort values."
                  name="EliminateDuplicates">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the maximum number of threads to use for sorting."
                  expressionType="Notify"
                  name="MaximumThreads">-1</property>
              </properties>
              <inputs>
                <input
                  refId="Package\SCD for DimCustomer\Sort.Inputs[Sort Input]"
                  name="Sort Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\SCD for DimCustomer\Sort.Inputs[Sort Input].Columns[GeographyKey]"
                      cachedDataType="i8"
                      cachedName="GeographyKey"
                      lineageId="Package\SCD for DimCustomer\OLE DB Source 1.Outputs[OLE DB Source Output].Columns[GeographyKey]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\SCD for DimCustomer\Sort.Inputs[Sort Input].Columns[Country]"
                      cachedCodepage="1251"
                      cachedDataType="str"
                      cachedLength="255"
                      cachedName="Country"
                      lineageId="Package\SCD for DimCustomer\OLE DB Source 1.Outputs[OLE DB Source Output].Columns[Country]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\SCD for DimCustomer\Sort.Inputs[Sort Input].Columns[CityName]"
                      cachedCodepage="1251"
                      cachedDataType="str"
                      cachedLength="255"
                      cachedName="CityName"
                      lineageId="Package\SCD for DimCustomer\OLE DB Source 1.Outputs[OLE DB Source Output].Columns[CityName]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">1</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\SCD for DimCustomer\Sort.Inputs[Sort Input].Columns[RegionCode]"
                      cachedDataType="i2"
                      cachedName="RegionCode"
                      lineageId="Package\SCD for DimCustomer\OLE DB Source 1.Outputs[OLE DB Source Output].Columns[RegionCode]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\SCD for DimCustomer\Sort.Inputs[Sort Input].Columns[District]"
                      cachedCodepage="1251"
                      cachedDataType="str"
                      cachedLength="255"
                      cachedName="District"
                      lineageId="Package\SCD for DimCustomer\OLE DB Source 1.Outputs[OLE DB Source Output].Columns[District]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\SCD for DimCustomer\Sort.Outputs[Sort Output]"
                  isSorted="true"
                  name="Sort Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\SCD for DimCustomer\Sort.Outputs[Sort Output].Columns[id]"
                      dataType="i8"
                      lineageId="Package\SCD for DimCustomer\Sort.Outputs[Sort Output].Columns[id]"
                      name="id">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\SCD for DimCustomer\OLE DB Source 1.Outputs[OLE DB Source Output].Columns[GeographyKey]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\SCD for DimCustomer\Sort.Outputs[Sort Output].Columns[Country]"
                      codePage="1251"
                      dataType="str"
                      length="255"
                      lineageId="Package\SCD for DimCustomer\Sort.Outputs[Sort Output].Columns[Country]"
                      name="Country">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\SCD for DimCustomer\OLE DB Source 1.Outputs[OLE DB Source Output].Columns[Country]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\SCD for DimCustomer\Sort.Outputs[Sort Output].Columns[CityName]"
                      codePage="1251"
                      dataType="str"
                      length="255"
                      lineageId="Package\SCD for DimCustomer\Sort.Outputs[Sort Output].Columns[CityName]"
                      name="CityName"
                      sortKeyPosition="1">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\SCD for DimCustomer\OLE DB Source 1.Outputs[OLE DB Source Output].Columns[CityName]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\SCD for DimCustomer\Sort.Outputs[Sort Output].Columns[RegionCode]"
                      dataType="i2"
                      lineageId="Package\SCD for DimCustomer\Sort.Outputs[Sort Output].Columns[RegionCode]"
                      name="RegionCode">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\SCD for DimCustomer\OLE DB Source 1.Outputs[OLE DB Source Output].Columns[RegionCode]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\SCD for DimCustomer\Sort.Outputs[Sort Output].Columns[District]"
                      codePage="1251"
                      dataType="str"
                      length="255"
                      lineageId="Package\SCD for DimCustomer\Sort.Outputs[Sort Output].Columns[District]"
                      name="District">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\SCD for DimCustomer\OLE DB Source 1.Outputs[OLE DB Source Output].Columns[District]}</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\SCD for DimCustomer\Sort 1"
              componentClassID="Microsoft.Sort"
              contactInfo="Sort;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Sorts input data in ascending or descending order when it cannot be sorted at its source. For example, sort sales data by 'customer id' before it is written to a flat file and delivered to another department. Note: We do not recommend this transformation for large data flows."
              name="Sort 1"
              version="1">
              <properties>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the Sort transformation removes rows with duplicate sort values."
                  name="EliminateDuplicates">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the maximum number of threads to use for sorting."
                  expressionType="Notify"
                  name="MaximumThreads">-1</property>
              </properties>
              <inputs>
                <input
                  refId="Package\SCD for DimCustomer\Sort 1.Inputs[Sort Input]"
                  name="Sort Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\SCD for DimCustomer\Sort 1.Inputs[Sort Input].Columns[CustomerKey]"
                      cachedDataType="ui2"
                      cachedName="CustomerKey"
                      lineageId="Package\SCD for DimCustomer\XML Source.Outputs[Customer].Columns[CustomerKey]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\SCD for DimCustomer\Sort 1.Inputs[Sort Input].Columns[CustomerId]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="CustomerId"
                      lineageId="Package\SCD for DimCustomer\XML Source.Outputs[Customer].Columns[CustomerId]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\SCD for DimCustomer\Sort 1.Inputs[Sort Input].Columns[Customer]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="Customer"
                      lineageId="Package\SCD for DimCustomer\XML Source.Outputs[Customer].Columns[Customer]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\SCD for DimCustomer\Sort 1.Inputs[Sort Input].Columns[City]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="City"
                      lineageId="Package\SCD for DimCustomer\XML Source.Outputs[Customer].Columns[City]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">1</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\SCD for DimCustomer\Sort 1.Inputs[Sort Input].Columns[State-Province]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="State-Province"
                      lineageId="Package\SCD for DimCustomer\XML Source.Outputs[Customer].Columns[State-Province]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\SCD for DimCustomer\Sort 1.Inputs[Sort Input].Columns[Country-Region]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="Country-Region"
                      lineageId="Package\SCD for DimCustomer\XML Source.Outputs[Customer].Columns[Country-Region]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\SCD for DimCustomer\Sort 1.Inputs[Sort Input].Columns[PostalCode]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="PostalCode"
                      lineageId="Package\SCD for DimCustomer\XML Source.Outputs[Customer].Columns[PostalCode]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\SCD for DimCustomer\Sort 1.Outputs[Sort Output]"
                  isSorted="true"
                  name="Sort Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\SCD for DimCustomer\Sort 1.Outputs[Sort Output].Columns[CustomerKey]"
                      dataType="ui2"
                      lineageId="Package\SCD for DimCustomer\Sort 1.Outputs[Sort Output].Columns[CustomerKey]"
                      name="CustomerKey">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\SCD for DimCustomer\XML Source.Outputs[Customer].Columns[CustomerKey]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\SCD for DimCustomer\Sort 1.Outputs[Sort Output].Columns[CustomerId]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\SCD for DimCustomer\Sort 1.Outputs[Sort Output].Columns[CustomerId]"
                      name="CustomerId">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\SCD for DimCustomer\XML Source.Outputs[Customer].Columns[CustomerId]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\SCD for DimCustomer\Sort 1.Outputs[Sort Output].Columns[Customer]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\SCD for DimCustomer\Sort 1.Outputs[Sort Output].Columns[Customer]"
                      name="Customer">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\SCD for DimCustomer\XML Source.Outputs[Customer].Columns[Customer]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\SCD for DimCustomer\Sort 1.Outputs[Sort Output].Columns[City]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\SCD for DimCustomer\Sort 1.Outputs[Sort Output].Columns[City]"
                      name="City"
                      sortKeyPosition="1">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\SCD for DimCustomer\XML Source.Outputs[Customer].Columns[City]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\SCD for DimCustomer\Sort 1.Outputs[Sort Output].Columns[State-Province]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\SCD for DimCustomer\Sort 1.Outputs[Sort Output].Columns[State-Province]"
                      name="State-Province">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\SCD for DimCustomer\XML Source.Outputs[Customer].Columns[State-Province]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\SCD for DimCustomer\Sort 1.Outputs[Sort Output].Columns[Country-Region]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\SCD for DimCustomer\Sort 1.Outputs[Sort Output].Columns[Country-Region]"
                      name="Country-Region">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\SCD for DimCustomer\XML Source.Outputs[Customer].Columns[Country-Region]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\SCD for DimCustomer\Sort 1.Outputs[Sort Output].Columns[PostalCode]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\SCD for DimCustomer\Sort 1.Outputs[Sort Output].Columns[PostalCode]"
                      name="PostalCode">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\SCD for DimCustomer\XML Source.Outputs[Customer].Columns[PostalCode]}</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\SCD for DimCustomer\Union All"
              componentClassID="Microsoft.UnionAll"
              contactInfo="Union All;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Combines rows from multiple data flows without sorting. For example, add rows back to a data flow after correction of errors. If sorting is important, we recommend using the Merge transformation."
              name="Union All"
              version="1">
              <inputs>
                <input
                  refId="Package\SCD for DimCustomer\Union All.Inputs[Union All Input 1]"
                  name="Union All Input 1">
                  <inputColumns>
                    <inputColumn
                      refId="Package\SCD for DimCustomer\Union All.Inputs[Union All Input 1].Columns[CustomerKey]"
                      cachedDataType="ui2"
                      cachedName="CustomerKey"
                      lineageId="Package\SCD for DimCustomer\Merge Join.Outputs[Merge Join Output].Columns[CustomerKey]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\SCD for DimCustomer\Union All.Outputs[Union All Output 1].Columns[CustomerKey]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\SCD for DimCustomer\Union All.Inputs[Union All Input 1].Columns[CustomerId]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="CustomerId"
                      lineageId="Package\SCD for DimCustomer\Merge Join.Outputs[Merge Join Output].Columns[CustomerId]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\SCD for DimCustomer\Union All.Outputs[Union All Output 1].Columns[CustomerId]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\SCD for DimCustomer\Union All.Inputs[Union All Input 1].Columns[Customer]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="Customer"
                      lineageId="Package\SCD for DimCustomer\Merge Join.Outputs[Merge Join Output].Columns[Customer]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\SCD for DimCustomer\Union All.Outputs[Union All Output 1].Columns[Customer]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\SCD for DimCustomer\Union All.Inputs[Union All Input 1].Columns[City]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="City"
                      cachedSortKeyPosition="1"
                      lineageId="Package\SCD for DimCustomer\Merge Join.Outputs[Merge Join Output].Columns[City]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\SCD for DimCustomer\Union All.Outputs[Union All Output 1].Columns[City]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\SCD for DimCustomer\Union All.Inputs[Union All Input 1].Columns[State-Province]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="State-Province"
                      lineageId="Package\SCD for DimCustomer\Merge Join.Outputs[Merge Join Output].Columns[State-Province]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\SCD for DimCustomer\Union All.Outputs[Union All Output 1].Columns[State-Province]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\SCD for DimCustomer\Union All.Inputs[Union All Input 1].Columns[Country-Region]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="Country-Region"
                      lineageId="Package\SCD for DimCustomer\Merge Join.Outputs[Merge Join Output].Columns[Country-Region]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\SCD for DimCustomer\Union All.Outputs[Union All Output 1].Columns[Country-Region]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\SCD for DimCustomer\Union All.Inputs[Union All Input 1].Columns[PostalCode]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="PostalCode"
                      lineageId="Package\SCD for DimCustomer\Merge Join.Outputs[Merge Join Output].Columns[PostalCode]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\SCD for DimCustomer\Union All.Outputs[Union All Output 1].Columns[PostalCode]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\SCD for DimCustomer\Union All.Inputs[Union All Input 1].Columns[GeographyKey]"
                      cachedDataType="i8"
                      cachedName="GeographyKey"
                      lineageId="Package\SCD for DimCustomer\Merge Join.Outputs[Merge Join Output].Columns[GeographyKey]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\SCD for DimCustomer\Union All.Outputs[Union All Output 1].Columns[GeographyKey]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\SCD for DimCustomer\Union All.Inputs[Union All Input 1].Columns[Copy of CustomerKey]"
                      cachedDataType="i8"
                      cachedName="Copy of CustomerKey"
                      lineageId="Package\SCD for DimCustomer\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of CustomerKey]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\SCD for DimCustomer\Union All.Outputs[Union All Output 1].Columns[Copy of CustomerKey]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\SCD for DimCustomer\Union All.Inputs[Union All Input 1].Columns[FullName]"
                      cachedCodepage="1251"
                      cachedDataType="str"
                      cachedLength="255"
                      cachedName="FullName"
                      lineageId="Package\SCD for DimCustomer\Data Conversion.Outputs[Data Conversion Output].Columns[FullName]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\SCD for DimCustomer\Union All.Outputs[Union All Output 1].Columns[FullName]}</property>
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
                <input
                  refId="Package\SCD for DimCustomer\Union All.Inputs[Union All Input 2]"
                  hasSideEffects="true"
                  name="Union All Input 2">
                  <inputColumns>
                    <inputColumn
                      refId="Package\SCD for DimCustomer\Union All.Inputs[Union All Input 2].Columns[CustomerKey]"
                      cachedDataType="ui2"
                      cachedName="CustomerKey"
                      lineageId="Package\SCD for DimCustomer\Merge Join.Outputs[Merge Join Output].Columns[CustomerKey]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\SCD for DimCustomer\Union All.Outputs[Union All Output 1].Columns[CustomerKey]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\SCD for DimCustomer\Union All.Inputs[Union All Input 2].Columns[CustomerId]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="CustomerId"
                      lineageId="Package\SCD for DimCustomer\Merge Join.Outputs[Merge Join Output].Columns[CustomerId]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\SCD for DimCustomer\Union All.Outputs[Union All Output 1].Columns[CustomerId]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\SCD for DimCustomer\Union All.Inputs[Union All Input 2].Columns[Customer]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="Customer"
                      lineageId="Package\SCD for DimCustomer\Merge Join.Outputs[Merge Join Output].Columns[Customer]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\SCD for DimCustomer\Union All.Outputs[Union All Output 1].Columns[Customer]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\SCD for DimCustomer\Union All.Inputs[Union All Input 2].Columns[City]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="City"
                      cachedSortKeyPosition="1"
                      lineageId="Package\SCD for DimCustomer\Merge Join.Outputs[Merge Join Output].Columns[City]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\SCD for DimCustomer\Union All.Outputs[Union All Output 1].Columns[City]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\SCD for DimCustomer\Union All.Inputs[Union All Input 2].Columns[State-Province]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="State-Province"
                      lineageId="Package\SCD for DimCustomer\Merge Join.Outputs[Merge Join Output].Columns[State-Province]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\SCD for DimCustomer\Union All.Outputs[Union All Output 1].Columns[State-Province]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\SCD for DimCustomer\Union All.Inputs[Union All Input 2].Columns[Country-Region]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="Country-Region"
                      lineageId="Package\SCD for DimCustomer\Merge Join.Outputs[Merge Join Output].Columns[Country-Region]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\SCD for DimCustomer\Union All.Outputs[Union All Output 1].Columns[Country-Region]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\SCD for DimCustomer\Union All.Inputs[Union All Input 2].Columns[PostalCode]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="PostalCode"
                      lineageId="Package\SCD for DimCustomer\Merge Join.Outputs[Merge Join Output].Columns[PostalCode]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\SCD for DimCustomer\Union All.Outputs[Union All Output 1].Columns[PostalCode]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\SCD for DimCustomer\Union All.Inputs[Union All Input 2].Columns[GeographyKey]"
                      cachedDataType="i8"
                      cachedName="GeographyKey"
                      lineageId="Package\SCD for DimCustomer\Merge Join.Outputs[Merge Join Output].Columns[GeographyKey]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\SCD for DimCustomer\Union All.Outputs[Union All Output 1].Columns[GeographyKey]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\SCD for DimCustomer\Union All.Inputs[Union All Input 2].Columns[Copy of CustomerKey]"
                      cachedDataType="i8"
                      cachedName="Copy of CustomerKey"
                      lineageId="Package\SCD for DimCustomer\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of CustomerKey]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\SCD for DimCustomer\Union All.Outputs[Union All Output 1].Columns[Copy of CustomerKey]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\SCD for DimCustomer\Union All.Inputs[Union All Input 2].Columns[FullName]"
                      cachedCodepage="1251"
                      cachedDataType="str"
                      cachedLength="255"
                      cachedName="FullName"
                      lineageId="Package\SCD for DimCustomer\Data Conversion.Outputs[Data Conversion Output].Columns[FullName]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Output column lineage ID"
                          name="OutputColumnLineageID">#{Package\SCD for DimCustomer\Union All.Outputs[Union All Output 1].Columns[FullName]}</property>
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
                <input
                  refId="Package\SCD for DimCustomer\Union All.Inputs[Union All Input 3]"
                  dangling="true"
                  hasSideEffects="true"
                  name="Union All Input 3">
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\SCD for DimCustomer\Union All.Outputs[Union All Output 1]"
                  name="Union All Output 1">
                  <outputColumns>
                    <outputColumn
                      refId="Package\SCD for DimCustomer\Union All.Outputs[Union All Output 1].Columns[CustomerKey]"
                      dataType="ui2"
                      lineageId="Package\SCD for DimCustomer\Union All.Outputs[Union All Output 1].Columns[CustomerKey]"
                      name="CustomerKey" />
                    <outputColumn
                      refId="Package\SCD for DimCustomer\Union All.Outputs[Union All Output 1].Columns[CustomerId]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\SCD for DimCustomer\Union All.Outputs[Union All Output 1].Columns[CustomerId]"
                      name="CustomerId" />
                    <outputColumn
                      refId="Package\SCD for DimCustomer\Union All.Outputs[Union All Output 1].Columns[Customer]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\SCD for DimCustomer\Union All.Outputs[Union All Output 1].Columns[Customer]"
                      name="Customer" />
                    <outputColumn
                      refId="Package\SCD for DimCustomer\Union All.Outputs[Union All Output 1].Columns[City]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\SCD for DimCustomer\Union All.Outputs[Union All Output 1].Columns[City]"
                      name="City" />
                    <outputColumn
                      refId="Package\SCD for DimCustomer\Union All.Outputs[Union All Output 1].Columns[State-Province]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\SCD for DimCustomer\Union All.Outputs[Union All Output 1].Columns[State-Province]"
                      name="State-Province" />
                    <outputColumn
                      refId="Package\SCD for DimCustomer\Union All.Outputs[Union All Output 1].Columns[Country-Region]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\SCD for DimCustomer\Union All.Outputs[Union All Output 1].Columns[Country-Region]"
                      name="Country-Region" />
                    <outputColumn
                      refId="Package\SCD for DimCustomer\Union All.Outputs[Union All Output 1].Columns[PostalCode]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\SCD for DimCustomer\Union All.Outputs[Union All Output 1].Columns[PostalCode]"
                      name="PostalCode" />
                    <outputColumn
                      refId="Package\SCD for DimCustomer\Union All.Outputs[Union All Output 1].Columns[GeographyKey]"
                      dataType="i8"
                      lineageId="Package\SCD for DimCustomer\Union All.Outputs[Union All Output 1].Columns[GeographyKey]"
                      name="GeographyKey" />
                    <outputColumn
                      refId="Package\SCD for DimCustomer\Union All.Outputs[Union All Output 1].Columns[Copy of CustomerKey]"
                      dataType="i8"
                      lineageId="Package\SCD for DimCustomer\Union All.Outputs[Union All Output 1].Columns[Copy of CustomerKey]"
                      name="Copy of CustomerKey" />
                    <outputColumn
                      refId="Package\SCD for DimCustomer\Union All.Outputs[Union All Output 1].Columns[FullName]"
                      codePage="1251"
                      dataType="str"
                      length="255"
                      lineageId="Package\SCD for DimCustomer\Union All.Outputs[Union All Output 1].Columns[FullName]"
                      name="FullName" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\SCD for DimCustomer\XML Source"
              componentClassID="Microsoft.ManagedComponentHost"
              contactInfo="Extracts data from an XML file. For example, extract catalog data from an XML file that represents catalogs and catalog items. Before using, specify the schema and generate an output for each XML element.;Microsoft Corporation;Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;2"
              description="Extracts data from an XML file. For example, extract catalog data from an XML file that represents catalogs and catalog items. Before using, specify the schema and generate an output for each XML element."
              name="XML Source"
              usesDispositions="true"
              version="2">
              <properties>
                <property
                  dataType="System.String"
                  name="UserComponentTypeName">Microsoft.XmlSourceAdapter</property>
                <property
                  dataType="System.String"
                  description="The XML data used by the XML source adapter."
                  expressionType="Notify"
                  name="XMLData">C:\Users\anton\Projects\SMOAD\SMOAD\customer_data_excel_xml.xml</property>
                <property
                  dataType="System.String"
                  description="The variable used by the XML source adapter to specify XML data."
                  name="XMLDataVariable"></property>
                <property
                  dataType="System.Int32"
                  description="Defines how the XML source adapter gets XML data."
                  name="AccessMode">0</property>
                <property
                  dataType="System.String"
                  description="The XML schema definition used by the XML source adapter."
                  expressionType="Notify"
                  name="XMLSchemaDefinition">C:\Users\anton\Projects\SMOAD\SMOAD\customers.xsd</property>
                <property
                  dataType="System.Boolean"
                  description="Identifies whether or not to use inline schema."
                  name="UseInlineSchema">false</property>
                <property
                  dataType="System.Int32"
                  description="Defines how XML integer types are mapped."
                  name="XMLIntegerMapping"
                  typeConverter="Microsoft.SqlServer.Dts.Pipeline.XmlSourceAdapter+XMLIntegerMappingConverter">0</property>
              </properties>
              <outputs>
                <output
                  refId="Package\SCD for DimCustomer\XML Source.Outputs[Customer]"
                  name="Customer">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Identifies the rowset associated with the output."
                      name="RowsetID">Customer</property>
                  </properties>
                  <outputColumns>
                    <outputColumn
                      refId="Package\SCD for DimCustomer\XML Source.Outputs[Customer].Columns[CustomerKey]"
                      dataType="ui2"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\SCD for DimCustomer\XML Source.Outputs[Customer].ExternalColumns[CustomerKey]"
                      lineageId="Package\SCD for DimCustomer\XML Source.Outputs[Customer].Columns[CustomerKey]"
                      name="CustomerKey"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\SCD for DimCustomer\XML Source.Outputs[Customer].Columns[CustomerId]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\SCD for DimCustomer\XML Source.Outputs[Customer].ExternalColumns[CustomerId]"
                      length="255"
                      lineageId="Package\SCD for DimCustomer\XML Source.Outputs[Customer].Columns[CustomerId]"
                      name="CustomerId"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\SCD for DimCustomer\XML Source.Outputs[Customer].Columns[Customer]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\SCD for DimCustomer\XML Source.Outputs[Customer].ExternalColumns[Customer]"
                      length="255"
                      lineageId="Package\SCD for DimCustomer\XML Source.Outputs[Customer].Columns[Customer]"
                      name="Customer"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\SCD for DimCustomer\XML Source.Outputs[Customer].Columns[City]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\SCD for DimCustomer\XML Source.Outputs[Customer].ExternalColumns[City]"
                      length="255"
                      lineageId="Package\SCD for DimCustomer\XML Source.Outputs[Customer].Columns[City]"
                      name="City"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\SCD for DimCustomer\XML Source.Outputs[Customer].Columns[State-Province]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\SCD for DimCustomer\XML Source.Outputs[Customer].ExternalColumns[State-Province]"
                      length="255"
                      lineageId="Package\SCD for DimCustomer\XML Source.Outputs[Customer].Columns[State-Province]"
                      name="State-Province"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\SCD for DimCustomer\XML Source.Outputs[Customer].Columns[Country-Region]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\SCD for DimCustomer\XML Source.Outputs[Customer].ExternalColumns[Country-Region]"
                      length="255"
                      lineageId="Package\SCD for DimCustomer\XML Source.Outputs[Customer].Columns[Country-Region]"
                      name="Country-Region"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\SCD for DimCustomer\XML Source.Outputs[Customer].Columns[PostalCode]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\SCD for DimCustomer\XML Source.Outputs[Customer].ExternalColumns[PostalCode]"
                      length="255"
                      lineageId="Package\SCD for DimCustomer\XML Source.Outputs[Customer].Columns[PostalCode]"
                      name="PostalCode"
                      truncationRowDisposition="FailComponent" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\SCD for DimCustomer\XML Source.Outputs[Customer].ExternalColumns[CustomerKey]"
                      dataType="ui2"
                      name="CustomerKey">
                      <properties>
                        <property
                          dataType="System.String"
                          name="CLRType">System.UInt16</property>
                      </properties>
                    </externalMetadataColumn>
                    <externalMetadataColumn
                      refId="Package\SCD for DimCustomer\XML Source.Outputs[Customer].ExternalColumns[CustomerId]"
                      dataType="wstr"
                      length="255"
                      name="CustomerId">
                      <properties>
                        <property
                          dataType="System.String"
                          name="CLRType">System.String</property>
                      </properties>
                    </externalMetadataColumn>
                    <externalMetadataColumn
                      refId="Package\SCD for DimCustomer\XML Source.Outputs[Customer].ExternalColumns[Customer]"
                      dataType="wstr"
                      length="255"
                      name="Customer">
                      <properties>
                        <property
                          dataType="System.String"
                          name="CLRType">System.String</property>
                      </properties>
                    </externalMetadataColumn>
                    <externalMetadataColumn
                      refId="Package\SCD for DimCustomer\XML Source.Outputs[Customer].ExternalColumns[City]"
                      dataType="wstr"
                      length="255"
                      name="City">
                      <properties>
                        <property
                          dataType="System.String"
                          name="CLRType">System.String</property>
                      </properties>
                    </externalMetadataColumn>
                    <externalMetadataColumn
                      refId="Package\SCD for DimCustomer\XML Source.Outputs[Customer].ExternalColumns[State-Province]"
                      dataType="wstr"
                      length="255"
                      name="State-Province">
                      <properties>
                        <property
                          dataType="System.String"
                          name="CLRType">System.String</property>
                      </properties>
                    </externalMetadataColumn>
                    <externalMetadataColumn
                      refId="Package\SCD for DimCustomer\XML Source.Outputs[Customer].ExternalColumns[Country-Region]"
                      dataType="wstr"
                      length="255"
                      name="Country-Region">
                      <properties>
                        <property
                          dataType="System.String"
                          name="CLRType">System.String</property>
                      </properties>
                    </externalMetadataColumn>
                    <externalMetadataColumn
                      refId="Package\SCD for DimCustomer\XML Source.Outputs[Customer].ExternalColumns[PostalCode]"
                      dataType="wstr"
                      length="255"
                      name="PostalCode">
                      <properties>
                        <property
                          dataType="System.String"
                          name="CLRType">System.String</property>
                      </properties>
                    </externalMetadataColumn>
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\SCD for DimCustomer\XML Source.Outputs[Customer Error Output]"
                  isErrorOut="true"
                  name="Customer Error Output">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Identifies the rowset associated with the output."
                      name="RowsetID">Customer</property>
                  </properties>
                  <outputColumns>
                    <outputColumn
                      refId="Package\SCD for DimCustomer\XML Source.Outputs[Customer Error Output].Columns[CustomerKey]"
                      dataType="nText"
                      externalMetadataColumnId="Package\SCD for DimCustomer\XML Source.Outputs[Customer Error Output].ExternalColumns[CustomerKey]"
                      lineageId="Package\SCD for DimCustomer\XML Source.Outputs[Customer Error Output].Columns[CustomerKey]"
                      name="CustomerKey" />
                    <outputColumn
                      refId="Package\SCD for DimCustomer\XML Source.Outputs[Customer Error Output].Columns[CustomerId]"
                      dataType="nText"
                      externalMetadataColumnId="Package\SCD for DimCustomer\XML Source.Outputs[Customer Error Output].ExternalColumns[CustomerId]"
                      lineageId="Package\SCD for DimCustomer\XML Source.Outputs[Customer Error Output].Columns[CustomerId]"
                      name="CustomerId" />
                    <outputColumn
                      refId="Package\SCD for DimCustomer\XML Source.Outputs[Customer Error Output].Columns[Customer]"
                      dataType="nText"
                      externalMetadataColumnId="Package\SCD for DimCustomer\XML Source.Outputs[Customer Error Output].ExternalColumns[Customer]"
                      lineageId="Package\SCD for DimCustomer\XML Source.Outputs[Customer Error Output].Columns[Customer]"
                      name="Customer" />
                    <outputColumn
                      refId="Package\SCD for DimCustomer\XML Source.Outputs[Customer Error Output].Columns[City]"
                      dataType="nText"
                      externalMetadataColumnId="Package\SCD for DimCustomer\XML Source.Outputs[Customer Error Output].ExternalColumns[City]"
                      lineageId="Package\SCD for DimCustomer\XML Source.Outputs[Customer Error Output].Columns[City]"
                      name="City" />
                    <outputColumn
                      refId="Package\SCD for DimCustomer\XML Source.Outputs[Customer Error Output].Columns[State-Province]"
                      dataType="nText"
                      externalMetadataColumnId="Package\SCD for DimCustomer\XML Source.Outputs[Customer Error Output].ExternalColumns[State-Province]"
                      lineageId="Package\SCD for DimCustomer\XML Source.Outputs[Customer Error Output].Columns[State-Province]"
                      name="State-Province" />
                    <outputColumn
                      refId="Package\SCD for DimCustomer\XML Source.Outputs[Customer Error Output].Columns[Country-Region]"
                      dataType="nText"
                      externalMetadataColumnId="Package\SCD for DimCustomer\XML Source.Outputs[Customer Error Output].ExternalColumns[Country-Region]"
                      lineageId="Package\SCD for DimCustomer\XML Source.Outputs[Customer Error Output].Columns[Country-Region]"
                      name="Country-Region" />
                    <outputColumn
                      refId="Package\SCD for DimCustomer\XML Source.Outputs[Customer Error Output].Columns[PostalCode]"
                      dataType="nText"
                      externalMetadataColumnId="Package\SCD for DimCustomer\XML Source.Outputs[Customer Error Output].ExternalColumns[PostalCode]"
                      lineageId="Package\SCD for DimCustomer\XML Source.Outputs[Customer Error Output].Columns[PostalCode]"
                      name="PostalCode" />
                    <outputColumn
                      refId="Package\SCD for DimCustomer\XML Source.Outputs[Customer Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\SCD for DimCustomer\XML Source.Outputs[Customer Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\SCD for DimCustomer\XML Source.Outputs[Customer Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\SCD for DimCustomer\XML Source.Outputs[Customer Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\SCD for DimCustomer\XML Source.Outputs[Customer Error Output].ExternalColumns[CustomerKey]"
                      dataType="nText"
                      name="CustomerKey" />
                    <externalMetadataColumn
                      refId="Package\SCD for DimCustomer\XML Source.Outputs[Customer Error Output].ExternalColumns[CustomerId]"
                      dataType="nText"
                      name="CustomerId" />
                    <externalMetadataColumn
                      refId="Package\SCD for DimCustomer\XML Source.Outputs[Customer Error Output].ExternalColumns[Customer]"
                      dataType="nText"
                      name="Customer" />
                    <externalMetadataColumn
                      refId="Package\SCD for DimCustomer\XML Source.Outputs[Customer Error Output].ExternalColumns[City]"
                      dataType="nText"
                      name="City" />
                    <externalMetadataColumn
                      refId="Package\SCD for DimCustomer\XML Source.Outputs[Customer Error Output].ExternalColumns[State-Province]"
                      dataType="nText"
                      name="State-Province" />
                    <externalMetadataColumn
                      refId="Package\SCD for DimCustomer\XML Source.Outputs[Customer Error Output].ExternalColumns[Country-Region]"
                      dataType="nText"
                      name="Country-Region" />
                    <externalMetadataColumn
                      refId="Package\SCD for DimCustomer\XML Source.Outputs[Customer Error Output].ExternalColumns[PostalCode]"
                      dataType="nText"
                      name="PostalCode" />
                  </externalMetadataColumns>
                </output>
              </outputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\SCD for DimCustomer.Paths[Customer]"
              endId="Package\SCD for DimCustomer\Sort 1.Inputs[Sort Input]"
              name="Customer"
              startId="Package\SCD for DimCustomer\XML Source.Outputs[Customer]" />
            <path
              refId="Package\SCD for DimCustomer.Paths[Customer Error Output]"
              endId="Package\SCD for DimCustomer\Log xml file parsing.Inputs[Input 0]"
              name="Customer Error Output"
              startId="Package\SCD for DimCustomer\XML Source.Outputs[Customer Error Output]" />
            <path
              refId="Package\SCD for DimCustomer.Paths[Data Conversion Output]"
              endId="Package\SCD for DimCustomer\Slowly Changing Dimension.Inputs[Slowly Changing Dimension Input]"
              name="Data Conversion Output"
              startId="Package\SCD for DimCustomer\Data Conversion.Outputs[Data Conversion Output]" />
            <path
              refId="Package\SCD for DimCustomer.Paths[Derived Column Output]"
              endId="Package\SCD for DimCustomer\OLE DB Command.Inputs[OLE DB Command Input]"
              name="Derived Column Output"
              startId="Package\SCD for DimCustomer\Derived Column.Outputs[Derived Column Output]" />
            <path
              refId="Package\SCD for DimCustomer.Paths[Derived Column Output1]"
              endId="Package\SCD for DimCustomer\Insert Destination.Inputs[OLE DB Destination Input]"
              name="Derived Column Output"
              startId="Package\SCD for DimCustomer\Derived Column 1.Outputs[Derived Column Output]" />
            <path
              refId="Package\SCD for DimCustomer.Paths[Historical Attribute Inserts Output]"
              endId="Package\SCD for DimCustomer\Derived Column.Inputs[Derived Column Input]"
              name="Historical Attribute Inserts Output"
              startId="Package\SCD for DimCustomer\Slowly Changing Dimension.Outputs[Historical Attribute Inserts Output]" />
            <path
              refId="Package\SCD for DimCustomer.Paths[Merge Join Output]"
              endId="Package\SCD for DimCustomer\Data Conversion.Inputs[Data Conversion Input]"
              name="Merge Join Output"
              startId="Package\SCD for DimCustomer\Merge Join.Outputs[Merge Join Output]" />
            <path
              refId="Package\SCD for DimCustomer.Paths[New Output]"
              endId="Package\SCD for DimCustomer\Union All.Inputs[Union All Input 1]"
              name="New Output"
              startId="Package\SCD for DimCustomer\Slowly Changing Dimension.Outputs[New Output]" />
            <path
              refId="Package\SCD for DimCustomer.Paths[OLE DB Command Output]"
              endId="Package\SCD for DimCustomer\Union All.Inputs[Union All Input 2]"
              name="OLE DB Command Output"
              startId="Package\SCD for DimCustomer\OLE DB Command.Outputs[OLE DB Command Output]" />
            <path
              refId="Package\SCD for DimCustomer.Paths[OLE DB Source Output]"
              endId="Package\SCD for DimCustomer\Sort.Inputs[Sort Input]"
              name="OLE DB Source Output"
              startId="Package\SCD for DimCustomer\OLE DB Source 1.Outputs[OLE DB Source Output]" />
            <path
              refId="Package\SCD for DimCustomer.Paths[Sort Output]"
              endId="Package\SCD for DimCustomer\Merge Join.Inputs[Merge Join Left Input]"
              name="Sort Output"
              startId="Package\SCD for DimCustomer\Sort 1.Outputs[Sort Output]" />
            <path
              refId="Package\SCD for DimCustomer.Paths[Sort Output1]"
              endId="Package\SCD for DimCustomer\Merge Join.Inputs[Merge Join Right Input]"
              name="Sort Output"
              startId="Package\SCD for DimCustomer\Sort.Outputs[Sort Output]" />
            <path
              refId="Package\SCD for DimCustomer.Paths[Union All Output 1]"
              endId="Package\SCD for DimCustomer\Derived Column 1.Inputs[Derived Column Input]"
              name="Union All Output 1"
              startId="Package\SCD for DimCustomer\Union All.Outputs[Union All Output 1]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Update currency data"
      DTS:CreationName="Microsoft.Pipeline"
      DTS:Description="Data Flow Task"
      DTS:DTSID="{013A7716-9816-4D20-9A3E-54E0B2001C82}"
      DTS:ExecutableType="Microsoft.Pipeline"
      DTS:LocaleID="-1"
      DTS:ObjectName="Update currency data"
      DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0" />
      <DTS:ObjectData>
        <pipeline
          version="1">
          <components>
            <component
              refId="Package\Update currency data\Derived Column"
              componentClassID="Microsoft.DerivedColumn"
              contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
              name="Derived Column"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\Update currency data\Derived Column.Inputs[Derived Column Input]"
                  description="Input to the Derived Column Transformation"
                  name="Derived Column Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Update currency data\Derived Column.Inputs[Derived Column Input].Columns[CurrencyDate]"
                      cachedDataType="dbDate"
                      cachedName="CurrencyDate"
                      lineageId="Package\Update currency data\Flat File Source.Outputs[Flat File Source Output].Columns[CurrencyDate]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Update currency data\Derived Column.Outputs[Derived Column Output]"
                  description="Default Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  name="Derived Column Output"
                  synchronousInputId="Package\Update currency data\Derived Column.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Update currency data\Derived Column.Outputs[Derived Column Output].Columns[DateKey]"
                      dataType="i8"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Update currency data\Derived Column.Outputs[Derived Column Output].Columns[DateKey]"
                      name="DateKey"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">(DT_I8)[REPLACE]((DT_WSTR,10)(DT_DBDATE)#{Package\Update currency data\Flat File Source.Outputs[Flat File Source Output].Columns[CurrencyDate]},"-","")</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">(DT_I8)REPLACE((DT_WSTR,10)(DT_DBDATE)CurrencyDate,"-","")</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Update currency data\Derived Column.Outputs[Derived Column Error Output]"
                  description="Error Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Derived Column Error Output"
                  synchronousInputId="Package\Update currency data\Derived Column.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Update currency data\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Update currency data\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Update currency data\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Update currency data\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Update currency data\Flat File Source"
              componentClassID="Microsoft.FlatFileSource"
              contactInfo="Flat File Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Flat File Source"
              localeId="1033"
              name="Flat File Source"
              usesDispositions="true"
              version="1">
              <properties>
                <property
                  dataType="System.Boolean"
                  description="Specifies whether zero-length columns are treated as null."
                  name="RetainNulls">false</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of an output column containing the file name. If no name is specified, no output column containing the file name will be generated."
                  name="FileNameColumnName"></property>
              </properties>
              <connections>
                <connection
                  refId="Package\Update currency data\Flat File Source.Connections[FlatFileConnection]"
                  connectionManagerID="{E979BC50-0E60-423B-BC6F-B358FDD22124}:external"
                  connectionManagerRefId="Project.ConnectionManagers[Flat File Connection Manager]"
                  name="FlatFileConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\Update currency data\Flat File Source.Outputs[Flat File Source Output]"
                  name="Flat File Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Update currency data\Flat File Source.Outputs[Flat File Source Output].Columns[AverageRate]"
                      dataType="r4"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Update currency data\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[AverageRate]"
                      lineageId="Package\Update currency data\Flat File Source.Outputs[Flat File Source Output].Columns[AverageRate]"
                      name="AverageRate"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format."
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Update currency data\Flat File Source.Outputs[Flat File Source Output].Columns[CurrnecyId]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="RedirectRow"
                      externalMetadataColumnId="Package\Update currency data\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[CurrnecyId]"
                      length="3"
                      lineageId="Package\Update currency data\Flat File Source.Outputs[Flat File Source Output].Columns[CurrnecyId]"
                      name="CurrnecyId"
                      truncationRowDisposition="RedirectRow">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format."
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Update currency data\Flat File Source.Outputs[Flat File Source Output].Columns[CurrencyDate]"
                      dataType="dbDate"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Update currency data\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[CurrencyDate]"
                      lineageId="Package\Update currency data\Flat File Source.Outputs[Flat File Source Output].Columns[CurrencyDate]"
                      name="CurrencyDate"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format."
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Update currency data\Flat File Source.Outputs[Flat File Source Output].Columns[EndOfDayRate]"
                      dataType="r4"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Update currency data\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[EndOfDayRate]"
                      lineageId="Package\Update currency data\Flat File Source.Outputs[Flat File Source Output].Columns[EndOfDayRate]"
                      name="EndOfDayRate"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format."
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Update currency data\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[AverageRate]"
                      dataType="r4"
                      name="AverageRate" />
                    <externalMetadataColumn
                      refId="Package\Update currency data\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[CurrnecyId]"
                      dataType="wstr"
                      length="3"
                      name="CurrnecyId" />
                    <externalMetadataColumn
                      refId="Package\Update currency data\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[CurrencyDate]"
                      dataType="dbDate"
                      name="CurrencyDate" />
                    <externalMetadataColumn
                      refId="Package\Update currency data\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[EndOfDayRate]"
                      dataType="r4"
                      name="EndOfDayRate" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\Update currency data\Flat File Source.Outputs[Flat File Source Error Output]"
                  isErrorOut="true"
                  name="Flat File Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Update currency data\Flat File Source.Outputs[Flat File Source Error Output].Columns[Flat File Source Error Output Column]"
                      codePage="1252"
                      dataType="text"
                      description="Flat File Source Error Output Column"
                      lineageId="Package\Update currency data\Flat File Source.Outputs[Flat File Source Error Output].Columns[Flat File Source Error Output Column]"
                      name="Flat File Source Error Output Column" />
                    <outputColumn
                      refId="Package\Update currency data\Flat File Source.Outputs[Flat File Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Update currency data\Flat File Source.Outputs[Flat File Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Update currency data\Flat File Source.Outputs[Flat File Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Update currency data\Flat File Source.Outputs[Flat File Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Update currency data\Log file parsing"
              componentClassID="Microsoft.ManagedComponentHost"
              contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;13"
              description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
              name="Log file parsing"
              version="13">
              <properties>
                <property
                  dataType="System.String"
                  description="Stores the source code of the component"
                  isArray="true"
                  name="SourceCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="30">
                    <arrayElement
                      dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public override void ProcessInput(int InputID, string InputName, PipelineBuffer Buffer, OutputNameMap OutputMap)
    {

        if (InputName.Equals(@"Input 0", StringComparison.Ordinal))
        {
            Input0_ProcessInput(new Input0Buffer(Buffer, GetColumnIndexes(InputID), OutputMap));
        }

    }

    public virtual void Input0_ProcessInput(Input0Buffer Buffer)
    {
        while (Buffer.NextRow())
        {
            Input0_ProcessInputRow(Buffer);
        }
    }

    public virtual void Input0_ProcessInputRow(Input0Buffer Row)
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Data;
using System.Text;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    public override void PreExecute()
    {
        base.PreExecute();
    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called once for every row that passes through the component from Input0.
    ///
    /// Example of reading a value from a column in the the row:
    ///  string zipCode = Row.ZipCode
    ///
    /// Example of writing a value to a column in the row:
    ///  Row.ZipCode = zipCode
    /// </summary>
    /// <param name="Row">The row that is currently passing through the component</param>
    public override void Input0_ProcessInputRow(Input0Buffer Row)
    {
        var currencyIdBytes = Row.FlatFileSourceErrorOutputColumn.GetBlobData(0, Row.FlatFileSourceErrorOutputColumn.ColumnInfo.MaxLength);
        var currencyId = Encoding.Default.GetString(currencyIdBytes);
        var errorText = $"Error on column {Row.ErrorColumn}({ComponentMetaData.GetErrorDescription(Row.ErrorCode)})." +
            $"Error happend on {currencyId}" +
            $" Error code: {Row.ErrorCode}";

        Row.ErrorDescription = errorText;
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Input0Buffer: ScriptBuffer

{
    public Input0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public Int32 ErrorCode
    {
        get
        {
            return Buffer.GetInt32(BufferColumnIndexes[0]);
        }
    }
    public bool ErrorCode_IsNull
    {
        get
        {
            return IsNull(0);
        }
    }

    public Int32 ErrorColumn
    {
        get
        {
            return Buffer.GetInt32(BufferColumnIndexes[1]);
        }
    }
    public bool ErrorColumn_IsNull
    {
        get
        {
            return IsNull(1);
        }
    }

    public BlobColumn FlatFileSourceErrorOutputColumn
    {
        get
        {
            return (BlobColumn)Buffer[BufferColumnIndexes[2]];
        }
    }
    public bool FlatFileSourceErrorOutputColumn_IsNull
    {
        get
        {
            return IsNull(2);
        }
    }

    public String ErrorDescription
    {
        set
        {
            this[3] = value;
        }
    }
    public bool ErrorDescription_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(3);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public bool NextRow()
    {
        return base.NextRow();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_0e69f83c5a164f97a97be75874eb0502.Properties.Settings.get_Default():SC_0e69f83c5a164f97a97be75874eb0502.Properties.Sett" +
    "ings")]

namespace SC_0e69f83c5a164f97a97be75874eb0502.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_0e69f83c5a164f97a97be75874eb0502.csproj]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{24a13314-35fc-4324-800d-69bf6038b2b9}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_0e69f83c5a164f97a97be75874eb0502</RootNamespace>
    <AssemblyName>SC_0e69f83c5a164f97a97be75874eb0502</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptComponent" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" />
        <Host Name="ScriptComponent" GeneratedNamespace="SC_0e69f83c5a164f97a97be75874eb0502" IconIndex="0"></Host>
        <ProjectClient>
          <HostIdentifier>SSIS_SC160</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Project]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>SC_0e69f83c5a164f97a97be75874eb0502</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>SC_0e69f83c5a164f97a97be75874eb0502</msb:DisplayName>
    <msb:ProjectId>{6EF09BEE-9F36-4B5C-9861-5AAA588A0B2A}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="SC_0e69f83c5a164f97a97be75874eb0502.csproj" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="main.cs" />
    <msb:File Include="BufferWrapper.cs" />
    <msb:File Include="ComponentWrapper.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="Properties\Settings.Designer.cs" />
  </msb:ItemGroup>
</c:Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_0e69f83c5a164f97a97be75874eb0502")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_0e69f83c5a164f97a97be75874eb0502")]
[assembly: AssemblyCopyright("Copyright @  2023")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.0.0")]
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_0e69f83c5a164f97a97be75874eb0502.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_0e69f83c5a164f97a97be75874eb0502.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_0e69f83c5a164f97a97be75874eb0502.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_0e69f83c5a164f97a97be75874eb0502.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_0e69f83c5a164f97a97be75874eb0502.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Stores the binary representation of the component"
                  isArray="true"
                  name="BinaryCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="2">
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_0e69f83c5a164f97a97be75874eb0502.dll]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAP0RXWUAAAAAAAAAAOAAIiALATAAABYAAAAIAAAAAAAAgjUA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAADA1AABPAAAAAEAAAEgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAiBUAAAAgAAAAFgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAEgEAAAAQAAAAAYAAAAYAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAHgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAABk
NQAAAAAAAEgAAAACAAUAYCIAABgSAAABAAAAAAAAAHg0AAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKBAAAAoqHgIoEQAACioTMAUAeAAAAAEAABEDbwoAAAYW
A28KAAAGbxIAAAp7EwAACm8UAAAKCigVAAAKBm8WAAAKC3IBAABwA28IAAAGjB0AAAECKBcAAAoD
bwYAAAZvGAAACigZAAAKcjUAAHAHclkAAHADbwYAAAaMHQAAASgaAAAKKBsAAAoMAwhvDAAABioe
AigQAAAGKioCAwQFKBwAAAoqUgJ7HQAACgJ7HgAAChaUbx8AAAoqIgIWKCAAAAoqUgJ7HQAACgJ7
HgAACheUbx8AAAoqIgIXKCAAAAoqZgJ7HQAACgJ7HgAAChiUbyEAAAp0EQAAASoiAhgoIAAACiom
AhkDKCIAAAoqWgMsCAIZKCMAAAoqcnsAAHBzJAAACnoeAiglAAAKKh4CKCYAAAoqfgIoJwAACgIC
cxQAAAZ9AQAABAICcxUAAAZ9AgAABCqSBHIYAQBwGm8oAAAKLBUCBQIDKCkAAAoOBHMFAAAGbxIA
AAYqSisHAgNvEwAABgNvDgAABi3xKgYqOgIoKgAACgIDfQMAAAQqOgIoKgAACgIDfQQAAAQqHgIo
KgAACiqufgUAAAQtHnIoAQBw0AcAAAIoKwAACm8sAAAKcy0AAAqABQAABH4FAAAEKhp+BgAABCoe
AoAGAAAEKhp+BwAABCoeAiguAAAKKi5zGwAABoAHAAAEKgAAAEJTSkIBAAEAAAAAAAwAAAB2NC4w
LjMwMzE5AAAAAAUAbAAAAEgGAAAjfgAAtAYAAMAHAAAjU3RyaW5ncwAAAAB0DgAAnAEAACNVUwAQ
EAAAEAAAACNHVUlEAAAAIBAAAPgBAAAjQmxvYgAAAAAAAAACAAABVxWiAQkBAAAA+gEzABYAAAEA
AAAkAAAACAAAAAcAAAAcAAAADwAAAC4AAAAQAAAAAQAAAAMAAAALAAAADAAAAAEAAAAFAAAAAQAA
AAAAUgMBAAAAAAAGADYC3gUGAMoC3gUGAIIBywUPAFIGAAAGAK8BmwQGABkCmwQGAPoBmwQGALEC
mwQGAFYCmwQGAG8CmwQGAMYBmwQGAOEBDgMKAIoCzwAKAHQFzwAOAGUFzwAKABwFzwAOACUEzwAK
ACYHzwAGAOkGBwQGAGUBywUGAIUF/gUGAAEFhgQSADUBPAMSAJYBPAMSAB0BcQQGAEoB3gUOADAE
zwAGAAUDiAcGAEEABwQWAAEAlQUGACsDBwQGAK0EBwQGAPAEBwQGAPAABwQGAKEABwQGALcHmwQA
AAAARwAAAAAAAQABAAEAEAAaBAAAEAABAAEAAQAQAFgFAAA5AAEABQABABAACAcAAEkAAQAQAAEA
EADPBgAATQADABQAAQAQAJAGAABNAAQAFQAAABAABQZhBk0ABQAWAAABEAC/BmEGZQAHABoABgDP
Br0ABgCQBsEAAQAWB8UAAQAWB8UAEQAOBMkAEQANAc0AEQCDANEAUCAAAAAAxgDoAgYAAQBYIAAA
AADGAPMCBgABAGAgAAAAAMYAlAfVAAEA5CAAAAAAhhi+BQYAAgDsIAAAAACGGL4FWwACAPcgAAAA
AIYIkwDbAAUADCEAAAAAhgh6A4IABQAVIQAAAACGCD0E2wAFACohAAAAAIYIjwOCAAUAMyEAAAAA
hghNBN8ABQBNIQAAAACGCKYDggAFAFYhAAAAAIYIxwQQAAUAYCEAAAAAhgjRA+QABgB3IQAAAACG
AKsHggAHAH8hAAAAAIYA8AaCAAcAhyEAAAAAhhi+BQYABwCnIQAAAADGAHsH6QAHAMwhAAAAAMYB
dAfVAAsA3yEAAAAAxgGUB9UADADhIQAAAACGGL4F8wANAPAhAAAAAIYYvgXzAA4A/yEAAAAAgxi+
BQYADwAHIgAAAACTCIEF+QAPADMiAAAAAJMI9QD+AA8AOiIAAAAAkwgBAQMBDwBCIgAAAACWCPwG
CQEQAEkiAAAAAIYYvgUGABAAUSIAAAAAkRjEBQ4BEAAAAAEArwcAAAEAegUAAAIAmgYAAAMAKgUA
AAEA/wIAAAEA/wIAAAEAUAAAAAIAxQAAAAMAegUAAAQAKgUAAAEAegUAAAEArwcAAAEALAcAAAEA
LAcAAAEA/wIJAL4FAQARAL4FBgAZAL4FCgApAL4FEAAxAL4FEAA5AL4FEABBAL4FEABJAL4FEABR
AL4FEABZAL4FEABhAL4FEABpAL4FBgChAL4FBgDBAL4FFQDRAL4FBgCRAOgCBgCRAPMCBgCJAA0F
IgDZADIDJwCJAG4AKgDhAPwGMQDhACgDNgCRAFgAPADxANwEQQD5AOIGRgD5AOIGTQD5ANsGUwBx
AL4FWwBxAHoFZQBxAJoGaQB5AD4AbQBxAOYDcgB5APUDdwBxAP4DfABxAO0DAQABAb4FEABxAKsH
ggBxAPAGggCRAL4FBgD5AMgGhgCRAK4GjgCZAL4FBgARAbMAlAARAbMHnQCpAL4FowDJAL4FBgAu
AAsAMgEuABMAOwEuABsAWgEuACMAYwEuACsAjAEuADMAjAEuADsAjAEuAEMAYwEuAEsAkgEuAFMA
jAEuAFsAqQFDAGMA8wHhAHsA8wHjAGsA8wEpAXMAWgFJAXMAWgEbAAMAAQAHAAkACAALAAAAlwAS
AQAAfgMWAQAAQQQSAQAAkwMWAQAAUQQaAQAAqgMWAQAA3wQfAQAA1QMWAQAAhQUjAQAAFQEoAQAA
AActAQIABgADAAIABwAFAAIACAAHAAIACQAJAAIACgALAAIACwANAAEADAAPAAEADQARAAIAFwAT
AAIAGAAVAAEAGQAVAAIAGgAXAASAAAABAAAAAAAAAAAAAAAAABoAAAAEAAAAAAAAAAAAAACrAHoA
AAAAABAAAAAAAAAAAAAAALQANgcAAAAAEAAAAAAAAAAAAAAAtABTBwAAAAAEAAAAAAAAAAAAAACr
AAcEAAAAABAAAAAAAAAAAAAAALQANAUAAAAAAAAAAAEAAAAPBgAAAAAAAABJRFRTQ29tcG9uZW50
TWV0YURhdGExMDAAU0NfMGU2OWY4M2M1YTE2NGY5N2E5N2JlNzU4NzRlYjA1MDIAR2V0SW50MzIA
PE1vZHVsZT4ASW5wdXRJRABnZXRfQ29tcG9uZW50TWV0YURhdGEAR2V0QmxvYkRhdGEAbXNjb3Js
aWIAZGVmYXVsdEluc3RhbmNlAGdldF9FcnJvckNvZGUAUnVudGltZVR5cGVIYW5kbGUAR2V0VHlw
ZUZyb21IYW5kbGUASW5wdXROYW1lAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlBpcGVsaW5lAFR5
cGUAZ2V0X0N1bHR1cmUAc2V0X0N1bHR1cmUAcmVzb3VyY2VDdWx0dXJlAEFwcGxpY2F0aW9uU2V0
dGluZ3NCYXNlAEVkaXRvckJyb3dzYWJsZVN0YXRlAENvbXBpbGVyR2VuZXJhdGVkQXR0cmlidXRl
AERlYnVnZ2VyTm9uVXNlckNvZGVBdHRyaWJ1dGUARGVidWdnYWJsZUF0dHJpYnV0ZQBFZGl0b3JC
cm93c2FibGVBdHRyaWJ1dGUAQXNzZW1ibHlUaXRsZUF0dHJpYnV0ZQBBc3NlbWJseVRyYWRlbWFy
a0F0dHJpYnV0ZQBUYXJnZXRGcmFtZXdvcmtBdHRyaWJ1dGUAQXNzZW1ibHlDb25maWd1cmF0aW9u
QXR0cmlidXRlAEFzc2VtYmx5RGVzY3JpcHRpb25BdHRyaWJ1dGUAQ29tcGlsYXRpb25SZWxheGF0
aW9uc0F0dHJpYnV0ZQBBc3NlbWJseVByb2R1Y3RBdHRyaWJ1dGUAQXNzZW1ibHlDb3B5cmlnaHRB
dHRyaWJ1dGUAU1NJU1NjcmlwdENvbXBvbmVudEVudHJ5UG9pbnRBdHRyaWJ1dGUAQXNzZW1ibHlD
b21wYW55QXR0cmlidXRlAFJ1bnRpbWVDb21wYXRpYmlsaXR5QXR0cmlidXRlAFByZUV4ZWN1dGUA
UG9zdEV4ZWN1dGUAdmFsdWUARW5jb2RpbmcAU3lzdGVtLlJ1bnRpbWUuVmVyc2lvbmluZwBHZXRT
dHJpbmcATWF4TGVuZ3RoAFN5c3RlbS5Db21wb25lbnRNb2RlbABTQ18wZTY5ZjgzYzVhMTY0Zjk3
YTk3YmU3NTg3NGViMDUwMi5kbGwAZ2V0X0Vycm9yQ29kZV9Jc051bGwAZ2V0X0Vycm9yQ29sdW1u
X0lzTnVsbABnZXRfRmxhdEZpbGVTb3VyY2VFcnJvck91dHB1dENvbHVtbl9Jc051bGwAc2V0X0Vy
cm9yRGVzY3JpcHRpb25fSXNOdWxsAFNldE51bGwAZ2V0X0l0ZW0Ac2V0X0l0ZW0AU3lzdGVtAHJl
c291cmNlTWFuAFNjcmlwdE1haW4AQmxvYkNvbHVtbgBCdWZmZXJDb2x1bW4AZ2V0X0Vycm9yQ29s
dW1uAGdldF9GbGF0RmlsZVNvdXJjZUVycm9yT3V0cHV0Q29sdW1uAFN5c3RlbS5Db25maWd1cmF0
aW9uAFN5c3RlbS5HbG9iYWxpemF0aW9uAFN5c3RlbS5SZWZsZWN0aW9uAEludmFsaWRPcGVyYXRp
b25FeGNlcHRpb24Ac2V0X0Vycm9yRGVzY3JpcHRpb24AR2V0RXJyb3JEZXNjcmlwdGlvbgBTdHJp
bmdDb21wYXJpc29uAEN1bHR1cmVJbmZvAGdldF9Db2x1bW5JbmZvAE91dHB1dE5hbWVNYXAAT3V0
cHV0TWFwAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRFRTUGlwZWxpbmVXcmFwAElucHV0MEJ1ZmZlcgBQ
aXBlbGluZUJ1ZmZlcgBTY3JpcHRCdWZmZXIAZ2V0X1Jlc291cmNlTWFuYWdlcgBNaWNyb3NvZnQu
U3FsU2VydmVyLkR0cy5QaXBlbGluZS5XcmFwcGVyAC5jdG9yAC5jY3RvcgBTeXN0ZW0uRGlhZ25v
c3RpY3MAU3lzdGVtLlJ1bnRpbWUuQ29tcGlsZXJTZXJ2aWNlcwBTeXN0ZW0uUmVzb3VyY2VzAFND
XzBlNjlmODNjNWExNjRmOTdhOTdiZTc1ODc0ZWIwNTAyLlByb3BlcnRpZXMuUmVzb3VyY2VzLnJl
c291cmNlcwBEZWJ1Z2dpbmdNb2RlcwBTQ18wZTY5ZjgzYzVhMTY0Zjk3YTk3YmU3NTg3NGViMDUw
Mi5Qcm9wZXJ0aWVzAFZhcmlhYmxlcwBCdWZmZXJDb2x1bW5JbmRleGVzAEdldENvbHVtbkluZGV4
ZXMAU2V0dGluZ3MARXF1YWxzAENvbm5lY3Rpb25zAENvbmNhdABGb3JtYXQAT2JqZWN0AEVuZE9m
Um93c2V0AGdldF9EZWZhdWx0AFVzZXJDb21wb25lbnQAUGFyZW50Q29tcG9uZW50AFNjcmlwdENv
bXBvbmVudABNaWNyb3NvZnQuU3FsU2VydmVyLlR4U2NyaXB0AE1pY3Jvc29mdC5TcWxTZXJ2ZXIu
UGlwZWxpbmVIb3N0AElucHV0MF9Qcm9jZXNzSW5wdXQAU3lzdGVtLlRleHQASW5wdXQwX1Byb2Nl
c3NJbnB1dFJvdwBOZXh0Um93AGdldF9Bc3NlbWJseQAAM0UAcgByAG8AcgAgAG8AbgAgAGMAbwBs
AHUAbQBuACAAewAwAH0AKAB7ADEAfQApAC4AACNFAHIAcgBvAHIAIABoAGEAcABwAGUAbgBkACAA
bwBuACAAACEgAEUAcgByAG8AcgAgAGMAbwBkAGUAOgAgAHsAMAB9AACAm0kAcwBOAHUAbABsACAA
cAByAG8AcABlAHIAdAB5ACAAYwBhAG4AbgBvAHQAIABiAGUAIABzAGUAdAAgAHQAbwAgAEYAYQBs
AHMAZQAuACAAQQBzAHMAaQBnAG4AIABhACAAdgBhAGwAdQBlACAAdABvACAAdABoAGUAIABjAG8A
bAB1AG0AbgAgAGkAbgBzAHQAZQBhAGQALgAAD0kAbgBwAHUAdAAgADAAAHFTAEMAXwAwAGUANgA5
AGYAOAAzAGMANQBhADEANgA0AGYAOQA3AGEAOQA3AGIAZQA3ADUAOAA3ADQAZQBiADAANQAwADIA
LgBQAHIAbwBwAGUAcgB0AGkAZQBzAC4AUgBlAHMAbwB1AHIAYwBlAHMAAAAAQzIPl+p0oUKd9rCo
/wtzowAEIAEBCAMgAAEFIAEBEREEIAEBDgUgAQERXQYHAx0FDg4EIAARbQIGCAYgAh0FCAgEAAAS
cQUgAQ4dBQQgABJ5BCABDggGAAMODhwcBQACDg4cBwAEDg4ODg4JIAMBEj0dCBJBAwYSPQMGHQgE
IAEICAQgAQIIBCABHAgFIAIBCBwDIAACByACAg4RgIUFIAEdCAgIAAESgIkRgI0FIAASgJEHIAIB
DhKAkQi3elxWGTTgiQiJhF3NgIDMkQMGEhQDBhIYAwYSSQMGElUDBhJZAwYSIAUgAQESDAMgAAgE
IAASRQQgAQECCSAEAQgOEj0SQQUgAQESSQQAABJVBAAAElkFAAEBElkEAAASIAMAAAEDKAAIAygA
AgQoABJFAygADgQIABJVBAgAElkECAASIAgBAAgAAAAAAB4BAAEAVAIWV3JhcE5vbkV4Y2VwdGlv
blRocm93cwEIAQACAAAAAAAoAQAjU0NfMGU2OWY4M2M1YTE2NGY5N2E5N2JlNzU4NzRlYjA1MDIA
AAUBAAAAABYBABFDb3B5cmlnaHQgQCAgMjAyMwAASQEAGi5ORVRGcmFtZXdvcmssVmVyc2lvbj12
NC43AQBUDhRGcmFtZXdvcmtEaXNwbGF5TmFtZRIuTkVUIEZyYW1ld29yayA0LjcEAQAAALQAAADO
yu++AQAAAJEAAABsU3lzdGVtLlJlc291cmNlcy5SZXNvdXJjZVJlYWRlciwgbXNjb3JsaWIsIFZl
cnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5
MzRlMDg5I1N5c3RlbS5SZXNvdXJjZXMuUnVudGltZVJlc291cmNlU2V0AgAAAAAAAAAAAAAAUEFE
UEFEULQAAABYNQAAAAAAAAAAAAByNQAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAZDUAAAAAAAAA
AAAAAABfQ29yRGxsTWFpbgBtc2NvcmVlLmRsbAAAAAAA/yUAIAAQAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAABABAAAAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAAAABI
AAAAWEAAAOwDAAAAAAAAAAAAAOwDNAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBPAAAA
AAC9BO/+AAABAAAAAQAAAAAAAAABAAAAAAA/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAARAAA
AAEAVgBhAHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBvAG4A
AAAAAAAAsARMAwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAAAoAwAAAQAwADAAMAAw
ADAANABiADAAAAAaAAEAAQBDAG8AbQBtAGUAbgB0AHMAAAAAAAAAIgABAAEAQwBvAG0AcABhAG4A
eQBOAGEAbQBlAAAAAAAAAAAAcAAkAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4AAAAA
AFMAQwBfADAAZQA2ADkAZgA4ADMAYwA1AGEAMQA2ADQAZgA5ADcAYQA5ADcAYgBlADcANQA4ADcA
NABlAGIAMAA1ADAAMgAAADAACAABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAALgAw
AC4AMAAAAHAAKAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAAUwBDAF8AMABlADYAOQBmADgA
MwBjADUAYQAxADYANABmADkANwBhADkANwBiAGUANwA1ADgANwA0AGUAYgAwADUAMAAyAC4AZABs
AGwAAABIABIAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQAAABDAG8AcAB5AHIAaQBnAGgA
dAAgAEAAIAAgADIAMAAyADMAAAAqAAEAAQBMAGUAZwBhAGwAVAByAGEAZABlAG0AYQByAGsAcwAA
AAAAAAAAAHgAKAABAE8AcgBpAGcAaQBuAGEAbABGAGkAbABlAG4AYQBtAGUAAABTAEMAXwAwAGUA
NgA5AGYAOAAzAGMANQBhADEANgA0AGYAOQA3AGEAOQA3AGIAZQA3ADUAOAA3ADQAZQBiADAANQAw
ADIALgBkAGwAbAAAAGgAJAABAFAAcgBvAGQAdQBjAHQATgBhAG0AZQAAAAAAUwBDAF8AMABlADYA
OQBmADgAMwBjADUAYQAxADYANABmADkANwBhADkANwBiAGUANwA1ADgANwA0AGUAYgAwADUAMAAy
AAAANAAIAAEAUAByAG8AZAB1AGMAdABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgAwAC4AMAAAADgA
CAABAEEAcwBzAGUAbQBiAGwAeQAgAFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADAALgAwAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAAAAwAAACENQAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                  name="VSTAProjectName"
                  typeConverter="NOTBROWSABLE">SC_0e69f83c5a164f97a97be75874eb0502</property>
                <property
                  dataType="System.String"
                  description="Specifies the programming language used by the script."
                  name="ScriptLanguage"
                  typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read-only variables."
                  name="ReadOnlyVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg"></property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read/write variables."
                  name="ReadWriteVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg"></property>
                <property
                  dataType="System.String"
                  description="List of breakpoints present on the script."
                  isArray="true"
                  name="BreakpointCollection"
                  typeConverter="NOTBROWSABLE">
                  <arrayElements
                    arrayElementCount="0" />
                </property>
                <property
                  dataType="System.String"
                  description="Checksum to match component metedata against compiled codes."
                  name="MetadataChecksum140"
                  typeConverter="NOTBROWSABLE">15</property>
                <property
                  dataType="System.String"
                  name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Update currency data\Log file parsing.Inputs[Input 0]"
                  hasSideEffects="true"
                  name="Input 0">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Update currency data\Log file parsing.Inputs[Input 0].Columns[ErrorCode]"
                      cachedDataType="i4"
                      cachedName="ErrorCode"
                      lineageId="Package\Update currency data\Flat File Source.Outputs[Flat File Source Error Output].Columns[ErrorCode]" />
                    <inputColumn
                      refId="Package\Update currency data\Log file parsing.Inputs[Input 0].Columns[ErrorColumn]"
                      cachedDataType="i4"
                      cachedName="ErrorColumn"
                      lineageId="Package\Update currency data\Flat File Source.Outputs[Flat File Source Error Output].Columns[ErrorColumn]" />
                    <inputColumn
                      refId="Package\Update currency data\Log file parsing.Inputs[Input 0].Columns[Flat File Source Error Output Column]"
                      cachedCodepage="1252"
                      cachedDataType="text"
                      cachedName="Flat File Source Error Output Column"
                      lineageId="Package\Update currency data\Flat File Source.Outputs[Flat File Source Error Output].Columns[Flat File Source Error Output Column]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Update currency data\Log file parsing.Outputs[Output 0]"
                  name="Output 0"
                  synchronousInputId="Package\Update currency data\Log file parsing.Inputs[Input 0]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Update currency data\Log file parsing.Outputs[Output 0].Columns[ErrorDescription]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Update currency data\Log file parsing.Outputs[Output 0].Columns[ErrorDescription]"
                      name="ErrorDescription" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Update currency data\Merge Join"
              componentClassID="Microsoft.MergeJoin"
              contactInfo="Merge Join;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Combine two sorted data flows into one using the FULL, LEFT, or INNER join. We recommend this transformation when data flows can be sorted at their sources."
              name="Merge Join"
              version="1">
              <properties>
                <property
                  dataType="System.Int32"
                  description="Specifies the type of join to perform."
                  name="JoinType"
                  typeConverter="JoinType">1</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the number of columns in the ordering key."
                  name="NumKeyColumns">1</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the null values are treated as equal values."
                  name="TreatNullsAsEqual">true</property>
                <property
                  dataType="System.Int32"
                  description="Indicates the requested maximum buffers per input before blocking."
                  name="MaxBuffersPerInput">5</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Update currency data\Merge Join.Inputs[Merge Join Left Input]"
                  hasSideEffects="true"
                  name="Merge Join Left Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Update currency data\Merge Join.Inputs[Merge Join Left Input].Columns[CurrnecyId]"
                      cachedDataType="wstr"
                      cachedLength="3"
                      cachedName="CurrnecyId"
                      cachedSortKeyPosition="1"
                      lineageId="Package\Update currency data\Sort.Outputs[Sort Output].Columns[CurrnecyId]" />
                    <inputColumn
                      refId="Package\Update currency data\Merge Join.Inputs[Merge Join Left Input].Columns[AverageRate]"
                      cachedDataType="r4"
                      cachedName="AverageRate"
                      lineageId="Package\Update currency data\Sort.Outputs[Sort Output].Columns[AverageRate]" />
                    <inputColumn
                      refId="Package\Update currency data\Merge Join.Inputs[Merge Join Left Input].Columns[CurrencyDate]"
                      cachedDataType="dbDate"
                      cachedName="CurrencyDate"
                      lineageId="Package\Update currency data\Sort.Outputs[Sort Output].Columns[CurrencyDate]" />
                    <inputColumn
                      refId="Package\Update currency data\Merge Join.Inputs[Merge Join Left Input].Columns[EndOfDayRate]"
                      cachedDataType="r4"
                      cachedName="EndOfDayRate"
                      lineageId="Package\Update currency data\Sort.Outputs[Sort Output].Columns[EndOfDayRate]" />
                    <inputColumn
                      refId="Package\Update currency data\Merge Join.Inputs[Merge Join Left Input].Columns[DateKey]"
                      cachedDataType="i8"
                      cachedName="DateKey"
                      lineageId="Package\Update currency data\Sort.Outputs[Sort Output].Columns[DateKey]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
                <input
                  refId="Package\Update currency data\Merge Join.Inputs[Merge Join Right Input]"
                  hasSideEffects="true"
                  name="Merge Join Right Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Update currency data\Merge Join.Inputs[Merge Join Right Input].Columns[CurrencyAlternateKey]"
                      cachedDataType="wstr"
                      cachedLength="3"
                      cachedName="CurrencyAlternateKey"
                      cachedSortKeyPosition="1"
                      lineageId="Package\Update currency data\Sort 1.Outputs[Sort Output].Columns[CurrencyAlternateKey]" />
                    <inputColumn
                      refId="Package\Update currency data\Merge Join.Inputs[Merge Join Right Input].Columns[CurrencyKey]"
                      cachedDataType="i4"
                      cachedName="CurrencyKey"
                      lineageId="Package\Update currency data\Sort 1.Outputs[Sort Output].Columns[CurrencyKey]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Update currency data\Merge Join.Outputs[Merge Join Output]"
                  isSorted="true"
                  name="Merge Join Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Update currency data\Merge Join.Outputs[Merge Join Output].Columns[AverageRate]"
                      dataType="r4"
                      lineageId="Package\Update currency data\Merge Join.Outputs[Merge Join Output].Columns[AverageRate]"
                      name="AverageRate">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Update currency data\Merge Join.Inputs[Merge Join Left Input].Columns[AverageRate]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Update currency data\Merge Join.Outputs[Merge Join Output].Columns[CurrencyDate]"
                      dataType="dbDate"
                      lineageId="Package\Update currency data\Merge Join.Outputs[Merge Join Output].Columns[CurrencyDate]"
                      name="CurrencyDate">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Update currency data\Merge Join.Inputs[Merge Join Left Input].Columns[CurrencyDate]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Update currency data\Merge Join.Outputs[Merge Join Output].Columns[EndOfDayRate]"
                      dataType="r4"
                      lineageId="Package\Update currency data\Merge Join.Outputs[Merge Join Output].Columns[EndOfDayRate]"
                      name="EndOfDayRate">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Update currency data\Merge Join.Inputs[Merge Join Left Input].Columns[EndOfDayRate]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Update currency data\Merge Join.Outputs[Merge Join Output].Columns[DateKey]"
                      dataType="i8"
                      lineageId="Package\Update currency data\Merge Join.Outputs[Merge Join Output].Columns[DateKey]"
                      name="DateKey">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Update currency data\Merge Join.Inputs[Merge Join Left Input].Columns[DateKey]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Update currency data\Merge Join.Outputs[Merge Join Output].Columns[CurrencyKey]"
                      dataType="i4"
                      lineageId="Package\Update currency data\Merge Join.Outputs[Merge Join Output].Columns[CurrencyKey]"
                      name="CurrencyKey">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Update currency data\Merge Join.Inputs[Merge Join Right Input].Columns[CurrencyKey]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Update currency data\Merge Join.Outputs[Merge Join Output].Columns[CurrencyAlternateKey]"
                      dataType="wstr"
                      length="3"
                      lineageId="Package\Update currency data\Merge Join.Outputs[Merge Join Output].Columns[CurrencyAlternateKey]"
                      name="CurrencyAlternateKey"
                      sortKeyPosition="1">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Update currency data\Merge Join.Inputs[Merge Join Right Input].Columns[CurrencyAlternateKey]}</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Update currency data\OLE DB Destination"
              componentClassID="Microsoft.OLEDBDestination"
              contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
              description="OLE DB Destination"
              name="OLE DB Destination"
              usesDispositions="true"
              version="4">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[dbo].[FactCurrencyRate]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">3</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepIdentity">false</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepNulls">false</property>
                <property
                  dataType="System.String"
                  description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                  name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                <property
                  dataType="System.Int32"
                  description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                  name="FastLoadMaxInsertCommitSize">2147483647</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Update currency data\OLE DB Destination.Connections[OleDbConnection]"
                  connectionManagerID="{C54996EB-42F6-4A79-9932-F1C853243153}:external"
                  connectionManagerRefId="Project.ConnectionManagers[localhost.SMOAD]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Update currency data\OLE DB Destination.Inputs[OLE DB Destination Input]"
                  errorOrTruncationOperation="Insert"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="OLE DB Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Update currency data\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[AverageRate]"
                      cachedDataType="r4"
                      cachedName="AverageRate"
                      externalMetadataColumnId="Package\Update currency data\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[AverageRate]"
                      lineageId="Package\Update currency data\Merge Join.Outputs[Merge Join Output].Columns[AverageRate]" />
                    <inputColumn
                      refId="Package\Update currency data\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[EndOfDayRate]"
                      cachedDataType="r4"
                      cachedName="EndOfDayRate"
                      externalMetadataColumnId="Package\Update currency data\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[EndOfDayRate]"
                      lineageId="Package\Update currency data\Merge Join.Outputs[Merge Join Output].Columns[EndOfDayRate]" />
                    <inputColumn
                      refId="Package\Update currency data\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[CurrencyKey]"
                      cachedDataType="i4"
                      cachedName="CurrencyKey"
                      externalMetadataColumnId="Package\Update currency data\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[CurrencyKey]"
                      lineageId="Package\Update currency data\Merge Join.Outputs[Merge Join Output].Columns[CurrencyKey]" />
                    <inputColumn
                      refId="Package\Update currency data\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[DateKey]"
                      cachedDataType="i8"
                      cachedName="DateKey"
                      externalMetadataColumnId="Package\Update currency data\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[DateKey]"
                      lineageId="Package\Update currency data\Merge Join.Outputs[Merge Join Output].Columns[DateKey]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Update currency data\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[CurrencyKey]"
                      dataType="wstr"
                      length="3"
                      name="CurrencyKey" />
                    <externalMetadataColumn
                      refId="Package\Update currency data\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[DateKey]"
                      dataType="i8"
                      name="DateKey" />
                    <externalMetadataColumn
                      refId="Package\Update currency data\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[AverageRate]"
                      dataType="r8"
                      name="AverageRate" />
                    <externalMetadataColumn
                      refId="Package\Update currency data\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[EndOfDayRate]"
                      dataType="r8"
                      name="EndOfDayRate" />
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Update currency data\OLE DB Destination.Outputs[OLE DB Destination Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="OLE DB Destination Error Output"
                  synchronousInputId="Package\Update currency data\OLE DB Destination.Inputs[OLE DB Destination Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Update currency data\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Update currency data\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Update currency data\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Update currency data\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Update currency data\OLE DB Source"
              componentClassID="Microsoft.OLEDBSource"
              contactInfo="OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7"
              description="OLE DB Source"
              name="OLE DB Source"
              usesDispositions="true"
              version="7">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[dbo].[DimCurrency]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.String"
                  description="The variable that contains the SQL command to be executed."
                  name="SqlCommandVariable"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">0</property>
                <property
                  dataType="System.String"
                  description="The mappings between the parameters in the SQL command and variables."
                  name="ParameterMapping"></property>
              </properties>
              <connections>
                <connection
                  refId="Package\Update currency data\OLE DB Source.Connections[OleDbConnection]"
                  connectionManagerID="{CFF339DB-C883-49B9-8E07-071D16A97308}:external"
                  connectionManagerRefId="Project.ConnectionManagers[localhost.AdventureWorksDW2019]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\Update currency data\OLE DB Source.Outputs[OLE DB Source Output]"
                  name="OLE DB Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Update currency data\OLE DB Source.Outputs[OLE DB Source Output].Columns[CurrencyKey]"
                      dataType="i4"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Update currency data\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[CurrencyKey]"
                      lineageId="Package\Update currency data\OLE DB Source.Outputs[OLE DB Source Output].Columns[CurrencyKey]"
                      name="CurrencyKey"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Update currency data\OLE DB Source.Outputs[OLE DB Source Output].Columns[CurrencyAlternateKey]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Update currency data\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[CurrencyAlternateKey]"
                      length="3"
                      lineageId="Package\Update currency data\OLE DB Source.Outputs[OLE DB Source Output].Columns[CurrencyAlternateKey]"
                      name="CurrencyAlternateKey"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Update currency data\OLE DB Source.Outputs[OLE DB Source Output].Columns[CurrencyName]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Update currency data\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[CurrencyName]"
                      length="50"
                      lineageId="Package\Update currency data\OLE DB Source.Outputs[OLE DB Source Output].Columns[CurrencyName]"
                      name="CurrencyName"
                      truncationRowDisposition="FailComponent" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Update currency data\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[CurrencyKey]"
                      dataType="i4"
                      name="CurrencyKey" />
                    <externalMetadataColumn
                      refId="Package\Update currency data\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[CurrencyAlternateKey]"
                      dataType="wstr"
                      length="3"
                      name="CurrencyAlternateKey" />
                    <externalMetadataColumn
                      refId="Package\Update currency data\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[CurrencyName]"
                      dataType="wstr"
                      length="50"
                      name="CurrencyName" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\Update currency data\OLE DB Source.Outputs[OLE DB Source Error Output]"
                  isErrorOut="true"
                  name="OLE DB Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Update currency data\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[CurrencyKey]"
                      dataType="i4"
                      lineageId="Package\Update currency data\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[CurrencyKey]"
                      name="CurrencyKey" />
                    <outputColumn
                      refId="Package\Update currency data\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[CurrencyAlternateKey]"
                      dataType="wstr"
                      length="3"
                      lineageId="Package\Update currency data\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[CurrencyAlternateKey]"
                      name="CurrencyAlternateKey" />
                    <outputColumn
                      refId="Package\Update currency data\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[CurrencyName]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Update currency data\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[CurrencyName]"
                      name="CurrencyName" />
                    <outputColumn
                      refId="Package\Update currency data\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Update currency data\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Update currency data\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Update currency data\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Update currency data\Sort"
              componentClassID="Microsoft.Sort"
              contactInfo="Sort;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Sorts input data in ascending or descending order when it cannot be sorted at its source. For example, sort sales data by 'customer id' before it is written to a flat file and delivered to another department. Note: We do not recommend this transformation for large data flows."
              name="Sort"
              version="1">
              <properties>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the Sort transformation removes rows with duplicate sort values."
                  name="EliminateDuplicates">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the maximum number of threads to use for sorting."
                  expressionType="Notify"
                  name="MaximumThreads">-1</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Update currency data\Sort.Inputs[Sort Input]"
                  name="Sort Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Update currency data\Sort.Inputs[Sort Input].Columns[AverageRate]"
                      cachedDataType="r4"
                      cachedName="AverageRate"
                      lineageId="Package\Update currency data\Flat File Source.Outputs[Flat File Source Output].Columns[AverageRate]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Update currency data\Sort.Inputs[Sort Input].Columns[CurrnecyId]"
                      cachedDataType="wstr"
                      cachedLength="3"
                      cachedName="CurrnecyId"
                      lineageId="Package\Update currency data\Flat File Source.Outputs[Flat File Source Output].Columns[CurrnecyId]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">1</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Update currency data\Sort.Inputs[Sort Input].Columns[CurrencyDate]"
                      cachedDataType="dbDate"
                      cachedName="CurrencyDate"
                      lineageId="Package\Update currency data\Flat File Source.Outputs[Flat File Source Output].Columns[CurrencyDate]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Update currency data\Sort.Inputs[Sort Input].Columns[EndOfDayRate]"
                      cachedDataType="r4"
                      cachedName="EndOfDayRate"
                      lineageId="Package\Update currency data\Flat File Source.Outputs[Flat File Source Output].Columns[EndOfDayRate]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Update currency data\Sort.Inputs[Sort Input].Columns[DateKey]"
                      cachedDataType="i8"
                      cachedName="DateKey"
                      lineageId="Package\Update currency data\Derived Column.Outputs[Derived Column Output].Columns[DateKey]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Update currency data\Sort.Outputs[Sort Output]"
                  isSorted="true"
                  name="Sort Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Update currency data\Sort.Outputs[Sort Output].Columns[AverageRate]"
                      dataType="r4"
                      lineageId="Package\Update currency data\Sort.Outputs[Sort Output].Columns[AverageRate]"
                      name="AverageRate">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Update currency data\Flat File Source.Outputs[Flat File Source Output].Columns[AverageRate]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Update currency data\Sort.Outputs[Sort Output].Columns[CurrnecyId]"
                      dataType="wstr"
                      length="3"
                      lineageId="Package\Update currency data\Sort.Outputs[Sort Output].Columns[CurrnecyId]"
                      name="CurrnecyId"
                      sortKeyPosition="1">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Update currency data\Flat File Source.Outputs[Flat File Source Output].Columns[CurrnecyId]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Update currency data\Sort.Outputs[Sort Output].Columns[CurrencyDate]"
                      dataType="dbDate"
                      lineageId="Package\Update currency data\Sort.Outputs[Sort Output].Columns[CurrencyDate]"
                      name="CurrencyDate">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Update currency data\Flat File Source.Outputs[Flat File Source Output].Columns[CurrencyDate]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Update currency data\Sort.Outputs[Sort Output].Columns[EndOfDayRate]"
                      dataType="r4"
                      lineageId="Package\Update currency data\Sort.Outputs[Sort Output].Columns[EndOfDayRate]"
                      name="EndOfDayRate">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Update currency data\Flat File Source.Outputs[Flat File Source Output].Columns[EndOfDayRate]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Update currency data\Sort.Outputs[Sort Output].Columns[DateKey]"
                      dataType="i8"
                      lineageId="Package\Update currency data\Sort.Outputs[Sort Output].Columns[DateKey]"
                      name="DateKey">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Update currency data\Derived Column.Outputs[Derived Column Output].Columns[DateKey]}</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Update currency data\Sort 1"
              componentClassID="Microsoft.Sort"
              contactInfo="Sort;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Sorts input data in ascending or descending order when it cannot be sorted at its source. For example, sort sales data by 'customer id' before it is written to a flat file and delivered to another department. Note: We do not recommend this transformation for large data flows."
              name="Sort 1"
              version="1">
              <properties>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the Sort transformation removes rows with duplicate sort values."
                  name="EliminateDuplicates">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the maximum number of threads to use for sorting."
                  expressionType="Notify"
                  name="MaximumThreads">-1</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Update currency data\Sort 1.Inputs[Sort Input]"
                  name="Sort Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Update currency data\Sort 1.Inputs[Sort Input].Columns[CurrencyKey]"
                      cachedDataType="i4"
                      cachedName="CurrencyKey"
                      lineageId="Package\Update currency data\OLE DB Source.Outputs[OLE DB Source Output].Columns[CurrencyKey]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Update currency data\Sort 1.Inputs[Sort Input].Columns[CurrencyAlternateKey]"
                      cachedDataType="wstr"
                      cachedLength="3"
                      cachedName="CurrencyAlternateKey"
                      lineageId="Package\Update currency data\OLE DB Source.Outputs[OLE DB Source Output].Columns[CurrencyAlternateKey]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">1</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Update currency data\Sort 1.Inputs[Sort Input].Columns[CurrencyName]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="CurrencyName"
                      lineageId="Package\Update currency data\OLE DB Source.Outputs[OLE DB Source Output].Columns[CurrencyName]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Update currency data\Sort 1.Outputs[Sort Output]"
                  isSorted="true"
                  name="Sort Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Update currency data\Sort 1.Outputs[Sort Output].Columns[CurrencyKey]"
                      dataType="i4"
                      lineageId="Package\Update currency data\Sort 1.Outputs[Sort Output].Columns[CurrencyKey]"
                      name="CurrencyKey">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Update currency data\OLE DB Source.Outputs[OLE DB Source Output].Columns[CurrencyKey]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Update currency data\Sort 1.Outputs[Sort Output].Columns[CurrencyAlternateKey]"
                      dataType="wstr"
                      length="3"
                      lineageId="Package\Update currency data\Sort 1.Outputs[Sort Output].Columns[CurrencyAlternateKey]"
                      name="CurrencyAlternateKey"
                      sortKeyPosition="1">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Update currency data\OLE DB Source.Outputs[OLE DB Source Output].Columns[CurrencyAlternateKey]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Update currency data\Sort 1.Outputs[Sort Output].Columns[CurrencyName]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Update currency data\Sort 1.Outputs[Sort Output].Columns[CurrencyName]"
                      name="CurrencyName">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Update currency data\OLE DB Source.Outputs[OLE DB Source Output].Columns[CurrencyName]}</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\Update currency data.Paths[Derived Column Output]"
              endId="Package\Update currency data\Sort.Inputs[Sort Input]"
              name="Derived Column Output"
              startId="Package\Update currency data\Derived Column.Outputs[Derived Column Output]" />
            <path
              refId="Package\Update currency data.Paths[Flat File Source Error Output]"
              endId="Package\Update currency data\Log file parsing.Inputs[Input 0]"
              name="Flat File Source Error Output"
              startId="Package\Update currency data\Flat File Source.Outputs[Flat File Source Error Output]" />
            <path
              refId="Package\Update currency data.Paths[Flat File Source Output]"
              endId="Package\Update currency data\Derived Column.Inputs[Derived Column Input]"
              name="Flat File Source Output"
              startId="Package\Update currency data\Flat File Source.Outputs[Flat File Source Output]" />
            <path
              refId="Package\Update currency data.Paths[Merge Join Output]"
              endId="Package\Update currency data\OLE DB Destination.Inputs[OLE DB Destination Input]"
              name="Merge Join Output"
              startId="Package\Update currency data\Merge Join.Outputs[Merge Join Output]" />
            <path
              refId="Package\Update currency data.Paths[OLE DB Source Output]"
              endId="Package\Update currency data\Sort 1.Inputs[Sort Input]"
              name="OLE DB Source Output"
              startId="Package\Update currency data\OLE DB Source.Outputs[OLE DB Source Output]" />
            <path
              refId="Package\Update currency data.Paths[Sort Output]"
              endId="Package\Update currency data\Merge Join.Inputs[Merge Join Left Input]"
              name="Sort Output"
              startId="Package\Update currency data\Sort.Outputs[Sort Output]" />
            <path
              refId="Package\Update currency data.Paths[Sort Output1]"
              endId="Package\Update currency data\Merge Join.Inputs[Merge Join Right Input]"
              name="Sort Output"
              startId="Package\Update currency data\Sort 1.Outputs[Sort Output]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:PrecedenceConstraints>
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint]"
      DTS:CreationName=""
      DTS:DTSID="{1EC65058-4C18-440B-A3E3-B4103660B844}"
      DTS:From="Package\Update currency data"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint"
      DTS:To="Package\Clear sales" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 1]"
      DTS:CreationName=""
      DTS:DTSID="{FC1E19FA-2687-4674-9303-89C87B4DF661}"
      DTS:From="Package\Clear sales"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 1"
      DTS:To="Package\Add sale facts" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 2]"
      DTS:CreationName=""
      DTS:DTSID="{4A07D6A0-2F2F-4994-94A9-A4C2C30500F7}"
      DTS:From="Package\Clear currency rates"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 2"
      DTS:To="Package\Update currency data" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 3]"
      DTS:CreationName=""
      DTS:DTSID="{A99ABD1B-7473-4ECF-AD31-5E48942FA69E}"
      DTS:From="Package\Add sale facts"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 3"
      DTS:To="Package\SCD for DimCustomer" />
  </DTS:PrecedenceConstraints>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="16" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="143.2,41.6"
          Id="Package\Add sale facts"
          TopLeft="612.239023787792,301.503701607085" />
        <NodeLayout
          Size="172,41.6"
          Id="Package\Clear currency rates"
          TopLeft="163.333324409194,71.066666172478" />
        <NodeLayout
          Size="130.4,41.6"
          Id="Package\Clear sales"
          TopLeft="484.907380913237,237.466665015353" />
        <NodeLayout
          Size="181.6,41.6"
          Id="Package\SCD for DimCustomer"
          TopLeft="721.666627236541,396.066663912468" />
        <NodeLayout
          Size="177.6,41.6"
          Id="Package\Update currency data"
          TopLeft="371.666646359696,145.599998987516" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 1]"
          TopLeft="615.307380913237,258.266665015353">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="68.531642874555,43.2370365917316"
              Start="0,0"
              End="68.531642874555,35.7370365917316">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="64.531642874555,0" />
                  <mssgle:CubicBezierSegment
                    Point1="64.531642874555,0"
                    Point2="68.531642874555,0"
                    Point3="68.531642874555,4" />
                  <mssgle:LineSegment
                    End="68.531642874555,35.7370365917316" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 2]"
          TopLeft="249.333324409194,112.666666172478">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="211.133321950502,32.9333328150379"
              Start="0,0"
              End="211.133321950502,25.4333328150379">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,12.4666664075189" />
                  <mssgle:CubicBezierSegment
                    Point1="0,12.4666664075189"
                    Point2="0,16.4666664075189"
                    Point3="4,16.4666664075189" />
                  <mssgle:LineSegment
                    End="207.133321950502,16.4666664075189" />
                  <mssgle:CubicBezierSegment
                    Point1="207.133321950502,16.4666664075189"
                    Point2="211.133321950502,16.4666664075189"
                    Point3="211.133321950502,20.4666664075189" />
                  <mssgle:LineSegment
                    End="211.133321950502,25.4333328150379" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint]"
          TopLeft="460.466646359696,187.199998987516">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="89.6407345535405,50.2666660278375"
              Start="0,0"
              End="89.6407345535405,42.7666660278375">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,21.1333330139187" />
                  <mssgle:CubicBezierSegment
                    Point1="0,21.1333330139187"
                    Point2="0,25.1333330139187"
                    Point3="4,25.1333330139187" />
                  <mssgle:LineSegment
                    End="85.6407345535405,25.1333330139187" />
                  <mssgle:CubicBezierSegment
                    Point1="85.6407345535405,25.1333330139187"
                    Point2="89.6407345535405,25.1333330139187"
                    Point3="89.6407345535405,29.1333330139187" />
                  <mssgle:LineSegment
                    End="89.6407345535405,42.7666660278375" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 3]"
          TopLeft="683.839023787792,343.103701607085">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="128.627603448749,52.962962305383"
              Start="0,0"
              End="128.627603448749,45.462962305383">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,22.4814811526915" />
                  <mssgle:CubicBezierSegment
                    Point1="0,22.4814811526915"
                    Point2="0,26.4814811526915"
                    Point3="4,26.4814811526915" />
                  <mssgle:LineSegment
                    End="124.627603448749,26.4814811526915" />
                  <mssgle:CubicBezierSegment
                    Point1="124.627603448749,26.4814811526915"
                    Point2="128.627603448749,26.4814811526915"
                    Point3="128.627603448749,30.4814811526915" />
                  <mssgle:LineSegment
                    End="128.627603448749,45.462962305383" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </Package>
  <TaskHost
    design-time-name="Package\Add sale facts">
    <LayoutInfo>
      <GraphLayout
        Capacity="16" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="156,41.6"
          Id="Package\Add sale facts\Data Conversion"
          TopLeft="80.541662345537,117.766666086151" />
        <NodeLayout
          Size="153.6,41.6"
          Id="Package\Add sale facts\Conditional Split"
          TopLeft="85.2916621257449,313.466664039427" />
        <NodeLayout
          Size="178.4,41.6"
          Id="Package\Add sale facts\Log xml excel parsing"
          TopLeft="285.583321047741,121.566666159067" />
        <NodeLayout
          Size="171.2,41.6"
          Id="Package\Add sale facts\OLE DB Destination"
          TopLeft="400.999994024634,400.799994039535" />
        <NodeLayout
          Size="152.8,41.6"
          Id="Package\Add sale facts\Derived Column"
          TopLeft="84.9999953558049,214.266665521595" />
        <NodeLayout
          Size="140.8,41.6"
          Id="Package\Add sale facts\Excel Source"
          TopLeft="113.208331141414,41.2000001148383" />
        <EdgeLayout
          Id="Package\Add sale facts.Paths[Excel Source Error Output]"
          TopLeft="205.741664474747,82.8000001148383">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="169.041656572994,38.7666660442291"
              Start="0,0"
              End="169.041656572994,31.2666660442291">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,11.7680147281022" />
                  <mssgle:CubicBezierSegment
                    Point1="0,11.7680147281022"
                    Point2="0,15.7680147281022"
                    Point3="4,15.7680147281022" />
                  <mssgle:LineSegment
                    End="165.041656572994,15.7680147281022" />
                  <mssgle:CubicBezierSegment
                    Point1="165.041656572994,15.7680147281022"
                    Point2="169.041656572994,15.7680147281022"
                    Point3="169.041656572994,19.7680147281022" />
                  <mssgle:LineSegment
                    End="169.041656572994,31.2666660442291" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="26.6694415677468,20.7680147281022,115.7027734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Add sale facts.Paths[Derived Column Output]"
          TopLeft="161.745828740775,255.866665521595">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,57.5999985178318"
              Start="0,0"
              End="0,50.0999985178318">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,50.0999985178318" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Add sale facts.Paths[Data Conversion Output]"
          TopLeft="159.970828850671,159.366666086151">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,54.8999994354442"
              Start="0,0"
              End="0,47.3999994354442">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,47.3999994354442" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Add sale facts.Paths[Non Null product Keys]"
          TopLeft="162.091662125745,355.066664039427">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="324.50833189889,45.7333300001087"
              Start="0,0"
              End="324.50833189889,38.2333300001087">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,18.8666650000544" />
                  <mssgle:CubicBezierSegment
                    Point1="0,18.8666650000544"
                    Point2="0,22.8666650000544"
                    Point3="4,22.8666650000544" />
                  <mssgle:LineSegment
                    End="320.50833189889,22.8666650000544" />
                  <mssgle:CubicBezierSegment
                    Point1="320.50833189889,22.8666650000544"
                    Point2="324.50833189889,22.8666650000544"
                    Point3="324.50833189889,26.8666650000544" />
                  <mssgle:LineSegment
                    End="324.50833189889,38.2333300001087" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="112.666587824445,27.8666650000544,99.17515625,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Add sale facts.Paths[Excel Source Output]"
          TopLeft="160.008330076809,82.8000001148383">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,34.9666659713125"
              Start="0,0"
              End="0,27.4666659713125">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,27.4666659713125" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Add sale facts\OLE DB Destination">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Add sale facts\Excel Source">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\SCD for DimCustomer">
    <LayoutInfo>
      <GraphLayout
        Capacity="32" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="135.2,41.6"
          Id="Package\SCD for DimCustomer\XML Source"
          TopLeft="173.9,5.49999999999995" />
        <NodeLayout
          Size="160.8,41.6"
          Id="Package\SCD for DimCustomer\OLE DB Source 1"
          TopLeft="370.1,5.49999999999995" />
        <NodeLayout
          Size="97.6,41.6"
          Id="Package\SCD for DimCustomer\Sort"
          TopLeft="401.7,107.1" />
        <NodeLayout
          Size="129.6,41.6"
          Id="Package\SCD for DimCustomer\Merge Join"
          TopLeft="385.7,207.2555555656" />
        <NodeLayout
          Size="106.4,41.6"
          Id="Package\SCD for DimCustomer\Sort 1"
          TopLeft="234.3,107.1" />
        <NodeLayout
          Size="168,41.6"
          Id="Package\SCD for DimCustomer\Log xml file parsing"
          TopLeft="5.5,107.1" />
        <NodeLayout
          Size="156,41.6"
          Id="Package\SCD for DimCustomer\Data Conversion"
          TopLeft="372.5,310.3" />
        <EdgeLayout
          Id="Package\SCD for DimCustomer.Paths[Sort Output1]"
          TopLeft="450.5,148.7">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="20.2666666666667,58.5555555656"
              Start="0,0"
              End="20.2666666666667,51.0555555656">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,30.7048780547336" />
                  <mssgle:CubicBezierSegment
                    Point1="0,30.7048780547336"
                    Point2="0,34.7048780547336"
                    Point3="4,34.7048780547336" />
                  <mssgle:LineSegment
                    End="16.2666666666667,34.7048780547336" />
                  <mssgle:CubicBezierSegment
                    Point1="16.2666666666667,34.7048780547336"
                    Point2="20.2666666666667,34.7048780547336"
                    Point3="20.2666666666667,38.7048780547336" />
                  <mssgle:LineSegment
                    End="20.2666666666667,51.0555555656" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\SCD for DimCustomer.Paths[Sort Output]"
          TopLeft="287.5,148.7">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="142.733333333333,58.5555555656"
              Start="0,0"
              End="142.733333333333,51.0555555656">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,30.7048780547336" />
                  <mssgle:CubicBezierSegment
                    Point1="0,30.7048780547336"
                    Point2="0,34.7048780547336"
                    Point3="4,34.7048780547336" />
                  <mssgle:LineSegment
                    End="138.733333333333,34.7048780547336" />
                  <mssgle:CubicBezierSegment
                    Point1="138.733333333333,34.7048780547336"
                    Point2="142.733333333333,34.7048780547336"
                    Point3="142.733333333333,38.7048780547336" />
                  <mssgle:LineSegment
                    End="142.733333333333,51.0555555656" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\SCD for DimCustomer.Paths[OLE DB Source Output]"
          TopLeft="450.5,47.1">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,59.9999999999999"
              Start="0,0"
              End="0,52.4999999999999">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.4999999999999" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\SCD for DimCustomer.Paths[Customer Error Output]"
          TopLeft="220.3,47.1">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-130.8,59.9999999999999"
              Start="0,0"
              End="-130.8,52.4999999999999">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.4210526315789" />
                  <mssgle:CubicBezierSegment
                    Point1="0,20.4210526315789"
                    Point2="0,24.4210526315789"
                    Point3="-4,24.4210526315789" />
                  <mssgle:LineSegment
                    End="-126.8,24.4210526315789" />
                  <mssgle:CubicBezierSegment
                    Point1="-126.8,24.4210526315789"
                    Point2="-130.8,24.4210526315789"
                    Point3="-130.8,28.4210526315789" />
                  <mssgle:LineSegment
                    End="-130.8,52.4999999999999" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-116.54890625,29.4210526315789,102.2978125,11.43359375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\SCD for DimCustomer.Paths[Customer]"
          TopLeft="262.7,47.1">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="24.8,59.9999999999999"
              Start="0,0"
              End="24.8,52.4999999999999">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.4210526315789" />
                  <mssgle:CubicBezierSegment
                    Point1="0,20.4210526315789"
                    Point2="0,24.4210526315789"
                    Point3="4,24.4210526315789" />
                  <mssgle:LineSegment
                    End="20.8,24.4210526315789" />
                  <mssgle:CubicBezierSegment
                    Point1="20.8,24.4210526315789"
                    Point2="24.8,24.4210526315789"
                    Point3="24.8,28.4210526315789" />
                  <mssgle:LineSegment
                    End="24.8,52.4999999999999" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\SCD for DimCustomer.Paths[Merge Join Output]"
          TopLeft="450.5,248.8555555656">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,61.4444444343998"
              Start="0,0"
              End="0,53.9444444343998">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,53.9444444343998" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="208,41.6"
          Id="Package\SCD for DimCustomer\Slowly Changing Dimension"
          TopLeft="346.5,411.9" />
        <EdgeLayout
          Id="Package\SCD for DimCustomer.Paths[Data Conversion Output]"
          TopLeft="450.5,351.9">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,59.9999999999999"
              Start="0,0"
              End="0,52.4999999999999">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.4999999999999" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="152.8,41.6"
          Id="Package\SCD for DimCustomer\Derived Column"
          TopLeft="237.1,513.5" />
        <EdgeLayout
          Id="Package\SCD for DimCustomer.Paths[Historical Attribute Inserts Output]"
          TopLeft="417.166666666667,453.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-103.666666666667,59.9999999999999"
              Start="0,0"
              End="-103.666666666667,52.4999999999999">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.2748091603053" />
                  <mssgle:CubicBezierSegment
                    Point1="0,20.2748091603053"
                    Point2="0,24.2748091603053"
                    Point3="-4,24.2748091603053" />
                  <mssgle:LineSegment
                    End="-99.6666666666667,24.2748091603053" />
                  <mssgle:CubicBezierSegment
                    Point1="-99.6666666666667,24.2748091603053"
                    Point2="-103.666666666667,24.2748091603053"
                    Point3="-103.666666666667,28.2748091603053" />
                  <mssgle:LineSegment
                    End="-103.666666666667,52.4999999999999" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-126.889720052083,29.2748091603053,150.1127734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="167.2,41.6"
          Id="Package\SCD for DimCustomer\OLE DB Command"
          TopLeft="221.9,615.099999999999" />
        <EdgeLayout
          Id="Package\SCD for DimCustomer.Paths[Derived Column Output]"
          TopLeft="313.5,555.1">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-8,59.9999999999999"
              Start="0,0"
              End="-8,52.4999999999999">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,25.9999999999999" />
                  <mssgle:CubicBezierSegment
                    Point1="0,25.9999999999999"
                    Point2="0,29.9999999999999"
                    Point3="-4,29.9999999999999" />
                  <mssgle:LineSegment
                    End="-4,29.9999999999999" />
                  <mssgle:CubicBezierSegment
                    Point1="-4,29.9999999999999"
                    Point2="-8,29.9999999999999"
                    Point3="-8,33.9999999999999" />
                  <mssgle:LineSegment
                    End="-8,52.4999999999999" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="120,41.6"
          Id="Package\SCD for DimCustomer\Union All"
          TopLeft="390.5,716.699999999999" />
        <EdgeLayout
          Id="Package\SCD for DimCustomer.Paths[New Output]"
          TopLeft="483.833333333333,453.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-14.6666666666666,263.2"
              Start="0,0"
              End="-14.6666666666666,255.7">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,126.695815115553" />
                  <mssgle:CubicBezierSegment
                    Point1="0,126.695815115553"
                    Point2="0,130.695815115553"
                    Point3="-4,130.695815115553" />
                  <mssgle:LineSegment
                    End="-10.6666666666666,130.695815115553" />
                  <mssgle:CubicBezierSegment
                    Point1="-10.6666666666666,130.695815115553"
                    Point2="-14.6666666666666,130.695815115553"
                    Point3="-14.6666666666666,134.695815115553" />
                  <mssgle:LineSegment
                    End="-14.6666666666666,255.7" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-34.4247200520833,135.695815115553,54.1827734375,11.43359375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\SCD for DimCustomer.Paths[OLE DB Command Output]"
          TopLeft="305.5,656.699999999999">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="126.333333333333,59.9999999999999"
              Start="0,0"
              End="126.333333333333,52.4999999999999">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,31.5263157894736" />
                  <mssgle:CubicBezierSegment
                    Point1="0,31.5263157894736"
                    Point2="0,35.5263157894736"
                    Point3="4,35.5263157894736" />
                  <mssgle:LineSegment
                    End="122.333333333333,35.5263157894736" />
                  <mssgle:CubicBezierSegment
                    Point1="122.333333333333,35.5263157894736"
                    Point2="126.333333333333,35.5263157894736"
                    Point3="126.333333333333,39.5263157894736" />
                  <mssgle:LineSegment
                    End="126.333333333333,52.4999999999999" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="161.6,41.6"
          Id="Package\SCD for DimCustomer\Derived Column 1"
          TopLeft="369.7,818.299999999999" />
        <EdgeLayout
          Id="Package\SCD for DimCustomer.Paths[Union All Output 1]"
          TopLeft="450.5,758.299999999999">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,59.9999999999999"
              Start="0,0"
              End="0,52.4999999999999">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.4999999999999" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="159.2,41.6"
          Id="Package\SCD for DimCustomer\Insert Destination"
          TopLeft="368.753535470813,917.667676783199" />
        <EdgeLayout
          Id="Package\SCD for DimCustomer.Paths[Derived Column Output1]"
          TopLeft="449.426767735407,859.899999999999">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,57.7676767831998"
              Start="0,0"
              End="0,50.2676767831998">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,50.2676767831998" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\SCD for DimCustomer\OLE DB Source 1">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\Update currency data">
    <LayoutInfo>
      <GraphLayout
        Capacity="16" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="171.2,41.6"
          Id="Package\Update currency data\OLE DB Destination"
          TopLeft="295.370354232045,646.148143654915" />
        <NodeLayout
          Size="97.6,41.6"
          Id="Package\Update currency data\Sort"
          TopLeft="122.222215544295,410.888886377767" />
        <NodeLayout
          Size="151.2,41.6"
          Id="Package\Update currency data\Flat File Source"
          TopLeft="105.999998420477,130.999998047948" />
        <NodeLayout
          Size="106.4,41.6"
          Id="Package\Update currency data\Sort 1"
          TopLeft="452.777753039092,407.999997508967" />
        <NodeLayout
          Size="129.6,41.6"
          Id="Package\Update currency data\Merge Join"
          TopLeft="320.370352866106,538.592589626121" />
        <NodeLayout
          Size="148.8,41.6"
          Id="Package\Update currency data\Log file parsing"
          TopLeft="322.481463901608,221.229628083279" />
        <NodeLayout
          Size="152.8,41.6"
          Id="Package\Update currency data\Derived Column"
          TopLeft="87.9999986886978,309.251847667642" />
        <NodeLayout
          Size="152,41.6"
          Id="Package\Update currency data\OLE DB Source"
          TopLeft="429.629606155703,306.222220092791" />
        <EdgeLayout
          Id="Package\Update currency data.Paths[Sort Output1]"
          TopLeft="505.977753039092,449.599997508967">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-100.540733506319,88.9925921171537"
              Start="0,0"
              End="-100.540733506319,81.4925921171537">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,48.7443899621179" />
                  <mssgle:CubicBezierSegment
                    Point1="0,48.7443899621179"
                    Point2="0,52.7443899621179"
                    Point3="-4,52.7443899621179" />
                  <mssgle:LineSegment
                    End="-96.5407335063193,52.7443899621179" />
                  <mssgle:CubicBezierSegment
                    Point1="-96.5407335063193,52.7443899621179"
                    Point2="-100.540733506319,52.7443899621179"
                    Point3="-100.540733506319,56.7443899621179" />
                  <mssgle:LineSegment
                    End="-100.540733506319,81.4925921171537" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Update currency data.Paths[Sort Output]"
          TopLeft="171.022215544295,452.488886377767">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="193.881470655144,86.1037032483536"
              Start="0,0"
              End="193.881470655144,78.6037032483536">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,47.032194852073" />
                  <mssgle:CubicBezierSegment
                    Point1="0,47.032194852073"
                    Point2="0,51.032194852073"
                    Point3="4,51.032194852073" />
                  <mssgle:LineSegment
                    End="189.881470655144,51.032194852073" />
                  <mssgle:CubicBezierSegment
                    Point1="189.881470655144,51.032194852073"
                    Point2="193.881470655144,51.032194852073"
                    Point3="193.881470655144,55.032194852073" />
                  <mssgle:LineSegment
                    End="193.881470655144,78.6037032483536" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Update currency data.Paths[OLE DB Source Output]"
          TopLeft="505.803679597397,347.822220092791">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60.1777774161761"
              Start="0,0"
              End="0,52.6777774161761">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.6777774161761" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Update currency data.Paths[Merge Join Output]"
          TopLeft="383.070353549076,580.192589626121">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,65.9555540287936"
              Start="0,0"
              End="0,58.4555540287936">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,58.4555540287936" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Update currency data.Paths[Flat File Source Output]"
          TopLeft="161.066665221254,172.599998047948">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,136.651849619694"
              Start="0,0"
              End="0,129.151849619694">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,129.151849619694" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Update currency data.Paths[Flat File Source Error Output]"
          TopLeft="205.466665087144,172.599998047948">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="191.414798814464,48.6296300353312"
              Start="0,0"
              End="191.414798814464,41.1296300353312">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,15.7573784855586" />
                  <mssgle:CubicBezierSegment
                    Point1="0,15.7573784855586"
                    Point2="0,19.7573784855586"
                    Point3="4,19.7573784855586" />
                  <mssgle:LineSegment
                    End="187.414798814464,19.7573784855586" />
                  <mssgle:CubicBezierSegment
                    Point1="187.414798814464,19.7573784855586"
                    Point2="191.414798814464,19.7573784855586"
                    Point3="191.414798814464,23.7573784855586" />
                  <mssgle:LineSegment
                    End="191.414798814464,41.1296300353312" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="32.0810126884822,24.7573784855586,127.2527734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Update currency data.Paths[Derived Column Output]"
          TopLeft="167.711107116496,350.851847667642">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60.037038710125"
              Start="0,0"
              End="0,52.537038710125">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.537038710125" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Update currency data\OLE DB Destination">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Update currency data\OLE DB Source">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\SCD for DimCustomer\Slowly Changing Dimension">
    <Properties>
      <Property>
        <Name>SCDMetadata</Name>
        <Value
          type="q2:string">&lt;?xml version="1.0" encoding="utf-16"?&gt;
&lt;SCDWizardMetadata xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;
  &lt;ConnectionID&gt;{C54996EB-42F6-4A79-9932-F1C853243153}&lt;/ConnectionID&gt;
  &lt;TableName&gt;[dbo].[DimClient]&lt;/TableName&gt;
  &lt;InputToColumnsCollection&gt;
    &lt;InputColumnToDBColumn&gt;
      &lt;IdentificationString&gt;Data Conversion.Outputs[Data Conversion Output].Columns[FullName]&lt;/IdentificationString&gt;
      &lt;ColumnName&gt;FullName&lt;/ColumnName&gt;
      &lt;KeyType&gt;None&lt;/KeyType&gt;
      &lt;ChangeType&gt;HistoricalAttribute&lt;/ChangeType&gt;
    &lt;/InputColumnToDBColumn&gt;
    &lt;InputColumnToDBColumn&gt;
      &lt;IdentificationString&gt;Data Conversion.Outputs[Data Conversion Output].Columns[Copy of CustomerKey]&lt;/IdentificationString&gt;
      &lt;ColumnName&gt;id&lt;/ColumnName&gt;
      &lt;KeyType&gt;BusinessKey&lt;/KeyType&gt;
      &lt;ChangeType&gt;None&lt;/ChangeType&gt;
    &lt;/InputColumnToDBColumn&gt;
  &lt;/InputToColumnsCollection&gt;
  &lt;GeneratedComponentsIdentificationStrings&gt;
    &lt;anyType xsi:type="xsd:string"&gt;Derived Column&lt;/anyType&gt;
    &lt;anyType xsi:type="xsd:string"&gt;OLE DB Command&lt;/anyType&gt;
    &lt;anyType xsi:type="xsd:string"&gt;Union All&lt;/anyType&gt;
    &lt;anyType xsi:type="xsd:string"&gt;Derived Column 1&lt;/anyType&gt;
    &lt;anyType xsi:type="xsd:string"&gt;Insert Destination&lt;/anyType&gt;
  &lt;/GeneratedComponentsIdentificationStrings&gt;
  &lt;FailFixedAttribute&gt;true&lt;/FailFixedAttribute&gt;
  &lt;FailChangeAttribute&gt;false&lt;/FailChangeAttribute&gt;
  &lt;UseStartEndDate&gt;false&lt;/UseStartEndDate&gt;
  &lt;CurrentIndicatorColumn&gt;IsValid&lt;/CurrentIndicatorColumn&gt;
  &lt;InferredIndicatorColumn /&gt;
  &lt;ValueCurrent&gt;1&lt;/ValueCurrent&gt;
  &lt;ValueExpired&gt;0&lt;/ValueExpired&gt;
  &lt;StartDateColumn /&gt;
  &lt;EndDateColumn /&gt;
  &lt;DateVariable /&gt;
  &lt;EnableInferredSupport&gt;false&lt;/EnableInferredSupport&gt;
&lt;/SCDWizardMetadata&gt;</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\SCD for DimCustomer\Insert Destination">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>